!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=161)}([function(e,t,n){var r=n(3),o=n(20),i=n(12),a=n(13),l=n(21),s=function(e,t,n){var c,u,d,f,p=e&s.F,g=e&s.G,m=e&s.S,h=e&s.P,b=e&s.B,v=g?r:m?r[t]||(r[t]={}):(r[t]||{}).prototype,y=g?o:o[t]||(o[t]={}),x=y.prototype||(y.prototype={});for(c in g&&(n=t),n)d=((u=!p&&v&&void 0!==v[c])?v:n)[c],f=b&&u?l(d,r):h&&"function"==typeof d?l(Function.call,d):d,v&&a(v,c,d,e&s.U),y[c]!=d&&i(y,c,f),h&&x[c]!=d&&(x[c]=d)};r.core=o,s.F=1,s.G=2,s.S=4,s.P=8,s.B=16,s.W=32,s.U=64,s.R=128,e.exports=s},function(e,t,n){"use strict";e.exports=n(365)},function(e,t,n){var r=n(5);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(51)("wks"),o=n(35),i=n(3).Symbol,a="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=r},function(e,t,n){var r=n(23),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){e.exports=!n(4)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(2),o=n(105),i=n(25),a=Object.defineProperty;t.f=n(8)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(26);e.exports=function(e){return Object(r(e))}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(9),o=n(34);e.exports=n(8)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(3),o=n(12),i=n(16),a=n(35)("src"),l=n(165),s=(""+l).split("toString");n(20).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,n,l){var c="function"==typeof n;c&&(i(n,"name")||o(n,"name",t)),e[t]!==n&&(c&&(i(n,a)||o(n,a,e[t]?""+e[t]:s.join(String(t)))),e===r?e[t]=n:l?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[a]||l.call(this)}))},function(e,t,n){var r=n(0),o=n(4),i=n(26),a=/"/g,l=function(e,t,n,r){var o=String(i(e)),l="<"+t;return""!==n&&(l+=" "+n+'="'+String(r).replace(a,"&quot;")+'"'),l+">"+o+"</"+t+">"};e.exports=function(e,t){var n={};n[e]=t(l),r(r.P+r.F*o((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",n)}},function(e,t,n){"use strict";var r=n(145),o=Object.prototype.toString;function i(e){return"[object Array]"===o.call(e)}function a(e){return void 0===e}function l(e){return null!==e&&"object"==typeof e}function s(e){return"[object Function]"===o.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:l,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:s,isStream:function(e){return l(e)&&s(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:c,merge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]=n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},deepMerge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]="object"==typeof n?e({},n):n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(52),o=n(26);e.exports=function(e){return r(o(e))}},function(e,t,n){var r=n(53),o=n(34),i=n(17),a=n(25),l=n(16),s=n(105),c=Object.getOwnPropertyDescriptor;t.f=n(8)?c:function(e,t){if(e=i(e),t=a(t,!0),s)try{return c(e,t)}catch(e){}if(l(e,t))return o(!r.f.call(e,t),e[t])}},function(e,t,n){var r=n(16),o=n(10),i=n(77)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t){var n=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(11);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){"use strict";var r=n(4);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},function(e,t,n){var r=n(5);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(0),o=n(20),i=n(4);e.exports=function(e,t){var n=(o.Object||{})[e]||Object[e],a={};a[e]=t(n),r(r.S+r.F*i((function(){n(1)})),"Object",a)}},function(e,t,n){var r=n(21),o=n(52),i=n(10),a=n(7),l=n(93);e.exports=function(e,t){var n=1==e,s=2==e,c=3==e,u=4==e,d=6==e,f=5==e||d,p=t||l;return function(t,l,g){for(var m,h,b=i(t),v=o(b),y=r(l,g,3),x=a(v.length),w=0,k=n?p(t,x):s?p(t,0):void 0;x>w;w++)if((f||w in v)&&(h=y(m=v[w],w,b),e))if(n)k[w]=h;else if(h)switch(e){case 3:return!0;case 5:return m;case 6:return w;case 2:k.push(m)}else if(u)return!1;return d?-1:c||u?u:k}}},function(e,t,n){"use strict";if(n(8)){var r=n(31),o=n(3),i=n(4),a=n(0),l=n(69),s=n(101),c=n(21),u=n(41),d=n(34),f=n(12),p=n(43),g=n(23),m=n(7),h=n(133),b=n(37),v=n(25),y=n(16),x=n(48),w=n(5),k=n(10),E=n(90),_=n(38),S=n(19),z=n(39).f,T=n(92),N=n(35),P=n(6),C=n(28),D=n(59),M=n(55),j=n(95),I=n(50),A=n(64),L=n(40),O=n(94),F=n(122),R=n(9),B=n(18),U=R.f,W=B.f,H=o.RangeError,V=o.TypeError,q=o.Uint8Array,$=Array.prototype,K=s.ArrayBuffer,J=s.DataView,G=C(0),Z=C(2),Q=C(3),X=C(4),Y=C(5),ee=C(6),te=D(!0),ne=D(!1),re=j.values,oe=j.keys,ie=j.entries,ae=$.lastIndexOf,le=$.reduce,se=$.reduceRight,ce=$.join,ue=$.sort,de=$.slice,fe=$.toString,pe=$.toLocaleString,ge=P("iterator"),me=P("toStringTag"),he=N("typed_constructor"),be=N("def_constructor"),ve=l.CONSTR,ye=l.TYPED,xe=l.VIEW,we=C(1,(function(e,t){return ze(M(e,e[be]),t)})),ke=i((function(){return 1===new q(new Uint16Array([1]).buffer)[0]})),Ee=!!q&&!!q.prototype.set&&i((function(){new q(1).set({})})),_e=function(e,t){var n=g(e);if(n<0||n%t)throw H("Wrong offset!");return n},Se=function(e){if(w(e)&&ye in e)return e;throw V(e+" is not a typed array!")},ze=function(e,t){if(!w(e)||!(he in e))throw V("It is not a typed array constructor!");return new e(t)},Te=function(e,t){return Ne(M(e,e[be]),t)},Ne=function(e,t){for(var n=0,r=t.length,o=ze(e,r);r>n;)o[n]=t[n++];return o},Pe=function(e,t,n){U(e,t,{get:function(){return this._d[n]}})},Ce=function(e){var t,n,r,o,i,a,l=k(e),s=arguments.length,u=s>1?arguments[1]:void 0,d=void 0!==u,f=T(l);if(null!=f&&!E(f)){for(a=f.call(l),r=[],t=0;!(i=a.next()).done;t++)r.push(i.value);l=r}for(d&&s>2&&(u=c(u,arguments[2],2)),t=0,n=m(l.length),o=ze(this,n);n>t;t++)o[t]=d?u(l[t],t):l[t];return o},De=function(){for(var e=0,t=arguments.length,n=ze(this,t);t>e;)n[e]=arguments[e++];return n},Me=!!q&&i((function(){pe.call(new q(1))})),je=function(){return pe.apply(Me?de.call(Se(this)):Se(this),arguments)},Ie={copyWithin:function(e,t){return F.call(Se(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return X(Se(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return O.apply(Se(this),arguments)},filter:function(e){return Te(this,Z(Se(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Y(Se(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(Se(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){G(Se(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ne(Se(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(Se(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ce.apply(Se(this),arguments)},lastIndexOf:function(e){return ae.apply(Se(this),arguments)},map:function(e){return we(Se(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return le.apply(Se(this),arguments)},reduceRight:function(e){return se.apply(Se(this),arguments)},reverse:function(){for(var e,t=Se(this).length,n=Math.floor(t/2),r=0;r<n;)e=this[r],this[r++]=this[--t],this[t]=e;return this},some:function(e){return Q(Se(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ue.call(Se(this),e)},subarray:function(e,t){var n=Se(this),r=n.length,o=b(e,r);return new(M(n,n[be]))(n.buffer,n.byteOffset+o*n.BYTES_PER_ELEMENT,m((void 0===t?r:b(t,r))-o))}},Ae=function(e,t){return Te(this,de.call(Se(this),e,t))},Le=function(e){Se(this);var t=_e(arguments[1],1),n=this.length,r=k(e),o=m(r.length),i=0;if(o+t>n)throw H("Wrong length!");for(;i<o;)this[t+i]=r[i++]},Oe={entries:function(){return ie.call(Se(this))},keys:function(){return oe.call(Se(this))},values:function(){return re.call(Se(this))}},Fe=function(e,t){return w(e)&&e[ye]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Re=function(e,t){return Fe(e,t=v(t,!0))?d(2,e[t]):W(e,t)},Be=function(e,t,n){return!(Fe(e,t=v(t,!0))&&w(n)&&y(n,"value"))||y(n,"get")||y(n,"set")||n.configurable||y(n,"writable")&&!n.writable||y(n,"enumerable")&&!n.enumerable?U(e,t,n):(e[t]=n.value,e)};ve||(B.f=Re,R.f=Be),a(a.S+a.F*!ve,"Object",{getOwnPropertyDescriptor:Re,defineProperty:Be}),i((function(){fe.call({})}))&&(fe=pe=function(){return ce.call(this)});var Ue=p({},Ie);p(Ue,Oe),f(Ue,ge,Oe.values),p(Ue,{slice:Ae,set:Le,constructor:function(){},toString:fe,toLocaleString:je}),Pe(Ue,"buffer","b"),Pe(Ue,"byteOffset","o"),Pe(Ue,"byteLength","l"),Pe(Ue,"length","e"),U(Ue,me,{get:function(){return this[ye]}}),e.exports=function(e,t,n,s){var c=e+((s=!!s)?"Clamped":"")+"Array",d="get"+e,p="set"+e,g=o[c],b=g||{},v=g&&S(g),y=!g||!l.ABV,k={},E=g&&g.prototype,T=function(e,n){U(e,n,{get:function(){return function(e,n){var r=e._d;return r.v[d](n*t+r.o,ke)}(this,n)},set:function(e){return function(e,n,r){var o=e._d;s&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),o.v[p](n*t+o.o,r,ke)}(this,n,e)},enumerable:!0})};y?(g=n((function(e,n,r,o){u(e,g,c,"_d");var i,a,l,s,d=0,p=0;if(w(n)){if(!(n instanceof K||"ArrayBuffer"==(s=x(n))||"SharedArrayBuffer"==s))return ye in n?Ne(g,n):Ce.call(g,n);i=n,p=_e(r,t);var b=n.byteLength;if(void 0===o){if(b%t)throw H("Wrong length!");if((a=b-p)<0)throw H("Wrong length!")}else if((a=m(o)*t)+p>b)throw H("Wrong length!");l=a/t}else l=h(n),i=new K(a=l*t);for(f(e,"_d",{b:i,o:p,l:a,e:l,v:new J(i)});d<l;)T(e,d++)})),E=g.prototype=_(Ue),f(E,"constructor",g)):i((function(){g(1)}))&&i((function(){new g(-1)}))&&A((function(e){new g,new g(null),new g(1.5),new g(e)}),!0)||(g=n((function(e,n,r,o){var i;return u(e,g,c),w(n)?n instanceof K||"ArrayBuffer"==(i=x(n))||"SharedArrayBuffer"==i?void 0!==o?new b(n,_e(r,t),o):void 0!==r?new b(n,_e(r,t)):new b(n):ye in n?Ne(g,n):Ce.call(g,n):new b(h(n))})),G(v!==Function.prototype?z(b).concat(z(v)):z(b),(function(e){e in g||f(g,e,b[e])})),g.prototype=E,r||(E.constructor=g));var N=E[ge],P=!!N&&("values"==N.name||null==N.name),C=Oe.values;f(g,he,!0),f(E,ye,c),f(E,xe,!0),f(E,be,g),(s?new g(1)[me]==c:me in E)||U(E,me,{get:function(){return c}}),k[c]=g,a(a.G+a.W+a.F*(g!=b),k),a(a.S,c,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*i((function(){b.of.call(g,1)})),c,{from:Ce,of:De}),"BYTES_PER_ELEMENT"in E||f(E,"BYTES_PER_ELEMENT",t),a(a.P,c,Ie),L(c),a(a.P+a.F*Ee,c,{set:Le}),a(a.P+a.F*!P,c,Oe),r||E.toString==fe||(E.toString=fe),a(a.P+a.F*i((function(){new g(1).slice()})),c,{slice:Ae}),a(a.P+a.F*(i((function(){return[1,2].toLocaleString()!=new g([1,2]).toLocaleString()}))||!i((function(){E.toLocaleString.call([1,2])}))),c,{toLocaleString:je}),I[c]=P?N:C,r||P||f(E,ge,C)}}else e.exports=function(){}},function(e,t,n){var r=n(128),o=n(0),i=n(51)("metadata"),a=i.store||(i.store=new(n(131))),l=function(e,t,n){var o=a.get(e);if(!o){if(!n)return;a.set(e,o=new r)}var i=o.get(t);if(!i){if(!n)return;o.set(t,i=new r)}return i};e.exports={store:a,map:l,has:function(e,t,n){var r=l(t,n,!1);return void 0!==r&&r.has(e)},get:function(e,t,n){var r=l(t,n,!1);return void 0===r?void 0:r.get(e)},set:function(e,t,n,r){l(n,r,!0).set(e,t)},keys:function(e,t){var n=l(e,t,!1),r=[];return n&&n.forEach((function(e,t){r.push(t)})),r},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){o(o.S,"Reflect",e)}}},function(e,t){e.exports=!1},function(e,t,n){var r=n(35)("meta"),o=n(5),i=n(16),a=n(9).f,l=0,s=Object.isExtensible||function(){return!0},c=!n(4)((function(){return s(Object.preventExtensions({}))})),u=function(e){a(e,r,{value:{i:"O"+ ++l,w:{}}})},d=e.exports={KEY:r,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!s(e))return"F";if(!t)return"E";u(e)}return e[r].i},getWeak:function(e,t){if(!i(e,r)){if(!s(e))return!0;if(!t)return!1;u(e)}return e[r].w},onFreeze:function(e){return c&&d.NEED&&s(e)&&!i(e,r)&&u(e),e}}},function(e,t,n){var r=n(6)("unscopables"),o=Array.prototype;null==o[r]&&n(12)(o,r,{}),e.exports=function(e){o[r][e]=!0}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(107),o=n(78);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,n){var r=n(23),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(2),o=n(108),i=n(78),a=n(77)("IE_PROTO"),l=function(){},s=function(){var e,t=n(75)("iframe"),r=i.length;for(t.style.display="none",n(79).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),s=e.F;r--;)delete s.prototype[i[r]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(l.prototype=r(e),n=new l,l.prototype=null,n[a]=e):n=s(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(107),o=n(78).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){"use strict";var r=n(3),o=n(9),i=n(8),a=n(6)("species");e.exports=function(e){var t=r[e];i&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(21),o=n(120),i=n(90),a=n(2),l=n(7),s=n(92),c={},u={};(t=e.exports=function(e,t,n,d,f){var p,g,m,h,b=f?function(){return e}:s(e),v=r(n,d,t?2:1),y=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=l(e.length);p>y;y++)if((h=t?v(a(g=e[y])[0],g[1]):v(e[y]))===c||h===u)return h}else for(m=b.call(e);!(g=m.next()).done;)if((h=o(m,v,g.value,t))===c||h===u)return h}).BREAK=c,t.RETURN=u},function(e,t,n){var r=n(13);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},function(e,t,n){var r=n(5);e.exports=function(e,t){if(!r(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(376)),i=r(n(377)),a=r(n(378)),l=r(n(379));t.default=function(){switch(l.default()){case"de":return o.default;case"en":return i.default;case"pl":return a.default;default:return i.default}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){return""+Math.floor(1e6*Math.random())+Math.floor(1e6*Math.random())+Math.floor(1e6*Math.random())}},function(e,t,n){var r=n(9).f,o=n(16),i=n(6)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(22),o=n(6)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(a=r(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,n){var r=n(0),o=n(26),i=n(4),a=n(81),l="["+a+"]",s=RegExp("^"+l+l+"*"),c=RegExp(l+l+"*$"),u=function(e,t,n){var o={},l=i((function(){return!!a[e]()||"​"!="​"[e]()})),s=o[e]=l?t(d):a[e];n&&(o[n]=s),r(r.P+r.F*l,"String",o)},d=u.trim=function(e,t){return e=String(o(e)),1&t&&(e=e.replace(s,"")),2&t&&(e=e.replace(c,"")),e};e.exports=u},function(e,t){e.exports={}},function(e,t,n){var r=n(20),o=n(3),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(31)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(22);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,n){"use strict";var r=n(2);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){var r=n(2),o=n(11),i=n(6)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[i])?t:o(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t,n){var r=!1;return e.map((function(e){n[e]!==t[e]&&(r=!0)})),r}},function(e,t,n){e.exports=n(366)()},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(17),o=n(7),i=n(37);e.exports=function(e){return function(t,n,a){var l,s=r(t),c=o(s.length),u=i(a,c);if(e&&n!=n){for(;c>u;)if((l=s[u++])!=l)return!0}else for(;c>u;u++)if((e||u in s)&&s[u]===n)return e||u||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(22);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(23),o=n(26);e.exports=function(e){return function(t,n){var i,a,l=String(o(t)),s=r(n),c=l.length;return s<0||s>=c?e?"":void 0:(i=l.charCodeAt(s))<55296||i>56319||s+1===c||(a=l.charCodeAt(s+1))<56320||a>57343?e?l.charAt(s):i:e?l.slice(s,s+2):a-56320+(i-55296<<10)+65536}}},function(e,t,n){var r=n(5),o=n(22),i=n(6)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,n){var r=n(6)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(48),o=RegExp.prototype.exec;e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},function(e,t,n){"use strict";n(124);var r=n(13),o=n(12),i=n(4),a=n(26),l=n(6),s=n(96),c=l("species"),u=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),d=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}();e.exports=function(e,t,n){var f=l(e),p=!i((function(){var t={};return t[f]=function(){return 7},7!=""[e](t)})),g=p?!i((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[c]=function(){return n}),n[f](""),!t})):void 0;if(!p||!g||"replace"===e&&!u||"split"===e&&!d){var m=/./[f],h=n(a,f,""[e],(function(e,t,n,r,o){return t.exec===s?p&&!o?{done:!0,value:m.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}})),b=h[0],v=h[1];r(String.prototype,e,b),o(RegExp.prototype,f,2==t?function(e,t){return v.call(e,this,t)}:function(e){return v.call(e,this)})}}},function(e,t,n){var r=n(3).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){"use strict";var r=n(3),o=n(0),i=n(13),a=n(43),l=n(32),s=n(42),c=n(41),u=n(5),d=n(4),f=n(64),p=n(47),g=n(82);e.exports=function(e,t,n,m,h,b){var v=r[e],y=v,x=h?"set":"add",w=y&&y.prototype,k={},E=function(e){var t=w[e];i(w,e,"delete"==e||"has"==e?function(e){return!(b&&!u(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return b&&!u(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,n){return t.call(this,0===e?0:e,n),this})};if("function"==typeof y&&(b||w.forEach&&!d((function(){(new y).entries().next()})))){var _=new y,S=_[x](b?{}:-0,1)!=_,z=d((function(){_.has(1)})),T=f((function(e){new y(e)})),N=!b&&d((function(){for(var e=new y,t=5;t--;)e[x](t,t);return!e.has(-0)}));T||((y=t((function(t,n){c(t,y,e);var r=g(new v,t,y);return null!=n&&s(n,h,r[x],r),r}))).prototype=w,w.constructor=y),(z||N)&&(E("delete"),E("has"),h&&E("get")),(N||S)&&E(x),b&&w.clear&&delete w.clear}else y=m.getConstructor(t,e,h,x),a(y.prototype,n),l.NEED=!0;return p(y,e),k[e]=y,o(o.G+o.W+o.F*(y!=v),k),b||m.setStrong(y,e,h),y}},function(e,t,n){for(var r,o=n(3),i=n(12),a=n(35),l=a("typed_array"),s=a("view"),c=!(!o.ArrayBuffer||!o.DataView),u=c,d=0,f="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");d<9;)(r=o[f[d++]])?(i(r.prototype,l,!0),i(r.prototype,s,!0)):u=!1;e.exports={ABV:c,CONSTR:u,TYPED:l,VIEW:s}},function(e,t,n){"use strict";e.exports=n(31)||!n(4)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete n(3)[e]}))},function(e,t,n){"use strict";var r=n(0);e.exports=function(e){r(r.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,n){"use strict";var r=n(0),o=n(11),i=n(21),a=n(42);e.exports=function(e){r(r.S,e,{from:function(e){var t,n,r,l,s=arguments[1];return o(this),(t=void 0!==s)&&o(s),null==e?new this:(n=[],t?(r=0,l=i(s,arguments[2],2),a(e,!1,(function(e){n.push(l(e,r++))}))):a(e,!1,n.push,n),new this(n))}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addonPrefixPopup=function(){return browser.runtime.getURL("Distribution/Popup/index.html")},t.addonPrefixDashboard=function(){return browser.runtime.getURL("Distribution/Dashboard/index.html")},t.addonPrefixDashboardMenu=function(){return browser.runtime.getURL("Distribution/Dashboard/")},t.addonPrefix=function(){return browser.runtime.getURL("Distribution")},t.addonRoot=function(){return browser.runtime.getURL("")}},,function(e,t,n){var r=n(5),o=n(3).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){var r=n(3),o=n(20),i=n(31),a=n(106),l=n(9).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:r.Symbol||{});"_"==e.charAt(0)||e in t||l(t,e,{value:a.f(e)})}},function(e,t,n){var r=n(51)("keys"),o=n(35);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var r=n(3).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(5),o=n(2),i=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=n(21)(Function.call,n(18).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return i(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:i}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,n){var r=n(5),o=n(80).set;e.exports=function(e,t,n){var i,a=t.constructor;return a!==n&&"function"==typeof a&&(i=a.prototype)!==n.prototype&&r(i)&&o&&o(e,i),e}},function(e,t,n){"use strict";var r=n(23),o=n(26);e.exports=function(e){var t=String(o(this)),n="",i=r(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(n+=t);return n}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var n=Math.expm1;e.exports=!n||n(10)>22025.465794806718||n(10)<22025.465794806718||-2e-17!=n(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:n},function(e,t,n){"use strict";var r=n(31),o=n(0),i=n(13),a=n(12),l=n(50),s=n(87),c=n(47),u=n(19),d=n(6)("iterator"),f=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,g,m,h,b){s(n,t,g);var v,y,x,w=function(e){if(!f&&e in S)return S[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},k=t+" Iterator",E="values"==m,_=!1,S=e.prototype,z=S[d]||S["@@iterator"]||m&&S[m],T=z||w(m),N=m?E?w("entries"):T:void 0,P="Array"==t&&S.entries||z;if(P&&(x=u(P.call(new e)))!==Object.prototype&&x.next&&(c(x,k,!0),r||"function"==typeof x[d]||a(x,d,p)),E&&z&&"values"!==z.name&&(_=!0,T=function(){return z.call(this)}),r&&!b||!f&&!_&&S[d]||a(S,d,T),l[t]=T,l[k]=p,m)if(v={values:E?T:w("values"),keys:h?T:w("keys"),entries:N},b)for(y in v)y in S||i(S,y,v[y]);else o(o.P+o.F*(f||_),t,v);return v}},function(e,t,n){"use strict";var r=n(38),o=n(34),i=n(47),a={};n(12)(a,n(6)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(a,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(63),o=n(26);e.exports=function(e,t,n){if(r(t))throw TypeError("String#"+n+" doesn't accept regex!");return String(o(e))}},function(e,t,n){var r=n(6)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,n){var r=n(50),o=n(6)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){"use strict";var r=n(9),o=n(34);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},function(e,t,n){var r=n(48),o=n(6)("iterator"),i=n(50);e.exports=n(20).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){var r=n(254);e.exports=function(e,t){return new(r(e))(t)}},function(e,t,n){"use strict";var r=n(10),o=n(37),i=n(7);e.exports=function(e){for(var t=r(this),n=i(t.length),a=arguments.length,l=o(a>1?arguments[1]:void 0,n),s=a>2?arguments[2]:void 0,c=void 0===s?n:o(s,n);c>l;)t[l++]=e;return t}},function(e,t,n){"use strict";var r=n(33),o=n(123),i=n(50),a=n(17);e.exports=n(86)(Array,"Array",(function(e,t){this._t=a(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t,n){"use strict";var r,o,i=n(54),a=RegExp.prototype.exec,l=String.prototype.replace,s=a,c=(r=/a/,o=/b*/g,a.call(r,"a"),a.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),u=void 0!==/()??/.exec("")[1];(c||u)&&(s=function(e){var t,n,r,o,s=this;return u&&(n=new RegExp("^"+s.source+"$(?!\\s)",i.call(s))),c&&(t=s.lastIndex),r=a.call(s,e),c&&r&&(s.lastIndex=s.global?r.index+r[0].length:t),u&&r&&r.length>1&&l.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),e.exports=s},function(e,t,n){"use strict";var r=n(62)(!0);e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r,o,i,a=n(21),l=n(113),s=n(79),c=n(75),u=n(3),d=u.process,f=u.setImmediate,p=u.clearImmediate,g=u.MessageChannel,m=u.Dispatch,h=0,b={},v=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},y=function(e){v.call(e.data)};f&&p||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++h]=function(){l("function"==typeof e?e:Function(e),t)},r(h),h},p=function(e){delete b[e]},"process"==n(22)(d)?r=function(e){d.nextTick(a(v,e,1))}:m&&m.now?r=function(e){m.now(a(v,e,1))}:g?(i=(o=new g).port2,o.port1.onmessage=y,r=a(i.postMessage,i,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(r=function(e){u.postMessage(e+"","*")},u.addEventListener("message",y,!1)):r="onreadystatechange"in c("script")?function(e){s.appendChild(c("script")).onreadystatechange=function(){s.removeChild(this),v.call(e)}}:function(e){setTimeout(a(v,e,1),0)}),e.exports={set:f,clear:p}},function(e,t,n){var r=n(3),o=n(98).set,i=r.MutationObserver||r.WebKitMutationObserver,a=r.process,l=r.Promise,s="process"==n(22)(a);e.exports=function(){var e,t,n,c=function(){var r,o;for(s&&(r=a.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(s)n=function(){a.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(l&&l.resolve){var u=l.resolve(void 0);n=function(){u.then(c)}}else n=function(){o.call(r,c)};else{var d=!0,f=document.createTextNode("");new i(c).observe(f,{characterData:!0}),n=function(){f.data=d=!d}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t,n){"use strict";var r=n(11);function o(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}e.exports.f=function(e){return new o(e)}},function(e,t,n){"use strict";var r=n(3),o=n(8),i=n(31),a=n(69),l=n(12),s=n(43),c=n(4),u=n(41),d=n(23),f=n(7),p=n(133),g=n(39).f,m=n(9).f,h=n(94),b=n(47),v=r.ArrayBuffer,y=r.DataView,x=r.Math,w=r.RangeError,k=r.Infinity,E=v,_=x.abs,S=x.pow,z=x.floor,T=x.log,N=x.LN2,P=o?"_b":"buffer",C=o?"_l":"byteLength",D=o?"_o":"byteOffset";function M(e,t,n){var r,o,i,a=new Array(n),l=8*n-t-1,s=(1<<l)-1,c=s>>1,u=23===t?S(2,-24)-S(2,-77):0,d=0,f=e<0||0===e&&1/e<0?1:0;for((e=_(e))!=e||e===k?(o=e!=e?1:0,r=s):(r=z(T(e)/N),e*(i=S(2,-r))<1&&(r--,i*=2),(e+=r+c>=1?u/i:u*S(2,1-c))*i>=2&&(r++,i/=2),r+c>=s?(o=0,r=s):r+c>=1?(o=(e*i-1)*S(2,t),r+=c):(o=e*S(2,c-1)*S(2,t),r=0));t>=8;a[d++]=255&o,o/=256,t-=8);for(r=r<<t|o,l+=t;l>0;a[d++]=255&r,r/=256,l-=8);return a[--d]|=128*f,a}function j(e,t,n){var r,o=8*n-t-1,i=(1<<o)-1,a=i>>1,l=o-7,s=n-1,c=e[s--],u=127&c;for(c>>=7;l>0;u=256*u+e[s],s--,l-=8);for(r=u&(1<<-l)-1,u>>=-l,l+=t;l>0;r=256*r+e[s],s--,l-=8);if(0===u)u=1-a;else{if(u===i)return r?NaN:c?-k:k;r+=S(2,t),u-=a}return(c?-1:1)*r*S(2,u-t)}function I(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function A(e){return[255&e]}function L(e){return[255&e,e>>8&255]}function O(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function F(e){return M(e,52,8)}function R(e){return M(e,23,4)}function B(e,t,n){m(e.prototype,t,{get:function(){return this[n]}})}function U(e,t,n,r){var o=p(+n);if(o+t>e[C])throw w("Wrong index!");var i=e[P]._b,a=o+e[D],l=i.slice(a,a+t);return r?l:l.reverse()}function W(e,t,n,r,o,i){var a=p(+n);if(a+t>e[C])throw w("Wrong index!");for(var l=e[P]._b,s=a+e[D],c=r(+o),u=0;u<t;u++)l[s+u]=c[i?u:t-u-1]}if(a.ABV){if(!c((function(){v(1)}))||!c((function(){new v(-1)}))||c((function(){return new v,new v(1.5),new v(NaN),"ArrayBuffer"!=v.name}))){for(var H,V=(v=function(e){return u(this,v),new E(p(e))}).prototype=E.prototype,q=g(E),$=0;q.length>$;)(H=q[$++])in v||l(v,H,E[H]);i||(V.constructor=v)}var K=new y(new v(2)),J=y.prototype.setInt8;K.setInt8(0,2147483648),K.setInt8(1,2147483649),!K.getInt8(0)&&K.getInt8(1)||s(y.prototype,{setInt8:function(e,t){J.call(this,e,t<<24>>24)},setUint8:function(e,t){J.call(this,e,t<<24>>24)}},!0)}else v=function(e){u(this,v,"ArrayBuffer");var t=p(e);this._b=h.call(new Array(t),0),this[C]=t},y=function(e,t,n){u(this,y,"DataView"),u(e,v,"DataView");var r=e[C],o=d(t);if(o<0||o>r)throw w("Wrong offset!");if(o+(n=void 0===n?r-o:f(n))>r)throw w("Wrong length!");this[P]=e,this[D]=o,this[C]=n},o&&(B(v,"byteLength","_l"),B(y,"buffer","_b"),B(y,"byteLength","_l"),B(y,"byteOffset","_o")),s(y.prototype,{getInt8:function(e){return U(this,1,e)[0]<<24>>24},getUint8:function(e){return U(this,1,e)[0]},getInt16:function(e){var t=U(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=U(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return I(U(this,4,e,arguments[1]))},getUint32:function(e){return I(U(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return j(U(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return j(U(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){W(this,1,e,A,t)},setUint8:function(e,t){W(this,1,e,A,t)},setInt16:function(e,t){W(this,2,e,L,t,arguments[2])},setUint16:function(e,t){W(this,2,e,L,t,arguments[2])},setInt32:function(e,t){W(this,4,e,O,t,arguments[2])},setUint32:function(e,t){W(this,4,e,O,t,arguments[2])},setFloat32:function(e,t){W(this,4,e,R,t,arguments[2])},setFloat64:function(e,t){W(this,8,e,F,t,arguments[2])}});b(v,"ArrayBuffer"),b(y,"DataView"),l(y.prototype,a.VIEW,!0),t.ArrayBuffer=v,t.DataView=y},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=a(n(45)),c=a(n(46)),u=n(73),d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=s.default();return l.createElement("div",{key:c.default(),className:"NoDataImages"},l.createElement("img",{src:u.addonRoot()+"/Images/logo-128.png"}),l.createElement("h1",{className:"h1-title"},e.imagesNoData))},t}(l.Component);t.default=d},function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){var r=n(368);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=f;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",u=t&&t.delimiter||"/";null!=(n=o.exec(e));){var d=n[0],f=n[1],p=n.index;if(l+=e.slice(a,p),a=p+d.length,f)l+=f[1];else{var g=e[a],m=n[2],h=n[3],b=n[4],v=n[5],y=n[6],x=n[7];l&&(r.push(l),l="");var w=null!=m&&null!=g&&g!==m,k="+"===y||"*"===y,E="?"===y||"*"===y,_=n[2]||u,S=b||v;r.push({name:h||i++,prefix:m||"",delimiter:_,optional:E,repeat:k,partial:w,asterisk:!!x,pattern:S?c(S):x?".*":"[^"+s(_)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",d(t)));return function(t,o){for(var i="",l=t||{},s=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var u=e[c];if("string"!=typeof u){var d,f=l[u.name];if(null==f){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(r(f)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var p=0;p<f.length;p++){if(d=s(f[p]),!n[c].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===p?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?encodeURI(f).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(f),!n[c].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');i+=u.prefix+d}}else i+=u}return i}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function u(e,t){return e.keys=t,e}function d(e){return e&&e.sensitive?"":"i"}function f(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=s(c);else{var f=s(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+f+p+")*"),a+=p=c.optional?c.partial?f+"("+p+")?":"(?:"+f+"("+p+"))?":f+"("+p+")"}}var g=s(n.delimiter||"/"),m=a.slice(-g.length)===g;return o||(a=(m?a.slice(0,-g.length):a)+"(?:"+g+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+g+"|$)",u(new RegExp("^"+a,d(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return u(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return u(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return f(i(e,n),t,n)}(e,t,n)}},function(e,t,n){e.exports=!n(8)&&!n(4)((function(){return 7!=Object.defineProperty(n(75)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){t.f=n(6)},function(e,t,n){var r=n(16),o=n(17),i=n(59)(!1),a=n(77)("IE_PROTO");e.exports=function(e,t){var n,l=o(e),s=0,c=[];for(n in l)n!=a&&r(l,n)&&c.push(n);for(;t.length>s;)r(l,n=t[s++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(9),o=n(2),i=n(36);e.exports=n(8)?Object.defineProperties:function(e,t){o(e);for(var n,a=i(t),l=a.length,s=0;l>s;)r.f(e,n=a[s++],t[n]);return e}},function(e,t,n){var r=n(17),o=n(39).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){"use strict";var r=n(8),o=n(36),i=n(60),a=n(53),l=n(10),s=n(52),c=Object.assign;e.exports=!c||n(4)((function(){var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=c({},e)[n]||Object.keys(c({},t)).join("")!=r}))?function(e,t){for(var n=l(e),c=arguments.length,u=1,d=i.f,f=a.f;c>u;)for(var p,g=s(arguments[u++]),m=d?o(g).concat(d(g)):o(g),h=m.length,b=0;h>b;)p=m[b++],r&&!f.call(g,p)||(n[p]=g[p]);return n}:c},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,n){"use strict";var r=n(11),o=n(5),i=n(113),a=[].slice,l={},s=function(e,t,n){if(!(t in l)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";l[t]=Function("F,a","return new F("+r.join(",")+")")}return l[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=a.call(arguments,1),l=function(){var r=n.concat(a.call(arguments));return this instanceof l?s(t,r.length,r):i(t,r,e)};return o(t.prototype)&&(l.prototype=t.prototype),l}},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(3).parseInt,o=n(49).trim,i=n(81),a=/^[-+]?0[xX]/;e.exports=8!==r(i+"08")||22!==r(i+"0x16")?function(e,t){var n=o(String(e),3);return r(n,t>>>0||(a.test(n)?16:10))}:r},function(e,t,n){var r=n(3).parseFloat,o=n(49).trim;e.exports=1/r(n(81)+"-0")!=-1/0?function(e){var t=o(String(e),3),n=r(t);return 0===n&&"-"==t.charAt(0)?-0:n}:r},function(e,t,n){var r=n(22);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=r(e))throw TypeError(t);return+e}},function(e,t,n){var r=n(5),o=Math.floor;e.exports=function(e){return!r(e)&&isFinite(e)&&o(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,n){var r=n(84),o=Math.pow,i=o(2,-52),a=o(2,-23),l=o(2,127)*(2-a),s=o(2,-126);e.exports=Math.fround||function(e){var t,n,o=Math.abs(e),c=r(e);return o<s?c*(o/s/a+1/i-1/i)*s*a:(n=(t=(1+a/i)*o)-(t-o))>l||n!=n?c*(1/0):c*n}},function(e,t,n){var r=n(2);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(11),o=n(10),i=n(52),a=n(7);e.exports=function(e,t,n,l,s){r(t);var c=o(e),u=i(c),d=a(c.length),f=s?d-1:0,p=s?-1:1;if(n<2)for(;;){if(f in u){l=u[f],f+=p;break}if(f+=p,s?f<0:d<=f)throw TypeError("Reduce of empty array with no initial value")}for(;s?f>=0:d>f;f+=p)f in u&&(l=t(l,u[f],f,c));return l}},function(e,t,n){"use strict";var r=n(10),o=n(37),i=n(7);e.exports=[].copyWithin||function(e,t){var n=r(this),a=i(n.length),l=o(e,a),s=o(t,a),c=arguments.length>2?arguments[2]:void 0,u=Math.min((void 0===c?a:o(c,a))-s,a-l),d=1;for(s<l&&l<s+u&&(d=-1,s+=u-1,l+=u-1);u-- >0;)s in n?n[l]=n[s]:delete n[l],l+=d,s+=d;return n}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r=n(96);n(0)({target:"RegExp",proto:!0,forced:r!==/./.exec},{exec:r})},function(e,t,n){n(8)&&"g"!=/./g.flags&&n(9).f(RegExp.prototype,"flags",{configurable:!0,get:n(54)})},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(2),o=n(5),i=n(100);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(129),o=n(44);e.exports=n(68)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=r.getEntry(o(this,"Map"),e);return t&&t.v},set:function(e,t){return r.def(o(this,"Map"),0===e?0:e,t)}},r,!0)},function(e,t,n){"use strict";var r=n(9).f,o=n(38),i=n(43),a=n(21),l=n(41),s=n(42),c=n(86),u=n(123),d=n(40),f=n(8),p=n(32).fastKey,g=n(44),m=f?"_s":"size",h=function(e,t){var n,r=p(t);if("F"!==r)return e._i[r];for(n=e._f;n;n=n.n)if(n.k==t)return n};e.exports={getConstructor:function(e,t,n,c){var u=e((function(e,r){l(e,u,t,"_i"),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[m]=0,null!=r&&s(r,n,e[c],e)}));return i(u.prototype,{clear:function(){for(var e=g(this,t),n=e._i,r=e._f;r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete n[r.i];e._f=e._l=void 0,e[m]=0},delete:function(e){var n=g(this,t),r=h(n,e);if(r){var o=r.n,i=r.p;delete n._i[r.i],r.r=!0,i&&(i.n=o),o&&(o.p=i),n._f==r&&(n._f=o),n._l==r&&(n._l=i),n[m]--}return!!r},forEach:function(e){g(this,t);for(var n,r=a(e,arguments.length>1?arguments[1]:void 0,3);n=n?n.n:this._f;)for(r(n.v,n.k,this);n&&n.r;)n=n.p},has:function(e){return!!h(g(this,t),e)}}),f&&r(u.prototype,"size",{get:function(){return g(this,t)[m]}}),u},def:function(e,t,n){var r,o,i=h(e,t);return i?i.v=n:(e._l=i={i:o=p(t,!0),k:t,v:n,p:r=e._l,n:void 0,r:!1},e._f||(e._f=i),r&&(r.n=i),e[m]++,"F"!==o&&(e._i[o]=i)),e},getEntry:h,setStrong:function(e,t,n){c(e,t,(function(e,n){this._t=g(e,t),this._k=n,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?u(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,u(1))}),n?"entries":"values",!n,!0),d(t)}}},function(e,t,n){"use strict";var r=n(129),o=n(44);e.exports=n(68)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,"Set"),e=0===e?0:e,e)}},r)},function(e,t,n){"use strict";var r,o=n(3),i=n(28)(0),a=n(13),l=n(32),s=n(110),c=n(132),u=n(5),d=n(44),f=n(44),p=!o.ActiveXObject&&"ActiveXObject"in o,g=l.getWeak,m=Object.isExtensible,h=c.ufstore,b=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},v={get:function(e){if(u(e)){var t=g(e);return!0===t?h(d(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(d(this,"WeakMap"),e,t)}},y=e.exports=n(68)("WeakMap",b,v,c,!0,!0);f&&p&&(s((r=c.getConstructor(b,"WeakMap")).prototype,v),l.NEED=!0,i(["delete","has","get","set"],(function(e){var t=y.prototype,n=t[e];a(t,e,(function(t,o){if(u(t)&&!m(t)){this._f||(this._f=new r);var i=this._f[e](t,o);return"set"==e?this:i}return n.call(this,t,o)}))})))},function(e,t,n){"use strict";var r=n(43),o=n(32).getWeak,i=n(2),a=n(5),l=n(41),s=n(42),c=n(28),u=n(16),d=n(44),f=c(5),p=c(6),g=0,m=function(e){return e._l||(e._l=new h)},h=function(){this.a=[]},b=function(e,t){return f(e.a,(function(e){return e[0]===t}))};h.prototype={get:function(e){var t=b(this,e);if(t)return t[1]},has:function(e){return!!b(this,e)},set:function(e,t){var n=b(this,e);n?n[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,n,i){var c=e((function(e,r){l(e,c,t,"_i"),e._t=t,e._i=g++,e._l=void 0,null!=r&&s(r,n,e[i],e)}));return r(c.prototype,{delete:function(e){if(!a(e))return!1;var n=o(e);return!0===n?m(d(this,t)).delete(e):n&&u(n,this._i)&&delete n[this._i]},has:function(e){if(!a(e))return!1;var n=o(e);return!0===n?m(d(this,t)).has(e):n&&u(n,this._i)}}),c},def:function(e,t,n){var r=o(i(t),!0);return!0===r?m(e).set(t,n):r[e._i]=n,e},ufstore:m}},function(e,t,n){var r=n(23),o=n(7);e.exports=function(e){if(void 0===e)return 0;var t=r(e),n=o(t);if(t!==n)throw RangeError("Wrong length!");return n}},function(e,t,n){var r=n(39),o=n(60),i=n(2),a=n(3).Reflect;e.exports=a&&a.ownKeys||function(e){var t=r.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r=n(61),o=n(5),i=n(7),a=n(21),l=n(6)("isConcatSpreadable");e.exports=function e(t,n,s,c,u,d,f,p){for(var g,m,h=u,b=0,v=!!f&&a(f,p,3);b<c;){if(b in s){if(g=v?v(s[b],b,n):s[b],m=!1,o(g)&&(m=void 0!==(m=g[l])?!!m:r(g)),m&&d>0)h=e(t,n,g,i(g.length),h,d-1)-1;else{if(h>=9007199254740991)throw TypeError();t[h]=g}h++}b++}return h}},function(e,t,n){var r=n(7),o=n(83),i=n(26);e.exports=function(e,t,n,a){var l=String(i(e)),s=l.length,c=void 0===n?" ":String(n),u=r(t);if(u<=s||""==c)return l;var d=u-s,f=o.call(c,Math.ceil(d/c.length));return f.length>d&&(f=f.slice(0,d)),a?f+l:l+f}},function(e,t,n){var r=n(8),o=n(36),i=n(17),a=n(53).f;e.exports=function(e){return function(t){for(var n,l=i(t),s=o(l),c=s.length,u=0,d=[];c>u;)n=s[u++],r&&!a.call(l,n)||d.push(e?[n,l[n]]:l[n]);return d}}},function(e,t,n){var r=n(48),o=n(139);e.exports=function(e){return function(){if(r(this)!=e)throw TypeError(e+"#toJSON isn't generic");return o(this)}}},function(e,t,n){var r=n(42);e.exports=function(e,t){var n=[];return r(e,!1,n.push,n,t),n}},function(e,t){e.exports=Math.scale||function(e,t,n,r,o){return 0===arguments.length||e!=e||t!=t||n!=n||r!=r||o!=o?NaN:e===1/0||e===-1/0?e:(e-t)*(o-r)/(n-t)+r}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,s=a(e),c=1;c<arguments.length;c++){for(var u in n=Object(arguments[c]))o.call(n,u)&&(s[u]=n[u]);if(r){l=r(n);for(var d=0;d<l.length;d++)i.call(n,l[d])&&(s[l[d]]=n[l[d]])}}return s}},function(e,t,n){"use strict";e.exports=n(369)},function(e,t,n){(function(n){var r,o,i;o=[],void 0===(i="function"==typeof(r=function(){"use strict";function t(e,t,n){var r=new XMLHttpRequest;r.open("GET",e),r.responseType="blob",r.onload=function(){a(r.response,t,n)},r.onerror=function(){console.error("could not download file")},r.send()}function r(e){var t=new XMLHttpRequest;t.open("HEAD",e,!1);try{t.send()}catch(e){}return 200<=t.status&&299>=t.status}function o(e){try{e.dispatchEvent(new MouseEvent("click"))}catch(n){var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),e.dispatchEvent(t)}}var i="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,a=i.saveAs||("object"!=typeof window||window!==i?function(){}:"download"in HTMLAnchorElement.prototype?function(e,n,a){var l=i.URL||i.webkitURL,s=document.createElement("a");n=n||e.name||"download",s.download=n,s.rel="noopener","string"==typeof e?(s.href=e,s.origin===location.origin?o(s):r(s.href)?t(e,n,a):o(s,s.target="_blank")):(s.href=l.createObjectURL(e),setTimeout((function(){l.revokeObjectURL(s.href)}),4e4),setTimeout((function(){o(s)}),0))}:"msSaveOrOpenBlob"in navigator?function(e,n,i){if(n=n||e.name||"download","string"!=typeof e)navigator.msSaveOrOpenBlob(function(e,t){return void 0===t?t={autoBom:!1}:"object"!=typeof t&&(console.warn("Deprecated: Expected third argument to be a object"),t={autoBom:!t}),t.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e}(e,i),n);else if(r(e))t(e,n,i);else{var a=document.createElement("a");a.href=e,a.target="_blank",setTimeout((function(){o(a)}))}}:function(e,n,r,o){if((o=o||open("","_blank"))&&(o.document.title=o.document.body.innerText="downloading..."),"string"==typeof e)return t(e,n,r);var a="application/octet-stream"===e.type,l=/constructor/i.test(i.HTMLElement)||i.safari,s=/CriOS\/[\d]+/.test(navigator.userAgent);if((s||a&&l)&&"object"==typeof FileReader){var c=new FileReader;c.onloadend=function(){var e=c.result;e=s?e:e.replace(/^data:[^;]*;/,"data:attachment/file;"),o?o.location.href=e:location=e,o=null},c.readAsDataURL(e)}else{var u=i.URL||i.webkitURL,d=u.createObjectURL(e);o?o.location=d:location.href=d,o=null,setTimeout((function(){u.revokeObjectURL(d)}),4e4)}});i.saveAs=a.saveAs=a,e.exports=a})?r.apply(t,o):r)||(e.exports=i)}).call(this,n(58))},function(e,t,n){e.exports=n(386)},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(15);function o(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var a=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))})))})),i=a.join("&")}if(i){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";(function(t){var r=n(15),o=n(392),i={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l,s={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==t&&"[object process]"===Object.prototype.toString.call(t))&&(l=n(149)),l),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(a(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};s.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(e){s.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){s.headers[e]=r.merge(i)})),e.exports=s}).call(this,n(391))},function(e,t,n){"use strict";var r=n(15),o=n(393),i=n(146),a=n(395),l=n(398),s=n(399),c=n(150);e.exports=function(e){return new Promise((function(t,u){var d=e.data,f=e.headers;r.isFormData(d)&&delete f["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var g=e.auth.username||"",m=e.auth.password||"";f.Authorization="Basic "+btoa(g+":"+m)}var h=a(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),i(h,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in p?l(p.getAllResponseHeaders()):null,r={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:n,config:e,request:p};o(t,u,r),p=null}},p.onabort=function(){p&&(u(c("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){u(c("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),u(c(t,e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var b=n(400),v=(e.withCredentials||s(h))&&e.xsrfCookieName?b.read(e.xsrfCookieName):void 0;v&&(f[e.xsrfHeaderName]=v)}if("setRequestHeader"in p&&r.forEach(f,(function(e,t){void 0===d&&"content-type"===t.toLowerCase()?delete f[t]:p.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),u(e),p=null)})),void 0===d&&(d=null),p.send(d)}))}},function(e,t,n){"use strict";var r=n(394);e.exports=function(e,t,n,o,i){var a=new Error(e);return r(a,t,n,o,i)}},function(e,t,n){"use strict";var r=n(15);e.exports=function(e,t){t=t||{};var n={},o=["url","method","params","data"],i=["headers","auth","proxy"],a=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];r.forEach(o,(function(e){void 0!==t[e]&&(n[e]=t[e])})),r.forEach(i,(function(o){r.isObject(t[o])?n[o]=r.deepMerge(e[o],t[o]):void 0!==t[o]?n[o]=t[o]:r.isObject(e[o])?n[o]=r.deepMerge(e[o]):void 0!==e[o]&&(n[o]=e[o])})),r.forEach(a,(function(r){void 0!==t[r]?n[r]=t[r]:void 0!==e[r]&&(n[r]=e[r])}));var l=o.concat(i).concat(a),s=Object.keys(t).filter((function(e){return-1===l.indexOf(e)}));return r.forEach(s,(function(r){void 0!==t[r]?n[r]=t[r]:void 0!==e[r]&&(n[r]=e[r])})),n}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(1)),l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){return a.createElement("div",{className:"loading-animation"})},t}(a.Component);t.default=l},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(1)),c=l(n(56)),u=function(e){function t(t){var n=e.call(this,t)||this;return n.state={selectedType:t.selectedType&&"string"==typeof t.selectedType?t.selectedType:"",title:t.title&&"string"==typeof t.title?t.title:"",callback:t.callback&&"function"==typeof t.callback?t.callback:void 0,iconDown:t.iconDown&&"string"==typeof t.iconDown?t.iconDown:"",iconAttributes:t.iconAttributes&&typeof{}==typeof t.iconAttributes?t.iconAttributes:{}},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return c.default(["selectedType","title","callback","iconDown","iconAttributes"],e,t)?{selectedType:e.selectedType&&"string"==typeof e.selectedType?e.selectedType:"",title:e.title&&"string"==typeof e.title?e.title:"",callback:e.callback&&"function"==typeof e.callback?e.callback:void 0,iconDown:e.iconDown&&"string"==typeof e.iconDown?e.iconDown:"",iconAttributes:e.iconAttributes&&typeof{}==typeof e.iconAttributes?e.iconAttributes:{}}:null},t.prototype.callback=function(e){var t=this.state.callback;t&&t()},t.prototype.render=function(){var e=this,t=this.state,n=t.selectedType,r=t.title,o=t.iconDown,a=t.iconAttributes;return s.createElement("div",{className:"select-wrapper block w-100",onClick:function(t){return e.callback(t)}},s.createElement("span",{className:"select-wrapper-span"},s.createElement("div",{className:"title"},r,s.createElement("span",{className:"selected"},n)),s.createElement("span",i({className:"icon-down"},a),o)))},t}(s.Component);t.default=u},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=a(n(46)),c=function(e){function t(t){var n=e.call(this,t)||this;return n.callback=n.callback.bind(n),n.setValue=n.setValue.bind(n),n.buildListJsx=n.buildListJsx.bind(n),n.removeEscEventListener=n.removeEscEventListener.bind(n),n.addEscEventListener=n.addEscEventListener.bind(n),n.EscListener=n.EscListener.bind(n),n.state={data:t.data&&typeof[]==typeof t.data?t.data:[],display:"boolean"==typeof t.display&&t.display,closeIcon:t.closeIcon?t.closeIcon:"",inputActive:"boolean"==typeof t.inputActive&&t.inputActive,noDataText:t.noDataText&&"string"==typeof t.noDataText?t.noDataText:"No data found",inputPlaceholder:t.inputPlaceholder&&"string"==typeof t.inputPlaceholder?t.inputPlaceholder:"Search here...",filteredData:[],inputValue:"",className:"FullScreenList"},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){var n=!1;return["data","display","closeIcon","inputActive","noDataText","inputPlaceholder"].map((function(r){t[r]!==e[r]&&(n=!0)})),n?{data:e.data,display:e.display,closeIcon:e.closeIcon,inputActive:e.inputActive,noDataText:e.noDataText,inputPlaceholder:e.inputPlaceholder,className:"FullScreenList"}:null},t.prototype.componentDidMount=function(){this.addEscEventListener()},t.prototype.componentWillUnmount=function(){this.removeEscEventListener()},t.prototype.componentDidUpdate=function(){var e=this.state.display;this.removeEscEventListener(),e&&(this.addEscEventListener(),this.FullSceenListNode&&this.FullSceenListNode.click())},t.prototype.addEscEventListener=function(){window.addEventListener("keydown",this.EscListener,!1)},t.prototype.removeEscEventListener=function(){window.removeEventListener("keydown",this.EscListener,!1)},t.prototype.EscListener=function(e){27===e.keyCode&&(this.removeEscEventListener(),this.callback(e,void 0))},t.prototype.callback=function(e,t){var n=this;this.props.callback&&"function"==typeof this.props.callback&&this.setState({className:"FullScreenList back"},(function(){setTimeout((function(){n.props.callback(e,t)}),300)}))},t.prototype.setValue=function(e){var t=this;this.setState({inputValue:e.target.value},(function(){var e=t.state,n=e.data,r=e.inputValue;t.setState({filteredData:n.filter((function(e){return-1!==e.text.toLowerCase().indexOf(r.toLowerCase())}))})}))},t.prototype.buildListJsx=function(e){var t=this;return e.map((function(e,n){return l.createElement("li",{key:s.default(),className:"li li-entry",onClick:function(n){return t.callback(n,e)}},t.state.displayEntryNumber&&l.createElement("span",{className:"index"},n+1),t.state.displayEntryNumber&&l.createElement("span",null,e.text),!t.state.displayEntryNumber&&e.text)}))},t.prototype.render=function(){var e=this,t=this.state,n=t.className,r=t.closeIcon,o=t.data,i=t.display,a=t.filteredData,s=t.inputActive,c=t.inputValue,u=t.noDataText,d=t.inputPlaceholder;return i?l.createElement("div",{ref:function(t){return e.FullSceenListNode=t},className:n},""==r&&l.createElement("p",{className:"icon-close color-white",onClick:function(t){return e.callback(t,void 0)}},"✖"),""!==r&&l.createElement("span",{className:"span-close",onClick:function(t){return e.callback(t,void 0)}},r),l.createElement("div",{className:"holder-ul"},s&&l.createElement("input",{value:c,placeholder:d,onChange:this.setValue}),l.createElement("ul",{className:"ul"},0!==a.length&&this.buildListJsx(a),0===a.length&&0!==c.length&&l.createElement("div",{className:"no-data"},u),0==a.length&&0==c.length&&this.buildListJsx(o)))):null},t}(l.Component);t.default=c},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function l(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],s=t.base?i[0]+t.base:i[0],c=n[s]||0,u="".concat(s," ").concat(c);n[s]=c+1;var d=l(u),f={css:i[1],media:i[2],sourceMap:i[3]};-1!==d?(a[d].references++,a[d].updater(f)):a.push({identifier:u,updater:h(f,t),references:1}),r.push(u)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,d=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function f(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var g=null,m=0;function h(e,t){var n,r,o;if(t.singleton){var i=m++;n=g||(g=c(t)),r=f.bind(null,n,i,!1),o=f.bind(null,n,i,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=s(e,t),c=0;c<n.length;c++){var u=l(n[c]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=i}}}},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(s," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var a,l,s;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&o[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.r(t),n.d(t,"MemoryRouter",(function(){return $})),n.d(t,"Prompt",(function(){return J})),n.d(t,"Redirect",(function(){return X})),n.d(t,"Route",(function(){return ne})),n.d(t,"Router",(function(){return q})),n.d(t,"StaticRouter",(function(){return se})),n.d(t,"Switch",(function(){return ce})),n.d(t,"__RouterContext",(function(){return V})),n.d(t,"generatePath",(function(){return Q})),n.d(t,"matchPath",(function(){return te})),n.d(t,"useHistory",(function(){return fe})),n.d(t,"useLocation",(function(){return pe})),n.d(t,"useParams",(function(){return ge})),n.d(t,"useRouteMatch",(function(){return me})),n.d(t,"withRouter",(function(){return ue})),n.d(t,"BrowserRouter",(function(){return he})),n.d(t,"HashRouter",(function(){return be})),n.d(t,"Link",(function(){return Ee})),n.d(t,"NavLink",(function(){return ze}));var o=n(1),i=n.n(o),a=n(57),l=n.n(a);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e){return"/"===e.charAt(0)}function u(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var d=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&c(e),a=t&&c(t),l=i||a;if(e&&c(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var s=o[o.length-1];n="."===s||".."===s||""===s}else n=!1;for(var d=0,f=o.length;f>=0;f--){var p=o[f];"."===p?u(o,f):".."===p?(u(o,f),d++):d&&(u(o,f),d--)}if(!l)for(;d--;d)o.unshift("..");!l||""===o[0]||o[0]&&c(o[0])||o.unshift("");var g=o.join("/");return n&&"/"!==g.substr(-1)&&(g+="/"),g};function f(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}var p=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=f(t),o=f(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};var g=function(e,t){if(!e)throw new Error("Invariant failed")};function m(e){return"/"===e.charAt(0)?e:"/"+e}function h(e){return"/"===e.charAt(0)?e.substr(1):e}function b(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function v(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function y(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function x(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=s({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=d(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function w(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var k=!("undefined"==typeof window||!window.document||!window.document.createElement);function E(e,t){t(window.confirm(e))}function _(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&(e={}),k||g(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,c=i.getUserConfirmation,u=void 0===c?E:c,d=i.keyLength,f=void 0===d?6:d,p=e.basename?v(m(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=b(i,p)),x(i,r,n)}function S(){return Math.random().toString(36).substr(2,f)}var z=w();function T(e){s(R,e),R.length=n.length,z.notifyListeners(R.location,R.action)}function N(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||D(h(e.state))}function P(){D(h(_()))}var C=!1;function D(e){if(C)C=!1,T();else{z.confirmTransitionTo(e,"POP",u,(function(t){t?T({action:"POP",location:e}):function(e){var t=R.location,n=j.indexOf(t.key);-1===n&&(n=0);var r=j.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(C=!0,A(o))}(e)}))}}var M=h(_()),j=[M.key];function I(e){return p+y(e)}function A(e){n.go(e)}var L=0;function O(e){1===(L+=e)&&1===e?(window.addEventListener("popstate",N),o&&window.addEventListener("hashchange",P)):0===L&&(window.removeEventListener("popstate",N),o&&window.removeEventListener("hashchange",P))}var F=!1;var R={length:n.length,action:"POP",location:M,createHref:I,push:function(e,t){var o=x(e,t,S(),R.location);z.confirmTransitionTo(o,"PUSH",u,(function(e){if(e){var t=I(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var s=j.indexOf(R.location.key),c=j.slice(0,s+1);c.push(o.key),j=c,T({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=x(e,t,S(),R.location);z.confirmTransitionTo(o,"REPLACE",u,(function(e){if(e){var t=I(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var s=j.indexOf(R.location.key);-1!==s&&(j[s]=o.key),T({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:A,goBack:function(){A(-1)},goForward:function(){A(1)},block:function(e){void 0===e&&(e=!1);var t=z.setPrompt(e);return F||(O(1),F=!0),function(){return F&&(F=!1,O(-1)),t()}},listen:function(e){var t=z.appendListener(e);return O(1),function(){O(-1),t()}}};return R}var z={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+h(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:h,decodePath:m},slash:{encodePath:m,decodePath:m}};function T(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function N(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function P(e){window.location.replace(T(window.location.href)+"#"+e)}function C(e){void 0===e&&(e={}),k||g(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?E:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?v(m(e.basename)):"",c=z[a],u=c.encodePath,d=c.decodePath;function f(){var e=d(N());return l&&(e=b(e,l)),x(e)}var p=w();function h(e){s(R,e),R.length=t.length,p.notifyListeners(R.location,R.action)}var _=!1,S=null;function C(){var e,t,n=N(),r=u(n);if(n!==r)P(r);else{var i=f(),a=R.location;if(!_&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(S===y(i))return;S=null,function(e){if(_)_=!1,h();else{p.confirmTransitionTo(e,"POP",o,(function(t){t?h({action:"POP",location:e}):function(e){var t=R.location,n=I.lastIndexOf(y(t));-1===n&&(n=0);var r=I.lastIndexOf(y(e));-1===r&&(r=0);var o=n-r;o&&(_=!0,A(o))}(e)}))}}(i)}}var D=N(),M=u(D);D!==M&&P(M);var j=f(),I=[y(j)];function A(e){t.go(e)}var L=0;function O(e){1===(L+=e)&&1===e?window.addEventListener("hashchange",C):0===L&&window.removeEventListener("hashchange",C)}var F=!1;var R={length:t.length,action:"POP",location:j,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=T(window.location.href)),n+"#"+u(l+y(e))},push:function(e,t){var n=x(e,void 0,void 0,R.location);p.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=y(n),r=u(l+t);if(N()!==r){S=t,function(e){window.location.hash=e}(r);var o=I.lastIndexOf(y(R.location)),i=I.slice(0,o+1);i.push(t),I=i,h({action:"PUSH",location:n})}else h()}}))},replace:function(e,t){var n=x(e,void 0,void 0,R.location);p.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=y(n),r=u(l+t);N()!==r&&(S=t,P(r));var o=I.indexOf(y(R.location));-1!==o&&(I[o]=t),h({action:"REPLACE",location:n})}}))},go:A,goBack:function(){A(-1)},goForward:function(){A(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return F||(O(1),F=!0),function(){return F&&(F=!1,O(-1)),t()}},listen:function(e){var t=p.appendListener(e);return O(1),function(){O(-1),t()}}};return R}function D(e,t,n){return Math.min(Math.max(e,t),n)}function M(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,a=void 0===i?0:i,l=t.keyLength,c=void 0===l?6:l,u=w();function d(e){s(b,e),b.length=b.entries.length,u.notifyListeners(b.location,b.action)}function f(){return Math.random().toString(36).substr(2,c)}var p=D(a,0,o.length-1),g=o.map((function(e){return x(e,void 0,"string"==typeof e?f():e.key||f())})),m=y;function h(e){var t=D(b.index+e,0,b.entries.length-1),r=b.entries[t];u.confirmTransitionTo(r,"POP",n,(function(e){e?d({action:"POP",location:r,index:t}):d()}))}var b={length:g.length,action:"POP",location:g[p],index:p,entries:g,createHref:m,push:function(e,t){var r=x(e,t,f(),b.location);u.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=b.index+1,n=b.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),d({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=x(e,t,f(),b.location);u.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(b.entries[b.index]=r,d({action:"REPLACE",location:r}))}))},go:h,goBack:function(){h(-1)},goForward:function(){h(1)},canGo:function(e){var t=b.index+e;return t>=0&&t<b.entries.length},block:function(e){return void 0===e&&(e=!1),u.setPrompt(e)},listen:function(e){return u.appendListener(e)}};return b}var j=n(103),I=n.n(j),A=n(159),L=n.n(A);function O(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var F=i.a.createContext||function(e,t){var n,r,i="__create-react-context-"+L()()+"__",a=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=O(t.props.value),t}I()(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[i]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(o.Component);a.childContextTypes=((n={})[i]=l.a.object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}I()(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[i]&&this.context[i].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[i]&&this.context[i].off(this.onUpdate)},r.getValue=function(){return this.context[i]?this.context[i].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return s.contextTypes=((r={})[i]=l.a.object,r),{Provider:a,Consumer:s}},R=n(104),B=n.n(R);n(142);function U(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var W=n(160),H=n.n(W),V=function(e){var t=F();return t.displayName=e,t}("Router"),q=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}r(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return i.a.createElement(V.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(i.a.Component);var $=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=M(t.props),t}return r(t,e),t.prototype.render=function(){return i.a.createElement(q,{history:this.history,children:this.props.children})},t}(i.a.Component);var K=function(e){function t(){return e.apply(this,arguments)||this}r(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(i.a.Component);function J(e){var t=e.message,n=e.when,r=void 0===n||n;return i.a.createElement(V.Consumer,null,(function(e){if(e||g(!1),!r||e.staticContext)return null;var n=e.history.block;return i.a.createElement(K,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var G={},Z=0;function Q(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(G[e])return G[e];var t=B.a.compile(e);return Z<1e4&&(G[e]=t,Z++),t}(e)(t,{pretty:!0})}function X(e){var t=e.computedMatch,n=e.to,r=e.push,o=void 0!==r&&r;return i.a.createElement(V.Consumer,null,(function(e){e||g(!1);var r=e.history,a=e.staticContext,l=o?r.push:r.replace,c=x(t?"string"==typeof n?Q(n,t.params):s({},n,{pathname:Q(n.pathname,t.params)}):n);return a?(l(c),null):i.a.createElement(K,{onMount:function(){l(c)},onUpdate:function(e,t){var n,r,o=x(t.to);n=o,r=s({},c,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&p(n.state,r.state)||l(c)},to:n})}))}var Y={},ee=0;function te(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,s=n.sensitive,c=void 0!==s&&s;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=Y[n]||(Y[n]={});if(r[e])return r[e];var o=[],i={regexp:B()(e,o,t),keys:o};return ee<1e4&&(r[e]=i,ee++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,s=o.exec(e);if(!s)return null;var u=s[0],d=s.slice(1),f=e===u;return i&&!f?null:{path:n,url:"/"===n&&""===u?"/":u,isExact:f,params:a.reduce((function(e,t,n){return e[t.name]=d[n],e}),{})}}),null)}var ne=function(e){function t(){return e.apply(this,arguments)||this}return r(t,e),t.prototype.render=function(){var e=this;return i.a.createElement(V.Consumer,null,(function(t){t||g(!1);var n=e.props.location||t.location,r=s({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?te(n.pathname,e.props):t.match}),o=e.props,a=o.children,l=o.component,c=o.render;return Array.isArray(a)&&0===a.length&&(a=null),i.a.createElement(V.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?i.a.createElement(l,r):c?c(r):null:"function"==typeof a?a(r):null)}))},t}(i.a.Component);function re(e){return"/"===e.charAt(0)?e:"/"+e}function oe(e,t){if(!e)return t;var n=re(e);return 0!==t.pathname.indexOf(n)?t:s({},t,{pathname:t.pathname.substr(n.length)})}function ie(e){return"string"==typeof e?e:y(e)}function ae(e){return function(){g(!1)}}function le(){}var se=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return le},t.handleBlock=function(){return le},t}r(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,o=void 0===r?"":r,i=n.context,a=void 0===i?{}:i;a.action=t,a.location=function(e,t){return e?s({},t,{pathname:re(e)+t.pathname}):t}(o,x(e)),a.url=ie(a.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,o=void 0===r?{}:r,a=e.location,l=void 0===a?"/":a,c=U(e,["basename","context","location"]),u={createHref:function(e){return re(n+ie(e))},action:"POP",location:oe(n,x(l)),push:this.handlePush,replace:this.handleReplace,go:ae(),goBack:ae(),goForward:ae(),listen:this.handleListen,block:this.handleBlock};return i.a.createElement(q,s({},c,{history:u,staticContext:o}))},t}(i.a.Component);var ce=function(e){function t(){return e.apply(this,arguments)||this}return r(t,e),t.prototype.render=function(){var e=this;return i.a.createElement(V.Consumer,null,(function(t){t||g(!1);var n,r,o=e.props.location||t.location;return i.a.Children.forEach(e.props.children,(function(e){if(null==r&&i.a.isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?te(o.pathname,s({},e.props,{path:a})):t.match}})),r?i.a.cloneElement(n,{location:o,computedMatch:r}):null}))},t}(i.a.Component);function ue(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=U(t,["wrappedComponentRef"]);return i.a.createElement(V.Consumer,null,(function(t){return t||g(!1),i.a.createElement(e,s({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,H()(n,e)}var de=i.a.useContext;function fe(){return de(V).history}function pe(){return de(V).location}function ge(){var e=de(V).match;return e?e.params:{}}function me(e){return e?te(pe().pathname,e):de(V).match}var he=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=S(t.props),t}return r(t,e),t.prototype.render=function(){return i.a.createElement(q,{history:this.history,children:this.props.children})},t}(i.a.Component);var be=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=C(t.props),t}return r(t,e),t.prototype.render=function(){return i.a.createElement(q,{history:this.history,children:this.props.children})},t}(i.a.Component);var ve=function(e,t){return"function"==typeof e?e(t):e},ye=function(e,t){return"string"==typeof e?x(e,null,null,t):e},xe=function(e){return e},we=i.a.forwardRef;void 0===we&&(we=xe);var ke=we((function(e,t){var n=e.innerRef,r=e.navigate,o=e.onClick,a=U(e,["innerRef","navigate","onClick"]),l=a.target,c=s({},a,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=xe!==we&&t||n,i.a.createElement("a",c)}));var Ee=we((function(e,t){var n=e.component,r=void 0===n?ke:n,o=e.replace,a=e.to,l=e.innerRef,c=U(e,["component","replace","to","innerRef"]);return i.a.createElement(V.Consumer,null,(function(e){e||g(!1);var n=e.history,u=ye(ve(a,e.location),e.location),d=u?n.createHref(u):"",f=s({},c,{href:d,navigate:function(){var t=ve(a,e.location);(o?n.replace:n.push)(t)}});return xe!==we?f.ref=t||l:f.innerRef=l,i.a.createElement(r,f)}))})),_e=function(e){return e},Se=i.a.forwardRef;void 0===Se&&(Se=_e);var ze=Se((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,o=e.activeClassName,a=void 0===o?"active":o,l=e.activeStyle,c=e.className,u=e.exact,d=e.isActive,f=e.location,p=e.strict,m=e.style,h=e.to,b=e.innerRef,v=U(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to","innerRef"]);return i.a.createElement(V.Consumer,null,(function(e){e||g(!1);var n=f||e.location,o=ye(ve(h,n),n),y=o.pathname,x=y&&y.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=x?te(n.pathname,{path:x,exact:u,strict:p}):null,k=!!(d?d(w,n):w),E=k?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(c,a):c,_=k?s({},m,{},l):m,S=s({"aria-current":k&&r||null,className:E,style:_,to:o},v);return _e!==Se?S.ref=t||b:S.innerRef=b,i.a.createElement(Ee,S)}))}))},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(58))},function(e,t,n){"use strict";var r=n(142),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function s(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,u=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,g=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(g){var o=p(n);o&&o!==g&&e(t,o,r)}var a=u(n);d&&(a=a.concat(d(n)));for(var l=s(t),m=s(n),h=0;h<a.length;++h){var b=a[h];if(!(i[b]||r&&r[b]||m&&m[b]||l&&l[b])){var v=f(n,b);try{c(t,b,v)}catch(e){}}}}return t}},function(e,t,n){n(162),e.exports=n(364)},function(e,t,n){"use strict";(function(e){if(n(163),n(360),n(361),e._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");e._babelPolyfill=!0;function t(e,t,n){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:n})}t(String.prototype,"padLeft","".padStart),t(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&t(Array,e,Function.call.bind([][e]))}))}).call(this,n(58))},function(e,t,n){n(164),n(167),n(168),n(169),n(170),n(171),n(172),n(173),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(182),n(183),n(184),n(185),n(186),n(187),n(188),n(189),n(190),n(191),n(192),n(193),n(194),n(195),n(196),n(197),n(198),n(199),n(200),n(201),n(202),n(203),n(204),n(205),n(206),n(207),n(208),n(209),n(210),n(211),n(212),n(213),n(214),n(215),n(216),n(217),n(218),n(219),n(220),n(221),n(222),n(223),n(224),n(225),n(226),n(227),n(228),n(229),n(230),n(231),n(232),n(233),n(234),n(235),n(236),n(237),n(238),n(239),n(240),n(241),n(242),n(244),n(245),n(247),n(248),n(249),n(250),n(251),n(252),n(253),n(255),n(256),n(257),n(258),n(259),n(260),n(261),n(262),n(263),n(264),n(265),n(266),n(267),n(95),n(268),n(124),n(269),n(125),n(270),n(271),n(272),n(273),n(274),n(128),n(130),n(131),n(275),n(276),n(277),n(278),n(279),n(280),n(281),n(282),n(283),n(284),n(285),n(286),n(287),n(288),n(289),n(290),n(291),n(292),n(293),n(294),n(295),n(296),n(297),n(298),n(299),n(300),n(301),n(302),n(303),n(304),n(305),n(306),n(307),n(308),n(309),n(310),n(311),n(312),n(313),n(314),n(315),n(316),n(317),n(318),n(319),n(320),n(321),n(322),n(323),n(324),n(325),n(326),n(327),n(328),n(329),n(330),n(331),n(332),n(333),n(334),n(335),n(336),n(337),n(338),n(339),n(340),n(341),n(342),n(343),n(344),n(345),n(346),n(347),n(348),n(349),n(350),n(351),n(352),n(353),n(354),n(355),n(356),n(357),n(358),n(359),e.exports=n(20)},function(e,t,n){"use strict";var r=n(3),o=n(16),i=n(8),a=n(0),l=n(13),s=n(32).KEY,c=n(4),u=n(51),d=n(47),f=n(35),p=n(6),g=n(106),m=n(76),h=n(166),b=n(61),v=n(2),y=n(5),x=n(10),w=n(17),k=n(25),E=n(34),_=n(38),S=n(109),z=n(18),T=n(60),N=n(9),P=n(36),C=z.f,D=N.f,M=S.f,j=r.Symbol,I=r.JSON,A=I&&I.stringify,L=p("_hidden"),O=p("toPrimitive"),F={}.propertyIsEnumerable,R=u("symbol-registry"),B=u("symbols"),U=u("op-symbols"),W=Object.prototype,H="function"==typeof j&&!!T.f,V=r.QObject,q=!V||!V.prototype||!V.prototype.findChild,$=i&&c((function(){return 7!=_(D({},"a",{get:function(){return D(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=C(W,t);r&&delete W[t],D(e,t,n),r&&e!==W&&D(W,t,r)}:D,K=function(e){var t=B[e]=_(j.prototype);return t._k=e,t},J=H&&"symbol"==typeof j.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof j},G=function(e,t,n){return e===W&&G(U,t,n),v(e),t=k(t,!0),v(n),o(B,t)?(n.enumerable?(o(e,L)&&e[L][t]&&(e[L][t]=!1),n=_(n,{enumerable:E(0,!1)})):(o(e,L)||D(e,L,E(1,{})),e[L][t]=!0),$(e,t,n)):D(e,t,n)},Z=function(e,t){v(e);for(var n,r=h(t=w(t)),o=0,i=r.length;i>o;)G(e,n=r[o++],t[n]);return e},Q=function(e){var t=F.call(this,e=k(e,!0));return!(this===W&&o(B,e)&&!o(U,e))&&(!(t||!o(this,e)||!o(B,e)||o(this,L)&&this[L][e])||t)},X=function(e,t){if(e=w(e),t=k(t,!0),e!==W||!o(B,t)||o(U,t)){var n=C(e,t);return!n||!o(B,t)||o(e,L)&&e[L][t]||(n.enumerable=!0),n}},Y=function(e){for(var t,n=M(w(e)),r=[],i=0;n.length>i;)o(B,t=n[i++])||t==L||t==s||r.push(t);return r},ee=function(e){for(var t,n=e===W,r=M(n?U:w(e)),i=[],a=0;r.length>a;)!o(B,t=r[a++])||n&&!o(W,t)||i.push(B[t]);return i};H||(l((j=function(){if(this instanceof j)throw TypeError("Symbol is not a constructor!");var e=f(arguments.length>0?arguments[0]:void 0),t=function(n){this===W&&t.call(U,n),o(this,L)&&o(this[L],e)&&(this[L][e]=!1),$(this,e,E(1,n))};return i&&q&&$(W,e,{configurable:!0,set:t}),K(e)}).prototype,"toString",(function(){return this._k})),z.f=X,N.f=G,n(39).f=S.f=Y,n(53).f=Q,T.f=ee,i&&!n(31)&&l(W,"propertyIsEnumerable",Q,!0),g.f=function(e){return K(p(e))}),a(a.G+a.W+a.F*!H,{Symbol:j});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ne=0;te.length>ne;)p(te[ne++]);for(var re=P(p.store),oe=0;re.length>oe;)m(re[oe++]);a(a.S+a.F*!H,"Symbol",{for:function(e){return o(R,e+="")?R[e]:R[e]=j(e)},keyFor:function(e){if(!J(e))throw TypeError(e+" is not a symbol!");for(var t in R)if(R[t]===e)return t},useSetter:function(){q=!0},useSimple:function(){q=!1}}),a(a.S+a.F*!H,"Object",{create:function(e,t){return void 0===t?_(e):Z(_(e),t)},defineProperty:G,defineProperties:Z,getOwnPropertyDescriptor:X,getOwnPropertyNames:Y,getOwnPropertySymbols:ee});var ie=c((function(){T.f(1)}));a(a.S+a.F*ie,"Object",{getOwnPropertySymbols:function(e){return T.f(x(e))}}),I&&a(a.S+a.F*(!H||c((function(){var e=j();return"[null]"!=A([e])||"{}"!=A({a:e})||"{}"!=A(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,r=[e],o=1;arguments.length>o;)r.push(arguments[o++]);if(n=t=r[1],(y(t)||void 0!==e)&&!J(e))return b(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!J(t))return t}),r[1]=t,A.apply(I,r)}}),j.prototype[O]||n(12)(j.prototype,O,j.prototype.valueOf),d(j,"Symbol"),d(Math,"Math",!0),d(r.JSON,"JSON",!0)},function(e,t,n){e.exports=n(51)("native-function-to-string",Function.toString)},function(e,t,n){var r=n(36),o=n(60),i=n(53);e.exports=function(e){var t=r(e),n=o.f;if(n)for(var a,l=n(e),s=i.f,c=0;l.length>c;)s.call(e,a=l[c++])&&t.push(a);return t}},function(e,t,n){var r=n(0);r(r.S,"Object",{create:n(38)})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(8),"Object",{defineProperty:n(9).f})},function(e,t,n){var r=n(0);r(r.S+r.F*!n(8),"Object",{defineProperties:n(108)})},function(e,t,n){var r=n(17),o=n(18).f;n(27)("getOwnPropertyDescriptor",(function(){return function(e,t){return o(r(e),t)}}))},function(e,t,n){var r=n(10),o=n(19);n(27)("getPrototypeOf",(function(){return function(e){return o(r(e))}}))},function(e,t,n){var r=n(10),o=n(36);n(27)("keys",(function(){return function(e){return o(r(e))}}))},function(e,t,n){n(27)("getOwnPropertyNames",(function(){return n(109).f}))},function(e,t,n){var r=n(5),o=n(32).onFreeze;n(27)("freeze",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},function(e,t,n){var r=n(5),o=n(32).onFreeze;n(27)("seal",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},function(e,t,n){var r=n(5),o=n(32).onFreeze;n(27)("preventExtensions",(function(e){return function(t){return e&&r(t)?e(o(t)):t}}))},function(e,t,n){var r=n(5);n(27)("isFrozen",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(5);n(27)("isSealed",(function(e){return function(t){return!r(t)||!!e&&e(t)}}))},function(e,t,n){var r=n(5);n(27)("isExtensible",(function(e){return function(t){return!!r(t)&&(!e||e(t))}}))},function(e,t,n){var r=n(0);r(r.S+r.F,"Object",{assign:n(110)})},function(e,t,n){var r=n(0);r(r.S,"Object",{is:n(111)})},function(e,t,n){var r=n(0);r(r.S,"Object",{setPrototypeOf:n(80).set})},function(e,t,n){"use strict";var r=n(48),o={};o[n(6)("toStringTag")]="z",o+""!="[object z]"&&n(13)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},function(e,t,n){var r=n(0);r(r.P,"Function",{bind:n(112)})},function(e,t,n){var r=n(9).f,o=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in o||n(8)&&r(o,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},function(e,t,n){"use strict";var r=n(5),o=n(19),i=n(6)("hasInstance"),a=Function.prototype;i in a||n(9).f(a,i,{value:function(e){if("function"!=typeof this||!r(e))return!1;if(!r(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,n){var r=n(0),o=n(114);r(r.G+r.F*(parseInt!=o),{parseInt:o})},function(e,t,n){var r=n(0),o=n(115);r(r.G+r.F*(parseFloat!=o),{parseFloat:o})},function(e,t,n){"use strict";var r=n(3),o=n(16),i=n(22),a=n(82),l=n(25),s=n(4),c=n(39).f,u=n(18).f,d=n(9).f,f=n(49).trim,p=r.Number,g=p,m=p.prototype,h="Number"==i(n(38)(m)),b="trim"in String.prototype,v=function(e){var t=l(e,!1);if("string"==typeof t&&t.length>2){var n,r,o,i=(t=b?t.trim():f(t,3)).charCodeAt(0);if(43===i||45===i){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:r=2,o=49;break;case 79:case 111:r=8,o=55;break;default:return+t}for(var a,s=t.slice(2),c=0,u=s.length;c<u;c++)if((a=s.charCodeAt(c))<48||a>o)return NaN;return parseInt(s,r)}}return+t};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof p&&(h?s((function(){m.valueOf.call(n)})):"Number"!=i(n))?a(new g(v(t)),n,p):v(t)};for(var y,x=n(8)?c(g):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;x.length>w;w++)o(g,y=x[w])&&!o(p,y)&&d(p,y,u(g,y));p.prototype=m,m.constructor=p,n(13)(r,"Number",p)}},function(e,t,n){"use strict";var r=n(0),o=n(23),i=n(116),a=n(83),l=1..toFixed,s=Math.floor,c=[0,0,0,0,0,0],u="Number.toFixed: incorrect invocation!",d=function(e,t){for(var n=-1,r=t;++n<6;)r+=e*c[n],c[n]=r%1e7,r=s(r/1e7)},f=function(e){for(var t=6,n=0;--t>=0;)n+=c[t],c[t]=s(n/e),n=n%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==c[e]){var n=String(c[e]);t=""===t?n:t+a.call("0",7-n.length)+n}return t},g=function(e,t,n){return 0===t?n:t%2==1?g(e,t-1,n*e):g(e*e,t/2,n)};r(r.P+r.F*(!!l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!n(4)((function(){l.call({})}))),"Number",{toFixed:function(e){var t,n,r,l,s=i(this,u),c=o(e),m="",h="0";if(c<0||c>20)throw RangeError(u);if(s!=s)return"NaN";if(s<=-1e21||s>=1e21)return String(s);if(s<0&&(m="-",s=-s),s>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(s*g(2,69,1))-69)<0?s*g(2,-t,1):s/g(2,t,1),n*=4503599627370496,(t=52-t)>0){for(d(0,n),r=c;r>=7;)d(1e7,0),r-=7;for(d(g(10,r,1),0),r=t-1;r>=23;)f(1<<23),r-=23;f(1<<r),d(1,1),f(2),h=p()}else d(0,n),d(1<<-t,0),h=p()+a.call("0",c);return h=c>0?m+((l=h.length)<=c?"0."+a.call("0",c-l)+h:h.slice(0,l-c)+"."+h.slice(l-c)):m+h}})},function(e,t,n){"use strict";var r=n(0),o=n(4),i=n(116),a=1..toPrecision;r(r.P+r.F*(o((function(){return"1"!==a.call(1,void 0)}))||!o((function(){a.call({})}))),"Number",{toPrecision:function(e){var t=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(t):a.call(t,e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,n){var r=n(0),o=n(3).isFinite;r(r.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},function(e,t,n){var r=n(0);r(r.S,"Number",{isInteger:n(117)})},function(e,t,n){var r=n(0);r(r.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,n){var r=n(0),o=n(117),i=Math.abs;r(r.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},function(e,t,n){var r=n(0);r(r.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,n){var r=n(0);r(r.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,n){var r=n(0),o=n(115);r(r.S+r.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},function(e,t,n){var r=n(0),o=n(114);r(r.S+r.F*(Number.parseInt!=o),"Number",{parseInt:o})},function(e,t,n){var r=n(0),o=n(118),i=Math.sqrt,a=Math.acosh;r(r.S+r.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},function(e,t,n){var r=n(0),o=Math.asinh;r(r.S+r.F*!(o&&1/o(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},function(e,t,n){var r=n(0),o=Math.atanh;r(r.S+r.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,n){var r=n(0),o=n(84);r(r.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,n){var r=n(0),o=Math.exp;r(r.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},function(e,t,n){var r=n(0),o=n(85);r(r.S+r.F*(o!=Math.expm1),"Math",{expm1:o})},function(e,t,n){var r=n(0);r(r.S,"Math",{fround:n(119)})},function(e,t,n){var r=n(0),o=Math.abs;r(r.S,"Math",{hypot:function(e,t){for(var n,r,i=0,a=0,l=arguments.length,s=0;a<l;)s<(n=o(arguments[a++]))?(i=i*(r=s/n)*r+1,s=n):i+=n>0?(r=n/s)*r:n;return s===1/0?1/0:s*Math.sqrt(i)}})},function(e,t,n){var r=n(0),o=Math.imul;r(r.S+r.F*n(4)((function(){return-5!=o(4294967295,5)||2!=o.length})),"Math",{imul:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r;return 0|o*i+((65535&n>>>16)*i+o*(65535&r>>>16)<<16>>>0)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,n){var r=n(0);r(r.S,"Math",{log1p:n(118)})},function(e,t,n){var r=n(0);r(r.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,n){var r=n(0);r(r.S,"Math",{sign:n(84)})},function(e,t,n){var r=n(0),o=n(85),i=Math.exp;r(r.S+r.F*n(4)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},function(e,t,n){var r=n(0),o=n(85),i=Math.exp;r(r.S,"Math",{tanh:function(e){var t=o(e=+e),n=o(-e);return t==1/0?1:n==1/0?-1:(t-n)/(i(e)+i(-e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,n){var r=n(0),o=n(37),i=String.fromCharCode,a=String.fromCodePoint;r(r.S+r.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var t,n=[],r=arguments.length,a=0;r>a;){if(t=+arguments[a++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");n.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return n.join("")}})},function(e,t,n){var r=n(0),o=n(17),i=n(7);r(r.S,"String",{raw:function(e){for(var t=o(e.raw),n=i(t.length),r=arguments.length,a=[],l=0;n>l;)a.push(String(t[l++])),l<r&&a.push(String(arguments[l]));return a.join("")}})},function(e,t,n){"use strict";n(49)("trim",(function(e){return function(){return e(this,3)}}))},function(e,t,n){"use strict";var r=n(62)(!0);n(86)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var r=n(0),o=n(62)(!1);r(r.P,"String",{codePointAt:function(e){return o(this,e)}})},function(e,t,n){"use strict";var r=n(0),o=n(7),i=n(88),a="".endsWith;r(r.P+r.F*n(89)("endsWith"),"String",{endsWith:function(e){var t=i(this,e,"endsWith"),n=arguments.length>1?arguments[1]:void 0,r=o(t.length),l=void 0===n?r:Math.min(o(n),r),s=String(e);return a?a.call(t,s,l):t.slice(l-s.length,l)===s}})},function(e,t,n){"use strict";var r=n(0),o=n(88);r(r.P+r.F*n(89)("includes"),"String",{includes:function(e){return!!~o(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(0);r(r.P,"String",{repeat:n(83)})},function(e,t,n){"use strict";var r=n(0),o=n(7),i=n(88),a="".startsWith;r(r.P+r.F*n(89)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),n=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return a?a.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){"use strict";n(14)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},function(e,t,n){"use strict";n(14)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,t,n){"use strict";n(14)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,t,n){"use strict";n(14)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,t,n){"use strict";n(14)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,t,n){"use strict";n(14)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},function(e,t,n){"use strict";n(14)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},function(e,t,n){"use strict";n(14)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,t,n){"use strict";n(14)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},function(e,t,n){"use strict";n(14)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,t,n){"use strict";n(14)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,t,n){"use strict";n(14)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,t,n){"use strict";n(14)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,t,n){var r=n(0);r(r.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,n){"use strict";var r=n(0),o=n(10),i=n(25);r(r.P+r.F*n(4)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=o(this),n=i(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},function(e,t,n){var r=n(0),o=n(243);r(r.P+r.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},function(e,t,n){"use strict";var r=n(4),o=Date.prototype.getTime,i=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-50000000000001))}))||!r((function(){i.call(new Date(NaN))}))?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),n=e.getUTCMilliseconds(),r=t<0?"-":t>9999?"+":"";return r+("00000"+Math.abs(t)).slice(r?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(n>99?n:"0"+a(n))+"Z"}:i},function(e,t,n){var r=Date.prototype,o=r.toString,i=r.getTime;new Date(NaN)+""!="Invalid Date"&&n(13)(r,"toString",(function(){var e=i.call(this);return e==e?o.call(this):"Invalid Date"}))},function(e,t,n){var r=n(6)("toPrimitive"),o=Date.prototype;r in o||n(12)(o,r,n(246))},function(e,t,n){"use strict";var r=n(2),o=n(25);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return o(r(this),"number"!=e)}},function(e,t,n){var r=n(0);r(r.S,"Array",{isArray:n(61)})},function(e,t,n){"use strict";var r=n(21),o=n(0),i=n(10),a=n(120),l=n(90),s=n(7),c=n(91),u=n(92);o(o.S+o.F*!n(64)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,o,d,f=i(e),p="function"==typeof this?this:Array,g=arguments.length,m=g>1?arguments[1]:void 0,h=void 0!==m,b=0,v=u(f);if(h&&(m=r(m,g>2?arguments[2]:void 0,2)),null==v||p==Array&&l(v))for(n=new p(t=s(f.length));t>b;b++)c(n,b,h?m(f[b],b):f[b]);else for(d=v.call(f),n=new p;!(o=d.next()).done;b++)c(n,b,h?a(d,m,[o.value,b],!0):o.value);return n.length=b,n}})},function(e,t,n){"use strict";var r=n(0),o=n(91);r(r.S+r.F*n(4)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)o(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){"use strict";var r=n(0),o=n(17),i=[].join;r(r.P+r.F*(n(52)!=Object||!n(24)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),o=n(79),i=n(22),a=n(37),l=n(7),s=[].slice;r(r.P+r.F*n(4)((function(){o&&s.call(o)})),"Array",{slice:function(e,t){var n=l(this.length),r=i(this);if(t=void 0===t?n:t,"Array"==r)return s.call(this,e,t);for(var o=a(e,n),c=a(t,n),u=l(c-o),d=new Array(u),f=0;f<u;f++)d[f]="String"==r?this.charAt(o+f):this[o+f];return d}})},function(e,t,n){"use strict";var r=n(0),o=n(11),i=n(10),a=n(4),l=[].sort,s=[1,2,3];r(r.P+r.F*(a((function(){s.sort(void 0)}))||!a((function(){s.sort(null)}))||!n(24)(l)),"Array",{sort:function(e){return void 0===e?l.call(i(this)):l.call(i(this),o(e))}})},function(e,t,n){"use strict";var r=n(0),o=n(28)(0),i=n(24)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,n){var r=n(5),o=n(61),i=n(6)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){"use strict";var r=n(0),o=n(28)(1);r(r.P+r.F*!n(24)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(28)(2);r(r.P+r.F*!n(24)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(28)(3);r(r.P+r.F*!n(24)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(28)(4);r(r.P+r.F*!n(24)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(121);r(r.P+r.F*!n(24)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){"use strict";var r=n(0),o=n(121);r(r.P+r.F*!n(24)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){"use strict";var r=n(0),o=n(59)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(a||!n(24)(i)),"Array",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(17),i=n(23),a=n(7),l=[].lastIndexOf,s=!!l&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(s||!n(24)(l)),"Array",{lastIndexOf:function(e){if(s)return l.apply(this,arguments)||0;var t=o(this),n=a(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,"Array",{copyWithin:n(122)}),n(33)("copyWithin")},function(e,t,n){var r=n(0);r(r.P,"Array",{fill:n(94)}),n(33)("fill")},function(e,t,n){"use strict";var r=n(0),o=n(28)(5),i=!0;"find"in[]&&Array(1).find((function(){i=!1})),r(r.P+r.F*i,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(33)("find")},function(e,t,n){"use strict";var r=n(0),o=n(28)(6),i="findIndex",a=!0;i in[]&&Array(1)[i]((function(){a=!1})),r(r.P+r.F*a,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(33)(i)},function(e,t,n){n(40)("Array")},function(e,t,n){var r=n(3),o=n(82),i=n(9).f,a=n(39).f,l=n(63),s=n(54),c=r.RegExp,u=c,d=c.prototype,f=/a/g,p=/a/g,g=new c(f)!==f;if(n(8)&&(!g||n(4)((function(){return p[n(6)("match")]=!1,c(f)!=f||c(p)==p||"/a/i"!=c(f,"i")})))){c=function(e,t){var n=this instanceof c,r=l(e),i=void 0===t;return!n&&r&&e.constructor===c&&i?e:o(g?new u(r&&!i?e.source:e,t):u((r=e instanceof c)?e.source:e,r&&i?s.call(e):t),n?this:d,c)};for(var m=function(e){e in c||i(c,e,{configurable:!0,get:function(){return u[e]},set:function(t){u[e]=t}})},h=a(u),b=0;h.length>b;)m(h[b++]);d.constructor=c,c.prototype=d,n(13)(r,"RegExp",c)}n(40)("RegExp")},function(e,t,n){"use strict";n(125);var r=n(2),o=n(54),i=n(8),a=/./.toString,l=function(e){n(13)(RegExp.prototype,"toString",e,!0)};n(4)((function(){return"/a/b"!=a.call({source:"a",flags:"b"})}))?l((function(){var e=r(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)})):"toString"!=a.name&&l((function(){return a.call(this)}))},function(e,t,n){"use strict";var r=n(2),o=n(7),i=n(97),a=n(65);n(66)("match",1,(function(e,t,n,l){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=l(n,e,this);if(t.done)return t.value;var s=r(e),c=String(this);if(!s.global)return a(s,c);var u=s.unicode;s.lastIndex=0;for(var d,f=[],p=0;null!==(d=a(s,c));){var g=String(d[0]);f[p]=g,""===g&&(s.lastIndex=i(c,o(s.lastIndex),u)),p++}return 0===p?null:f}]}))},function(e,t,n){"use strict";var r=n(2),o=n(10),i=n(7),a=n(23),l=n(97),s=n(65),c=Math.max,u=Math.min,d=Math.floor,f=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;n(66)("replace",2,(function(e,t,n,g){return[function(r,o){var i=e(this),a=null==r?void 0:r[t];return void 0!==a?a.call(r,i,o):n.call(String(i),r,o)},function(e,t){var o=g(n,e,this,t);if(o.done)return o.value;var d=r(e),f=String(this),p="function"==typeof t;p||(t=String(t));var h=d.global;if(h){var b=d.unicode;d.lastIndex=0}for(var v=[];;){var y=s(d,f);if(null===y)break;if(v.push(y),!h)break;""===String(y[0])&&(d.lastIndex=l(f,i(d.lastIndex),b))}for(var x,w="",k=0,E=0;E<v.length;E++){y=v[E];for(var _=String(y[0]),S=c(u(a(y.index),f.length),0),z=[],T=1;T<y.length;T++)z.push(void 0===(x=y[T])?x:String(x));var N=y.groups;if(p){var P=[_].concat(z,S,f);void 0!==N&&P.push(N);var C=String(t.apply(void 0,P))}else C=m(_,f,S,z,N,t);S>=k&&(w+=f.slice(k,S)+C,k=S+_.length)}return w+f.slice(k)}];function m(e,t,r,i,a,l){var s=r+e.length,c=i.length,u=p;return void 0!==a&&(a=o(a),u=f),n.call(l,u,(function(n,o){var l;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,r);case"'":return t.slice(s);case"<":l=a[o.slice(1,-1)];break;default:var u=+o;if(0===u)return n;if(u>c){var f=d(u/10);return 0===f?n:f<=c?void 0===i[f-1]?o.charAt(1):i[f-1]+o.charAt(1):n}l=i[u-1]}return void 0===l?"":l}))}}))},function(e,t,n){"use strict";var r=n(2),o=n(111),i=n(65);n(66)("search",1,(function(e,t,n,a){return[function(n){var r=e(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,r):new RegExp(n)[t](String(r))},function(e){var t=a(n,e,this);if(t.done)return t.value;var l=r(e),s=String(this),c=l.lastIndex;o(c,0)||(l.lastIndex=0);var u=i(l,s);return o(l.lastIndex,c)||(l.lastIndex=c),null===u?-1:u.index}]}))},function(e,t,n){"use strict";var r=n(63),o=n(2),i=n(55),a=n(97),l=n(7),s=n(65),c=n(96),u=n(4),d=Math.min,f=[].push,p="length",g=!u((function(){RegExp(4294967295,"y")}));n(66)("split",2,(function(e,t,n,u){var m;return m="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[p]||2!="ab".split(/(?:ab)*/)[p]||4!=".".split(/(.?)(.?)/)[p]||".".split(/()()/)[p]>1||"".split(/.?/)[p]?function(e,t){var o=String(this);if(void 0===e&&0===t)return[];if(!r(e))return n.call(o,e,t);for(var i,a,l,s=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),d=0,g=void 0===t?4294967295:t>>>0,m=new RegExp(e.source,u+"g");(i=c.call(m,o))&&!((a=m.lastIndex)>d&&(s.push(o.slice(d,i.index)),i[p]>1&&i.index<o[p]&&f.apply(s,i.slice(1)),l=i[0][p],d=a,s[p]>=g));)m.lastIndex===i.index&&m.lastIndex++;return d===o[p]?!l&&m.test("")||s.push(""):s.push(o.slice(d)),s[p]>g?s.slice(0,g):s}:"0".split(void 0,0)[p]?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,r){var o=e(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,o,r):m.call(String(o),n,r)},function(e,t){var r=u(m,e,this,t,m!==n);if(r.done)return r.value;var c=o(e),f=String(this),p=i(c,RegExp),h=c.unicode,b=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(g?"y":"g"),v=new p(g?c:"^(?:"+c.source+")",b),y=void 0===t?4294967295:t>>>0;if(0===y)return[];if(0===f.length)return null===s(v,f)?[f]:[];for(var x=0,w=0,k=[];w<f.length;){v.lastIndex=g?w:0;var E,_=s(v,g?f:f.slice(w));if(null===_||(E=d(l(v.lastIndex+(g?0:w)),f.length))===x)w=a(f,w,h);else{if(k.push(f.slice(x,w)),k.length===y)return k;for(var S=1;S<=_.length-1;S++)if(k.push(_[S]),k.length===y)return k;w=x=E}}return k.push(f.slice(x)),k}]}))},function(e,t,n){"use strict";var r,o,i,a,l=n(31),s=n(3),c=n(21),u=n(48),d=n(0),f=n(5),p=n(11),g=n(41),m=n(42),h=n(55),b=n(98).set,v=n(99)(),y=n(100),x=n(126),w=n(67),k=n(127),E=s.TypeError,_=s.process,S=_&&_.versions,z=S&&S.v8||"",T=s.Promise,N="process"==u(_),P=function(){},C=o=y.f,D=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[n(6)("species")]=function(e){e(P,P)};return(N||"function"==typeof PromiseRejectionEvent)&&e.then(P)instanceof t&&0!==z.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),M=function(e){var t;return!(!f(e)||"function"!=typeof(t=e.then))&&t},j=function(e,t){if(!e._n){e._n=!0;var n=e._c;v((function(){for(var r=e._v,o=1==e._s,i=0,a=function(t){var n,i,a,l=o?t.ok:t.fail,s=t.resolve,c=t.reject,u=t.domain;try{l?(o||(2==e._h&&L(e),e._h=1),!0===l?n=r:(u&&u.enter(),n=l(r),u&&(u.exit(),a=!0)),n===t.promise?c(E("Promise-chain cycle")):(i=M(n))?i.call(n,s,c):s(n)):c(r)}catch(e){u&&!a&&u.exit(),c(e)}};n.length>i;)a(n[i++]);e._c=[],e._n=!1,t&&!e._h&&I(e)}))}},I=function(e){b.call(s,(function(){var t,n,r,o=e._v,i=A(e);if(i&&(t=x((function(){N?_.emit("unhandledRejection",o,e):(n=s.onunhandledrejection)?n({promise:e,reason:o}):(r=s.console)&&r.error&&r.error("Unhandled promise rejection",o)})),e._h=N||A(e)?2:1),e._a=void 0,i&&t.e)throw t.v}))},A=function(e){return 1!==e._h&&0===(e._a||e._c).length},L=function(e){b.call(s,(function(){var t;N?_.emit("rejectionHandled",e):(t=s.onrejectionhandled)&&t({promise:e,reason:e._v})}))},O=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),j(t,!0))},F=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw E("Promise can't be resolved itself");(t=M(e))?v((function(){var r={_w:n,_d:!1};try{t.call(e,c(F,r,1),c(O,r,1))}catch(e){O.call(r,e)}})):(n._v=e,n._s=1,j(n,!1))}catch(e){O.call({_w:n,_d:!1},e)}}};D||(T=function(e){g(this,T,"Promise","_h"),p(e),r.call(this);try{e(c(F,this,1),c(O,this,1))}catch(e){O.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(43)(T.prototype,{then:function(e,t){var n=C(h(this,T));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=N?_.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&j(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(F,e,1),this.reject=c(O,e,1)},y.f=C=function(e){return e===T||e===a?new i(e):o(e)}),d(d.G+d.W+d.F*!D,{Promise:T}),n(47)(T,"Promise"),n(40)("Promise"),a=n(20).Promise,d(d.S+d.F*!D,"Promise",{reject:function(e){var t=C(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(l||!D),"Promise",{resolve:function(e){return k(l&&this===a?T:this,e)}}),d(d.S+d.F*!(D&&n(64)((function(e){T.all(e).catch(P)}))),"Promise",{all:function(e){var t=this,n=C(t),r=n.resolve,o=n.reject,i=x((function(){var n=[],i=0,a=1;m(e,!1,(function(e){var l=i++,s=!1;n.push(void 0),a++,t.resolve(e).then((function(e){s||(s=!0,n[l]=e,--a||r(n))}),o)})),--a||r(n)}));return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=C(t),r=n.reject,o=x((function(){m(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return o.e&&r(o.v),n.promise}})},function(e,t,n){"use strict";var r=n(132),o=n(44);n(68)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return r.def(o(this,"WeakSet"),e,!0)}},r,!1,!0)},function(e,t,n){"use strict";var r=n(0),o=n(69),i=n(101),a=n(2),l=n(37),s=n(7),c=n(5),u=n(3).ArrayBuffer,d=n(55),f=i.ArrayBuffer,p=i.DataView,g=o.ABV&&u.isView,m=f.prototype.slice,h=o.VIEW;r(r.G+r.W+r.F*(u!==f),{ArrayBuffer:f}),r(r.S+r.F*!o.CONSTR,"ArrayBuffer",{isView:function(e){return g&&g(e)||c(e)&&h in e}}),r(r.P+r.U+r.F*n(4)((function(){return!new f(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==m&&void 0===t)return m.call(a(this),e);for(var n=a(this).byteLength,r=l(e,n),o=l(void 0===t?n:t,n),i=new(d(this,f))(s(o-r)),c=new p(this),u=new p(i),g=0;r<o;)u.setUint8(g++,c.getUint8(r++));return i}}),n(40)("ArrayBuffer")},function(e,t,n){var r=n(0);r(r.G+r.W+r.F*!n(69).ABV,{DataView:n(101).DataView})},function(e,t,n){n(29)("Int8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Uint8",1,(function(e){return function(t,n,r){return e(this,t,n,r)}}),!0)},function(e,t,n){n(29)("Int16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Uint16",2,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Int32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Uint32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Float32",4,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){n(29)("Float64",8,(function(e){return function(t,n,r){return e(this,t,n,r)}}))},function(e,t,n){var r=n(0),o=n(11),i=n(2),a=(n(3).Reflect||{}).apply,l=Function.apply;r(r.S+r.F*!n(4)((function(){a((function(){}))})),"Reflect",{apply:function(e,t,n){var r=o(e),s=i(n);return a?a(r,t,s):l.call(r,t,s)}})},function(e,t,n){var r=n(0),o=n(38),i=n(11),a=n(2),l=n(5),s=n(4),c=n(112),u=(n(3).Reflect||{}).construct,d=s((function(){function e(){}return!(u((function(){}),[],e)instanceof e)})),f=!s((function(){u((function(){}))}));r(r.S+r.F*(d||f),"Reflect",{construct:function(e,t){i(e),a(t);var n=arguments.length<3?e:i(arguments[2]);if(f&&!d)return u(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var s=n.prototype,p=o(l(s)?s:Object.prototype),g=Function.apply.call(e,p,t);return l(g)?g:p}})},function(e,t,n){var r=n(9),o=n(0),i=n(2),a=n(25);o(o.S+o.F*n(4)((function(){Reflect.defineProperty(r.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,n){i(e),t=a(t,!0),i(n);try{return r.f(e,t,n),!0}catch(e){return!1}}})},function(e,t,n){var r=n(0),o=n(18).f,i=n(2);r(r.S,"Reflect",{deleteProperty:function(e,t){var n=o(i(e),t);return!(n&&!n.configurable)&&delete e[t]}})},function(e,t,n){"use strict";var r=n(0),o=n(2),i=function(e){this._t=o(e),this._i=0;var t,n=this._k=[];for(t in e)n.push(t)};n(87)(i,"Object",(function(){var e,t=this._k;do{if(this._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return{value:e,done:!1}})),r(r.S,"Reflect",{enumerate:function(e){return new i(e)}})},function(e,t,n){var r=n(18),o=n(19),i=n(16),a=n(0),l=n(5),s=n(2);a(a.S,"Reflect",{get:function e(t,n){var a,c,u=arguments.length<3?t:arguments[2];return s(t)===u?t[n]:(a=r.f(t,n))?i(a,"value")?a.value:void 0!==a.get?a.get.call(u):void 0:l(c=o(t))?e(c,n,u):void 0}})},function(e,t,n){var r=n(18),o=n(0),i=n(2);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return r.f(i(e),t)}})},function(e,t,n){var r=n(0),o=n(19),i=n(2);r(r.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,n){var r=n(0),o=n(2),i=Object.isExtensible;r(r.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},function(e,t,n){var r=n(0);r(r.S,"Reflect",{ownKeys:n(134)})},function(e,t,n){var r=n(0),o=n(2),i=Object.preventExtensions;r(r.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},function(e,t,n){var r=n(9),o=n(18),i=n(19),a=n(16),l=n(0),s=n(34),c=n(2),u=n(5);l(l.S,"Reflect",{set:function e(t,n,l){var d,f,p=arguments.length<4?t:arguments[3],g=o.f(c(t),n);if(!g){if(u(f=i(t)))return e(f,n,l,p);g=s(0)}if(a(g,"value")){if(!1===g.writable||!u(p))return!1;if(d=o.f(p,n)){if(d.get||d.set||!1===d.writable)return!1;d.value=l,r.f(p,n,d)}else r.f(p,n,s(0,l));return!0}return void 0!==g.set&&(g.set.call(p,l),!0)}})},function(e,t,n){var r=n(0),o=n(80);o&&r(r.S,"Reflect",{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(e){return!1}}})},function(e,t,n){"use strict";var r=n(0),o=n(59)(!0);r(r.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(33)("includes")},function(e,t,n){"use strict";var r=n(0),o=n(135),i=n(10),a=n(7),l=n(11),s=n(93);r(r.P,"Array",{flatMap:function(e){var t,n,r=i(this);return l(e),t=a(r.length),n=s(r,0),o(n,r,r,t,0,1,e,arguments[1]),n}}),n(33)("flatMap")},function(e,t,n){"use strict";var r=n(0),o=n(135),i=n(10),a=n(7),l=n(23),s=n(93);r(r.P,"Array",{flatten:function(){var e=arguments[0],t=i(this),n=a(t.length),r=s(t,0);return o(r,t,t,n,0,void 0===e?1:l(e)),r}}),n(33)("flatten")},function(e,t,n){"use strict";var r=n(0),o=n(62)(!0);r(r.P,"String",{at:function(e){return o(this,e)}})},function(e,t,n){"use strict";var r=n(0),o=n(136),i=n(67),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,n){"use strict";var r=n(0),o=n(136),i=n(67),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);r(r.P+r.F*a,"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,n){"use strict";n(49)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,t,n){"use strict";n(49)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,t,n){"use strict";var r=n(0),o=n(26),i=n(7),a=n(63),l=n(54),s=RegExp.prototype,c=function(e,t){this._r=e,this._s=t};n(87)(c,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),r(r.P,"String",{matchAll:function(e){if(o(this),!a(e))throw TypeError(e+" is not a regexp!");var t=String(this),n="flags"in s?String(e.flags):l.call(e),r=new RegExp(e.source,~n.indexOf("g")?n:"g"+n);return r.lastIndex=i(e.lastIndex),new c(r,t)}})},function(e,t,n){n(76)("asyncIterator")},function(e,t,n){n(76)("observable")},function(e,t,n){var r=n(0),o=n(134),i=n(17),a=n(18),l=n(91);r(r.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,n,r=i(e),s=a.f,c=o(r),u={},d=0;c.length>d;)void 0!==(n=s(r,t=c[d++]))&&l(u,t,n);return u}})},function(e,t,n){var r=n(0),o=n(137)(!1);r(r.S,"Object",{values:function(e){return o(e)}})},function(e,t,n){var r=n(0),o=n(137)(!0);r(r.S,"Object",{entries:function(e){return o(e)}})},function(e,t,n){"use strict";var r=n(0),o=n(10),i=n(11),a=n(9);n(8)&&r(r.P+n(70),"Object",{__defineGetter__:function(e,t){a.f(o(this),e,{get:i(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),o=n(10),i=n(11),a=n(9);n(8)&&r(r.P+n(70),"Object",{__defineSetter__:function(e,t){a.f(o(this),e,{set:i(t),enumerable:!0,configurable:!0})}})},function(e,t,n){"use strict";var r=n(0),o=n(10),i=n(25),a=n(19),l=n(18).f;n(8)&&r(r.P+n(70),"Object",{__lookupGetter__:function(e){var t,n=o(this),r=i(e,!0);do{if(t=l(n,r))return t.get}while(n=a(n))}})},function(e,t,n){"use strict";var r=n(0),o=n(10),i=n(25),a=n(19),l=n(18).f;n(8)&&r(r.P+n(70),"Object",{__lookupSetter__:function(e){var t,n=o(this),r=i(e,!0);do{if(t=l(n,r))return t.set}while(n=a(n))}})},function(e,t,n){var r=n(0);r(r.P+r.R,"Map",{toJSON:n(138)("Map")})},function(e,t,n){var r=n(0);r(r.P+r.R,"Set",{toJSON:n(138)("Set")})},function(e,t,n){n(71)("Map")},function(e,t,n){n(71)("Set")},function(e,t,n){n(71)("WeakMap")},function(e,t,n){n(71)("WeakSet")},function(e,t,n){n(72)("Map")},function(e,t,n){n(72)("Set")},function(e,t,n){n(72)("WeakMap")},function(e,t,n){n(72)("WeakSet")},function(e,t,n){var r=n(0);r(r.G,{global:n(3)})},function(e,t,n){var r=n(0);r(r.S,"System",{global:n(3)})},function(e,t,n){var r=n(0),o=n(22);r(r.S,"Error",{isError:function(e){return"Error"===o(e)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{clamp:function(e,t,n){return Math.min(n,Math.max(t,e))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,t,n){var r=n(0),o=180/Math.PI;r(r.S,"Math",{degrees:function(e){return e*o}})},function(e,t,n){var r=n(0),o=n(140),i=n(119);r(r.S,"Math",{fscale:function(e,t,n,r,a){return i(o(e,t,n,r,a))}})},function(e,t,n){var r=n(0);r(r.S,"Math",{iaddh:function(e,t,n,r){var o=e>>>0,i=n>>>0;return(t>>>0)+(r>>>0)+((o&i|(o|i)&~(o+i>>>0))>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{isubh:function(e,t,n,r){var o=e>>>0,i=n>>>0;return(t>>>0)-(r>>>0)-((~o&i|~(o^i)&o-i>>>0)>>>31)|0}})},function(e,t,n){var r=n(0);r(r.S,"Math",{imulh:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r,a=n>>16,l=r>>16,s=(a*i>>>0)+(o*i>>>16);return a*l+(s>>16)+((o*l>>>0)+(65535&s)>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,t,n){var r=n(0),o=Math.PI/180;r(r.S,"Math",{radians:function(e){return e*o}})},function(e,t,n){var r=n(0);r(r.S,"Math",{scale:n(140)})},function(e,t,n){var r=n(0);r(r.S,"Math",{umulh:function(e,t){var n=+e,r=+t,o=65535&n,i=65535&r,a=n>>>16,l=r>>>16,s=(a*i>>>0)+(o*i>>>16);return a*l+(s>>>16)+((o*l>>>0)+(65535&s)>>>16)}})},function(e,t,n){var r=n(0);r(r.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,t,n){"use strict";var r=n(0),o=n(20),i=n(3),a=n(55),l=n(127);r(r.P+r.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then((function(){return n}))}:e,n?function(n){return l(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var r=n(0),o=n(100),i=n(126);r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){var r=n(30),o=n(2),i=r.key,a=r.set;r.exp({defineMetadata:function(e,t,n,r){a(e,t,o(n),i(r))}})},function(e,t,n){var r=n(30),o=n(2),i=r.key,a=r.map,l=r.store;r.exp({deleteMetadata:function(e,t){var n=arguments.length<3?void 0:i(arguments[2]),r=a(o(t),n,!1);if(void 0===r||!r.delete(e))return!1;if(r.size)return!0;var s=l.get(t);return s.delete(n),!!s.size||l.delete(t)}})},function(e,t,n){var r=n(30),o=n(2),i=n(19),a=r.has,l=r.get,s=r.key,c=function(e,t,n){if(a(e,t,n))return l(e,t,n);var r=i(t);return null!==r?c(e,r,n):void 0};r.exp({getMetadata:function(e,t){return c(e,o(t),arguments.length<3?void 0:s(arguments[2]))}})},function(e,t,n){var r=n(130),o=n(139),i=n(30),a=n(2),l=n(19),s=i.keys,c=i.key,u=function(e,t){var n=s(e,t),i=l(e);if(null===i)return n;var a=u(i,t);return a.length?n.length?o(new r(n.concat(a))):a:n};i.exp({getMetadataKeys:function(e){return u(a(e),arguments.length<2?void 0:c(arguments[1]))}})},function(e,t,n){var r=n(30),o=n(2),i=r.get,a=r.key;r.exp({getOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,n){var r=n(30),o=n(2),i=r.keys,a=r.key;r.exp({getOwnMetadataKeys:function(e){return i(o(e),arguments.length<2?void 0:a(arguments[1]))}})},function(e,t,n){var r=n(30),o=n(2),i=n(19),a=r.has,l=r.key,s=function(e,t,n){if(a(e,t,n))return!0;var r=i(t);return null!==r&&s(e,r,n)};r.exp({hasMetadata:function(e,t){return s(e,o(t),arguments.length<3?void 0:l(arguments[2]))}})},function(e,t,n){var r=n(30),o=n(2),i=r.has,a=r.key;r.exp({hasOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,n){var r=n(30),o=n(2),i=n(11),a=r.key,l=r.set;r.exp({metadata:function(e,t){return function(n,r){l(e,t,(void 0!==r?o:i)(n),a(r))}}})},function(e,t,n){var r=n(0),o=n(99)(),i=n(3).process,a="process"==n(22)(i);r(r.G,{asap:function(e){var t=a&&i.domain;o(t?t.bind(e):e)}})},function(e,t,n){"use strict";var r=n(0),o=n(3),i=n(20),a=n(99)(),l=n(6)("observable"),s=n(11),c=n(2),u=n(41),d=n(43),f=n(12),p=n(42),g=p.RETURN,m=function(e){return null==e?void 0:s(e)},h=function(e){var t=e._c;t&&(e._c=void 0,t())},b=function(e){return void 0===e._o},v=function(e){b(e)||(e._o=void 0,h(e))},y=function(e,t){c(e),this._c=void 0,this._o=e,e=new x(this);try{var n=t(e),r=n;null!=n&&("function"==typeof n.unsubscribe?n=function(){r.unsubscribe()}:s(n),this._c=n)}catch(t){return void e.error(t)}b(this)&&h(this)};y.prototype=d({},{unsubscribe:function(){v(this)}});var x=function(e){this._s=e};x.prototype=d({},{next:function(e){var t=this._s;if(!b(t)){var n=t._o;try{var r=m(n.next);if(r)return r.call(n,e)}catch(e){try{v(t)}finally{throw e}}}},error:function(e){var t=this._s;if(b(t))throw e;var n=t._o;t._o=void 0;try{var r=m(n.error);if(!r)throw e;e=r.call(n,e)}catch(e){try{h(t)}finally{throw e}}return h(t),e},complete:function(e){var t=this._s;if(!b(t)){var n=t._o;t._o=void 0;try{var r=m(n.complete);e=r?r.call(n,e):void 0}catch(e){try{h(t)}finally{throw e}}return h(t),e}}});var w=function(e){u(this,w,"Observable","_f")._f=s(e)};d(w.prototype,{subscribe:function(e){return new y(e,this._f)},forEach:function(e){var t=this;return new(i.Promise||o.Promise)((function(n,r){s(e);var o=t.subscribe({next:function(t){try{return e(t)}catch(e){r(e),o.unsubscribe()}},error:r,complete:n})}))}}),d(w,{from:function(e){var t="function"==typeof this?this:w,n=m(c(e)[l]);if(n){var r=c(n.call(e));return r.constructor===t?r:new t((function(e){return r.subscribe(e)}))}return new t((function(t){var n=!1;return a((function(){if(!n){try{if(p(e,!1,(function(e){if(t.next(e),n)return g}))===g)return}catch(e){if(n)throw e;return void t.error(e)}t.complete()}})),function(){n=!0}}))},of:function(){for(var e=0,t=arguments.length,n=new Array(t);e<t;)n[e]=arguments[e++];return new("function"==typeof this?this:w)((function(e){var t=!1;return a((function(){if(!t){for(var r=0;r<n.length;++r)if(e.next(n[r]),t)return;e.complete()}})),function(){t=!0}}))}}),f(w.prototype,l,(function(){return this})),r(r.G,{Observable:w}),n(40)("Observable")},function(e,t,n){var r=n(3),o=n(0),i=n(67),a=[].slice,l=/MSIE .\./.test(i),s=function(e){return function(t,n){var r=arguments.length>2,o=!!r&&a.call(arguments,2);return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,o)}:t,n)}};o(o.G+o.B+o.F*l,{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},function(e,t,n){var r=n(0),o=n(98);r(r.G+r.B,{setImmediate:o.set,clearImmediate:o.clear})},function(e,t,n){for(var r=n(95),o=n(36),i=n(13),a=n(3),l=n(12),s=n(50),c=n(6),u=c("iterator"),d=c("toStringTag"),f=s.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},g=o(p),m=0;m<g.length;m++){var h,b=g[m],v=p[b],y=a[b],x=y&&y.prototype;if(x&&(x[u]||l(x,u,f),x[d]||l(x,d,b),s[b]=f,v))for(h in r)x[h]||i(x,h,r[h],!0)}},function(e,t,n){(function(t){!function(t){"use strict";var n=Object.prototype,r=n.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag",s="object"==typeof e,c=t.regeneratorRuntime;if(c)s&&(e.exports=c);else{(c=t.regeneratorRuntime=s?e.exports:{}).wrap=m;var u={},d={};d[i]=function(){return this};var f=Object.getPrototypeOf,p=f&&f(f(z([])));p&&p!==n&&r.call(p,i)&&(d=p);var g=y.prototype=b.prototype=Object.create(d);v.prototype=g.constructor=y,y.constructor=v,y[l]=v.displayName="GeneratorFunction",c.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,l in e||(e[l]="GeneratorFunction")),e.prototype=Object.create(g),e},c.awrap=function(e){return{__await:e}},x(w.prototype),w.prototype[a]=function(){return this},c.AsyncIterator=w,c.async=function(e,t,n,r){var o=new w(m(e,t,n,r));return c.isGeneratorFunction(t)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},x(g),g[l]="Generator",g[i]=function(){return this},g.toString=function(){return"[object Generator]"},c.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},c.values=z,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,r){return a.type="throw",a.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),s=r.call(i,"finallyLoc");if(l&&s){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,u):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),_(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;_(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:z(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}}}function m(e,t,n,r){var o=t&&t.prototype instanceof b?t:b,i=Object.create(o.prototype),a=new S(r||[]);return i._invoke=function(e,t,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return T()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var l=k(a,n);if(l){if(l===u)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=h(e,t,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===u)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}(e,n,a),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function b(){}function v(){}function y(){}function x(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function w(e){function n(t,o,i,a){var l=h(e[t],e,o);if("throw"!==l.type){var s=l.arg,c=s.value;return c&&"object"==typeof c&&r.call(c,"__await")?Promise.resolve(c.__await).then((function(e){n("next",e,i,a)}),(function(e){n("throw",e,i,a)})):Promise.resolve(c).then((function(e){s.value=e,i(s)}),a)}a(l.arg)}var o;"object"==typeof t.process&&t.process.domain&&(n=t.process.domain.bind(n)),this._invoke=function(e,t){function r(){return new Promise((function(r,o){n(e,t,r,o)}))}return o=o?o.then(r,r):r()}}function k(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=h(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var o=r.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function z(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,o=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:T}}function T(){return{value:void 0,done:!0}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(this,n(58))},function(e,t,n){n(362),e.exports=n(20).RegExp.escape},function(e,t,n){var r=n(0),o=n(363)(/[\\^$*+?.()|[\]{}]/g,"\\$&");r(r.S,"RegExp",{escape:function(e){return o(e)}})},function(e,t){e.exports=function(e,t){var n=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,n)}}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=n(158),c=a(n(370)),u=a(n(374)),d=a(n(375)),f=a(n(382)),p=a(n(383)),g=a(n(384)),m=a(n(385)),h=a(n(403)),b=a(n(404)),v=a(n(405)),y=a(n(408)),x=a(n(45)),w=n(73),k=n(409);n(410);var E=function(e){function t(t){var n=e.call(this,t)||this;return n.checkAddonsAvailability=n.checkAddonsAvailability.bind(n),n.state={documentWidth:700,securityIsOn:!1,animationLoading:!1,addonNotAvailable:!1},n.translations=x.default(),n}return o(t,e),t.prototype.componentDidMount=function(){this.checkAddonsAvailability()},t.prototype.checkAddonsAvailability=function(){var e=this;browser.runtime.sendMessage({action:"check-addons-availablitity"}).then((function(t){t||e.setState({})})).catch((function(){e.setState({})}))},t.prototype.render=function(){var e=this.state,t=e.addonNotAvailable,n=e.documentWidth;return l.default.createElement("div",{id:"app-holder",style:{width:n+"px"}},l.default.createElement(f.default,{persistUserSelection:!1,clearPersistUserSelection:!0,sidebarMinifiedAt:600,sidebarMaxifiedAt:650,displayMinifyMaxifyIcon:!1,moduleSidebar:l.default.createElement(u.default,{image:l.default.createElement("img",{alt:"image",src:w.addonRoot()+"Images/logo-64.png"}),textLong:k.appNameShort,textShort:"v"+k.version,moduleMenu:l.default.createElement(p.default,{reactRouter:!1,childrenPaddingX:18,data:[{attributes:{title:this.translations.menu_title_home},text:this.translations.home,icon:l.default.createElement("i",{className:"fas fa-user"}),href:w.addonPrefixPopup()+"#/"},{text:this.translations.img_tag,icon:l.default.createElement("i",{className:"fas fa-image"}),href:w.addonPrefixPopup()+"#/images-by-img-tag"},{text:this.translations.img_requests,icon:l.default.createElement("i",{className:"far fa-image"}),href:w.addonPrefixPopup()+"#/images-by-requests"}]})}),headerData:l.default.createElement("span",null,l.default.createElement(y.default,{location:"popup",titleBox:this.translations.links,masterLink:w.addonPrefixDashboard()+"#/",masterIcon:l.default.createElement("i",{className:"fas fa-angle-right"}),masterText:this.translations.popup_title_dashboard,masterAttributes:{target:"_blank",onClick:function(){setTimeout((function(){window.close()}),100)}},data:[{href:"https://addons.mozilla.org/de/firefox/addon/images-downloader-origin/",icon:l.default.createElement("i",{className:"fab fa-firefox-browser"}),text:"Firefox Hub",attributes:{target:"_blank"}}]}),l.default.createElement(b.default,null)),contentData:l.default.createElement("span",null,t&&l.default.createElement(d.default,null),!t&&l.default.createElement(s.HashRouter,null,l.default.createElement(s.Switch,null,l.default.createElement(s.Route,{exact:!0,path:"/",component:g.default}),l.default.createElement(s.Route,{exact:!0,path:"/images-by-img-tag",component:m.default}),l.default.createElement(s.Route,{exact:!0,path:"/images-by-requests",component:h.default}))))}),l.default.createElement(v.default,{messageKey:"messagesApp",timer:2e3,codeMapping:{"-1":{title:this.translations.error,displayErrorCode:!1,text:{prefix:"",suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{}},0:{title:l.default.createElement("i",{className:"fas fa-thumbs-up mr-2"}),displayErrorCode:!1,text:{prefix:"",suffix:"",attributes:{}},close:{text:this.translations.globalErrormessageCloseButton,attributes:{}},link:{}}}}))},t}(l.Component);c.default.render(l.default.createElement(E,null),document.getElementById("app"))},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(141),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,s=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,u=o?Symbol.for("react.provider"):60109,d=o?Symbol.for("react.context"):60110,f=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,g=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,h="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function x(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||v}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||v}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(b(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=x.prototype;var E=k.prototype=new w;E.constructor=k,r(E,x.prototype),E.isPureReactComponent=!0;var _={current:null},S=Object.prototype.hasOwnProperty,z={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,r)&&!z.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];o.children=c}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:_.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,C=[];function D(e,t,n,r){if(C.length){var o=C.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function j(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var s=!1;if(null===t)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case i:case a:s=!0}}if(s)return r(o,t,""===n?"."+I(t,0):n),1;if(s=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var u=n+I(l=t[c],c);s+=e(l,u,r,o)}else if(null===t||"object"!=typeof t?u=null:u="function"==typeof(u=h&&t[h]||t["@@iterator"])?u:null,"function"==typeof u)for(t=u.call(t),c=0;!(l=t.next()).done;)s+=e(l=l.value,u=n+I(l,c++),r,o);else if("object"===l)throw r=""+t,Error(b(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return s}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?O(e,r,n,(function(e){return e})):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function O(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),j(e,L,t=D(t,i,r,o)),M(t)}var F={current:null};function R(){var e=F.current;if(null===e)throw Error(b(321));return e}var B={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:_,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return O(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;j(e,A,t=D(null,null,t,n)),M(t)},count:function(e){return j(e,(function(){return null}),null)},toArray:function(e){var t=[];return O(e,t,null,(function(e){return e})),t},only:function(e){if(!N(e))throw Error(b(143));return e}},t.Component=x,t.Fragment=l,t.Profiler=c,t.PureComponent=k,t.StrictMode=s,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,t.cloneElement=function(e,t,n){if(null==e)throw Error(b(267,e));var o=r({},e.props),a=e.key,l=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,s=_.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in t)S.call(t,u)&&!z.hasOwnProperty(u)&&(o[u]=void 0===t[u]&&void 0!==c?c[u]:t[u])}var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){c=Array(u);for(var d=0;d<u;d++)c[d]=arguments[d+2];o.children=c}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:s}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:d,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:u,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:f,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:g,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return R().useCallback(e,t)},t.useContext=function(e,t){return R().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return R().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return R().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return R().useLayoutEffect(e,t)},t.useMemo=function(e,t){return R().useMemo(e,t)},t.useReducer=function(e,t,n){return R().useReducer(e,t,n)},t.useRef=function(e){return R().useRef(e)},t.useState=function(e){return R().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";var r=n(367);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.12.0
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,s=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,u=r?Symbol.for("react.context"):60110,d=r?Symbol.for("react.async_mode"):60111,f=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,g=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,h=r?Symbol.for("react.memo"):60115,b=r?Symbol.for("react.lazy"):60116,v=r?Symbol.for("react.fundamental"):60117,y=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case d:case f:case a:case s:case l:case g:return e;default:switch(e=e&&e.$$typeof){case u:case p:case b:case h:case c:return e;default:return t}}case i:return t}}}function k(e){return w(e)===f}t.typeOf=w,t.AsyncMode=d,t.ConcurrentMode=f,t.ContextConsumer=u,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=b,t.Memo=h,t.Portal=i,t.Profiler=s,t.StrictMode=l,t.Suspense=g,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===s||e===l||e===g||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===b||e.$$typeof===h||e.$$typeof===c||e.$$typeof===u||e.$$typeof===p||e.$$typeof===v||e.$$typeof===y||e.$$typeof===x)},t.isAsyncMode=function(e){return k(e)||w(e)===d},t.isConcurrentMode=k,t.isContextConsumer=function(e){return w(e)===u},t.isContextProvider=function(e){return w(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return w(e)===p},t.isFragment=function(e){return w(e)===a},t.isLazy=function(e){return w(e)===b},t.isMemo=function(e){return w(e)===h},t.isPortal=function(e){return w(e)===i},t.isProfiler=function(e){return w(e)===s},t.isStrictMode=function(e){return w(e)===l},t.isSuspense=function(e){return w(e)===g}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(371)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),o=n(141),i=n(372);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,t,n,r,o,i,a,l,s){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var s=!1,c=null,u=!1,d=null,f={onError:function(e){s=!0,c=e}};function p(e,t,n,r,o,i,a,u,d){s=!1,c=null,l.apply(f,arguments)}var g=null,m=null,h=null;function b(e,t,n){var r=e.type||"unknown-event";e.currentTarget=h(n),function(e,t,n,r,o,i,l,f,g){if(p.apply(this,arguments),s){if(!s)throw Error(a(198));var m=c;s=!1,c=null,u||(u=!0,d=m)}}(r,t,void 0,e),e.currentTarget=null}var v=null,y={};function x(){if(v)for(var e in y){var t=y[e],n=v.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!k[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in k[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,s=r;if(E.hasOwnProperty(s))throw Error(a(99,s));E[s]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&w(c[o],l,s);o=!0}else i.registrationName?(w(i.registrationName,l,s),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function w(e,t,n){if(_[e])throw Error(a(100,e));_[e]=t,S[e]=t.eventTypes[n].dependencies}var k=[],E={},_={},S={};function z(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!y.hasOwnProperty(t)||y[t]!==r){if(y[t])throw Error(a(102,t));y[t]=r,n=!0}}n&&x()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),N=null,P=null,C=null;function D(e){if(e=m(e)){if("function"!=typeof N)throw Error(a(280));var t=e.stateNode;t&&(t=g(t),N(e.stateNode,e.type,t))}}function M(e){P?C?C.push(e):C=[e]:P=e}function j(){if(P){var e=P,t=C;if(C=P=null,D(e),t)for(e=0;e<t.length;e++)D(t[e])}}function I(e,t){return e(t)}function A(e,t,n,r,o){return e(t,n,r,o)}function L(){}var O=I,F=!1,R=!1;function B(){null===P&&null===C||(L(),j())}function U(e,t,n){if(R)return e(t,n);R=!0;try{return O(e,t,n)}finally{R=!1,B()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},q={};function $(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var J=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(J,G);K[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(J,G);K[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(J,G);K[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var Z=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Q(e,t,n,r){var o=K.hasOwnProperty(t)?K[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(q,e)||!H.call(V,e)&&(W.test(e)?q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Z.hasOwnProperty("ReactCurrentDispatcher")||(Z.ReactCurrentDispatcher={current:null}),Z.hasOwnProperty("ReactCurrentBatchConfig")||(Z.ReactCurrentBatchConfig={suspense:null});var X=/^(.*)[\\\/]/,Y="function"==typeof Symbol&&Symbol.for,ee=Y?Symbol.for("react.element"):60103,te=Y?Symbol.for("react.portal"):60106,ne=Y?Symbol.for("react.fragment"):60107,re=Y?Symbol.for("react.strict_mode"):60108,oe=Y?Symbol.for("react.profiler"):60114,ie=Y?Symbol.for("react.provider"):60109,ae=Y?Symbol.for("react.context"):60110,le=Y?Symbol.for("react.concurrent_mode"):60111,se=Y?Symbol.for("react.forward_ref"):60112,ce=Y?Symbol.for("react.suspense"):60113,ue=Y?Symbol.for("react.suspense_list"):60120,de=Y?Symbol.for("react.memo"):60115,fe=Y?Symbol.for("react.lazy"):60116,pe=Y?Symbol.for("react.block"):60121,ge="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=ge&&e[ge]||e["@@iterator"])?e:null}function he(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case ue:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case se:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case de:return he(e.type);case pe:return he(e.render);case fe:if(e=1===e._status?e._result:null)return he(e)}return null}function be(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=he(e.type);n=null,r&&(n=he(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(X,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ye(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=ye(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ye(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _e(e,t){null!=(t=t.checked)&&Q(e,"checked",t,!1)}function Se(e,t){_e(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ze(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ne(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ce(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function De(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Me(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function je(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",Ae="http://www.w3.org/2000/svg";function Le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Oe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,Re=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ae||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Be(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ue(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Ue("Animation","AnimationEnd"),animationiteration:Ue("Animation","AnimationIteration"),animationstart:Ue("Animation","AnimationStart"),transitionend:Ue("Transition","TransitionEnd")},He={},Ve={};function qe(e){if(He[e])return He[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return He[e]=n[t];return e}T&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var $e=qe("animationend"),Ke=qe("animationiteration"),Je=qe("animationstart"),Ge=qe("transitionend"),Ze="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Qe=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Qe.get(e);return void 0===t&&(t=new Map,Qe.set(e,t)),t}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ye(e)!==e)throw Error(a(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,s=o.child;s;){if(s===n){l=!0,n=o,r=i;break}if(s===r){l=!0,r=o,n=i;break}s=s.sibling}if(!l){for(s=i.child;s;){if(s===n){l=!0,n=i,r=o;break}if(s===r){l=!0,r=i,n=o;break}s=s.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function at(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)b(e,t[r],n[r]);else t&&b(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,at),it)throw Error(a(95));if(u)throw e=d,u=!1,d=null,e}}function st(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ut=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ut.length&&ut.push(e)}function ft(e,t,n,r){if(ut.length){var o=ut.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=st(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var l=null,s=0;s<k.length;s++){var c=k[s];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=rt(l,c))}lt(l)}}function gt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Jt(t,"scroll",!0);break;case"focus":case"blur":Jt(t,"focus",!0),Jt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Jt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ze.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var mt,ht,bt,vt=!1,yt=[],xt=null,wt=null,kt=null,Et=new Map,_t=new Map,St=[],zt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Nt(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":xt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":_t.delete(t.pointerId)}}function Ct(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Nt(t,n,r,o,i),null!==t&&(null!==(t=Nn(t))&&ht(t)),e):(e.eventSystemFlags|=r,e)}function Dt(e){var t=Tn(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){bt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Nn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function jt(e,t,n){Mt(e)&&n.delete(t)}function It(){for(vt=!1;0<yt.length;){var e=yt[0];if(null!==e.blockedOn){null!==(e=Nn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:yt.shift()}null!==xt&&Mt(xt)&&(xt=null),null!==wt&&Mt(wt)&&(wt=null),null!==kt&&Mt(kt)&&(kt=null),Et.forEach(jt),_t.forEach(jt)}function At(e,t){e.blockedOn===t&&(e.blockedOn=null,vt||(vt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Lt(e){function t(t){return At(t,e)}if(0<yt.length){At(yt[0],e);for(var n=1;n<yt.length;n++){var r=yt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xt&&At(xt,e),null!==wt&&At(wt,e),null!==kt&&At(kt,e),Et.forEach(t),_t.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Dt(n),null===n.blockedOn&&St.shift()}var Ot={},Ft=new Map,Rt=new Map,Bt=["abort","abort",$e,"animationEnd",Ke,"animationIteration",Je,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function Ut(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Rt.set(r,t),Ft.set(r,i),Ot[o]=i}}Ut("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ut("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ut(Bt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<Wt.length;Ht++)Rt.set(Wt[Ht],0);var Vt=i.unstable_UserBlockingPriority,qt=i.unstable_runWithPriority,$t=!0;function Kt(e,t){Jt(t,e,!1)}function Jt(e,t,n){var r=Rt.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Zt.bind(null,t,1,e);break;default:r=Qt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){F||L();var o=Qt,i=F;F=!0;try{A(o,e,t,n,r)}finally{(F=i)||B()}}function Zt(e,t,n,r){qt(Vt,Qt.bind(null,e,t,n,r))}function Qt(e,t,n,r){if($t)if(0<yt.length&&-1<zt.indexOf(e))e=Nt(null,e,t,n,r),yt.push(e);else{var o=Xt(e,t,n,r);if(null===o)Pt(e,r);else if(-1<zt.indexOf(e))e=Nt(o,e,t,n,r),yt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return xt=Ct(xt,e,t,n,r,o),!0;case"dragenter":return wt=Ct(wt,e,t,n,r,o),!0;case"mouseover":return kt=Ct(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return Et.set(i,Ct(Et.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,_t.set(i,Ct(_t.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Pt(e,r),e=ft(e,r,null,t);try{U(pt,e)}finally{dt(e)}}}}function Xt(e,t,n,r){if(null!==(n=Tn(n=st(r)))){var o=Ye(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{U(pt,e)}finally{dt(e)}return null}var Yt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Yt.hasOwnProperty(e)&&Yt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Yt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Yt[t]=Yt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Ie;function sn(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)gt(t[r],e,n)}function cn(){}function un(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dn(r)}}function pn(){for(var e=window,t=un();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=un((e=t.contentWindow).document)}return t}function gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,hn=null;function bn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function vn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var yn="function"==typeof setTimeout?setTimeout:void 0,xn="function"==typeof clearTimeout?clearTimeout:void 0;function wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function kn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),_n="__reactInternalInstance$"+En,Sn="__reactEventHandlers$"+En,zn="__reactContainere$"+En;function Tn(e){var t=e[_n];if(t)return t;for(var n=e.parentNode;n;){if(t=n[zn]||n[_n]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=kn(e);null!==e;){if(n=e[_n])return n;e=kn(e)}return t}n=(e=n).parentNode}return null}function Nn(e){return!(e=e[_n]||e[zn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Pn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Cn(e){return e[Sn]||null}function Dn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t){var n=e.stateNode;if(!n)return null;var r=g(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function jn(e,t,n){(t=Mn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Dn(t);for(t=n.length;0<t--;)jn(n[t],"captured",e);for(t=0;t<n.length;t++)jn(n[t],"bubbled",e)}}function An(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Mn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Ln(e){e&&e.dispatchConfig.registrationName&&An(e._targetInst,null,e)}function On(e){ot(e,In)}var Fn=null,Rn=null,Bn=null;function Un(){if(Bn)return Bn;var e,t,n=Rn,r=n.length,o="value"in Fn?Fn.value:Fn.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return Bn=o.slice(e,1<t?1-t:void 0)}function Wn(){return!0}function Hn(){return!1}function Vn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:Hn,this.isPropagationStopped=Hn,this}function qn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function $n(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=qn,e.release=$n}o(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Vn);var Jn=Vn.extend({data:null}),Gn=Vn.extend({data:null}),Zn=[9,13,27,32],Qn=T&&"CompositionEvent"in window,Xn=null;T&&"documentMode"in document&&(Xn=document.documentMode);var Yn=T&&"TextEvent"in window&&!Xn,er=T&&(!Qn||Xn&&8<Xn&&11>=Xn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Qn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else ar?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(ar||i!==nr.compositionStart?i===nr.compositionEnd&&ar&&(o=Un()):(Rn="value"in(Fn=r)?Fn.value:Fn.textContent,ar=!0)),i=Jn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),On(i),o=i):o=null,(e=Yn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Qn&&or(e,t)?(e=Un(),Bn=Rn=Fn=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,On(t)):t=null,null===o?t:null===t?o:[o,t]}},sr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!sr[e.type]:"textarea"===t}var ur={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function dr(e,t,n){return(e=Vn.getPooled(ur.change,e,t,n)).type="change",M(n),On(e),e}var fr=null,pr=null;function gr(e){lt(e)}function mr(e){if(we(Pn(e)))return e}function hr(e,t){if("change"===e)return t}var br=!1;function vr(){fr&&(fr.detachEvent("onpropertychange",yr),pr=fr=null)}function yr(e){if("value"===e.propertyName&&mr(pr))if(e=dr(pr,e,st(e)),F)lt(e);else{F=!0;try{I(gr,e)}finally{F=!1,B()}}}function xr(e,t,n){"focus"===e?(vr(),pr=n,(fr=t).attachEvent("onpropertychange",yr)):"blur"===e&&vr()}function wr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(pr)}function kr(e,t){if("click"===e)return mr(t)}function Er(e,t){if("input"===e||"change"===e)return mr(t)}T&&(br=ct("input")&&(!document.documentMode||9<document.documentMode));var _r={eventTypes:ur,_isInputEventSupported:br,extractEvents:function(e,t,n,r){var o=t?Pn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=hr;else if(cr(o))if(br)a=Er;else{a=wr;var l=xr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=kr);if(a&&(a=a(e,t)))return dr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Te(o,"number",o.value)}},Sr=Vn.extend({view:null,detail:null}),zr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=zr[e])&&!!t[e]}function Nr(){return Tr}var Pr=0,Cr=0,Dr=!1,Mr=!1,jr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Nr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Pr;return Pr=e.screenX,Dr?"mousemove"===e.type?e.screenX-t:0:(Dr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Cr;return Cr=e.screenY,Mr?"mousemove"===e.type?e.screenY-t:0:(Mr=!0,0)}}),Ir=jr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ar={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Lr={eventTypes:Ar,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Ye(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=jr,s=Ar.mouseLeave,c=Ar.mouseEnter,u="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Ir,s=Ar.pointerLeave,c=Ar.pointerEnter,u="pointer");if(e=null==a?i:Pn(a),i=null==t?i:Pn(t),(s=l.getPooled(s,a,n,r)).type=u+"leave",s.target=e,s.relatedTarget=i,(n=l.getPooled(c,t,n,r)).type=u+"enter",n.target=i,n.relatedTarget=e,u=t,(r=a)&&u)e:{for(c=u,a=0,e=l=r;e;e=Dn(e))a++;for(e=0,t=c;t;t=Dn(t))e++;for(;0<a-e;)l=Dn(l),a--;for(;0<e-a;)c=Dn(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=Dn(l),c=Dn(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=Dn(r);for(r=[];u&&u!==c&&(null===(a=u.alternate)||a!==c);)r.push(u),u=Dn(u);for(u=0;u<l.length;u++)An(l[u],"bubbled",s);for(u=r.length;0<u--;)An(r[u],"captured",n);return 0==(64&o)?[s]:[s,n]}};var Or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Rr(e,t){if(Or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Or(e[n[r]],t[n[r]]))return!1;return!0}var Br=T&&"documentMode"in document&&11>=document.documentMode,Ur={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wr=null,Hr=null,Vr=null,qr=!1;function $r(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return qr||null==Wr||Wr!==un(n)?null:("selectionStart"in(n=Wr)&&gn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vr&&Rr(Vr,n)?null:(Vr=n,(e=Vn.getPooled(Ur.select,Hr,e,t)).type="select",e.target=Wr,On(e),e))}var Kr={eventTypes:Ur,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=S.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Pn(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Wr=o,Hr=t,Vr=null);break;case"blur":Vr=Hr=Wr=null;break;case"mousedown":qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return qr=!1,$r(n,r);case"selectionchange":if(Br)break;case"keydown":case"keyup":return $r(n,r)}return null}},Jr=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Zr=Sr.extend({relatedTarget:null});function Qr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Xr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Yr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Xr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Qr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Yr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Nr,charCode:function(e){return"keypress"===e.type?Qr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Qr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=jr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Nr}),ro=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=jr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Ot,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===Qr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Zr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=jr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case $e:case Ke:case Je:e=Jr;break;case Ge:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Vn}return On(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(a(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),g=Cn,m=Nn,h=Pn,z({SimpleEventPlugin:io,EnterLeaveEventPlugin:Lr,ChangeEventPlugin:_r,SelectEventPlugin:Kr,BeforeInputEventPlugin:lr});var ao=[],lo=-1;function so(e){0>lo||(e.current=ao[lo],ao[lo]=null,lo--)}function co(e,t){lo++,ao[lo]=e.current,e.current=t}var uo={},fo={current:uo},po={current:!1},go=uo;function mo(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function ho(e){return null!=(e=e.childContextTypes)}function bo(){so(po),so(fo)}function vo(e,t,n){if(fo.current!==uo)throw Error(a(168));co(fo,t),co(po,n)}function yo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,he(t)||"Unknown",i));return o({},n,{},r)}function xo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,go=fo.current,co(fo,e),co(po,po.current),!0}function wo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=yo(e,t,go),r.__reactInternalMemoizedMergedChildContext=e,so(po),so(fo),co(fo,e)):so(po),co(po,n)}var ko=i.unstable_runWithPriority,Eo=i.unstable_scheduleCallback,_o=i.unstable_cancelCallback,So=i.unstable_requestPaint,zo=i.unstable_now,To=i.unstable_getCurrentPriorityLevel,No=i.unstable_ImmediatePriority,Po=i.unstable_UserBlockingPriority,Co=i.unstable_NormalPriority,Do=i.unstable_LowPriority,Mo=i.unstable_IdlePriority,jo={},Io=i.unstable_shouldYield,Ao=void 0!==So?So:function(){},Lo=null,Oo=null,Fo=!1,Ro=zo(),Bo=1e4>Ro?zo:function(){return zo()-Ro};function Uo(){switch(To()){case No:return 99;case Po:return 98;case Co:return 97;case Do:return 96;case Mo:return 95;default:throw Error(a(332))}}function Wo(e){switch(e){case 99:return No;case 98:return Po;case 97:return Co;case 96:return Do;case 95:return Mo;default:throw Error(a(332))}}function Ho(e,t){return e=Wo(e),ko(e,t)}function Vo(e,t,n){return e=Wo(e),Eo(e,t,n)}function qo(e){return null===Lo?(Lo=[e],Oo=Eo(No,Ko)):Lo.push(e),jo}function $o(){if(null!==Oo){var e=Oo;Oo=null,_o(e)}Ko()}function Ko(){if(!Fo&&null!==Lo){Fo=!0;var e=0;try{var t=Lo;Ho(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Lo=null}catch(t){throw null!==Lo&&(Lo=Lo.slice(e+1)),Eo(No,$o),t}finally{Fo=!1}}}function Jo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Go(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Zo={current:null},Qo=null,Xo=null,Yo=null;function ei(){Yo=Xo=Qo=null}function ti(e){var t=Zo.current;so(Zo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Qo=e,Yo=Xo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ca=!0),e.firstContext=null)}function oi(e,t){if(Yo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Yo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xo){if(null===Qo)throw Error(a(308));Xo=t,Qo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Xo=Xo.next=t;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function li(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function si(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ui(e,t){var n=e.alternate;null!==n&&li(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function di(e,t,n,r){var i=e.updateQueue;ii=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var s=a.next;a.next=l.next,l.next=s}a=l,i.shared.pending=null,null!==(s=e.alternate)&&(null!==(s=s.updateQueue)&&(s.baseQueue=l))}if(null!==a){s=a.next;var c=i.baseState,u=0,d=null,f=null,p=null;if(null!==s)for(var g=s;;){if((l=g.expirationTime)<r){var m={expirationTime:g.expirationTime,suspenseConfig:g.suspenseConfig,tag:g.tag,payload:g.payload,callback:g.callback,next:null};null===p?(f=p=m,d=c):p=p.next=m,l>u&&(u=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:g.suspenseConfig,tag:g.tag,payload:g.payload,callback:g.callback,next:null}),is(l,g.suspenseConfig);e:{var h=e,b=g;switch(l=t,m=n,b.tag){case 1:if("function"==typeof(h=b.payload)){c=h.call(m,c,l);break e}c=h;break e;case 3:h.effectTag=-4097&h.effectTag|64;case 0:if(null==(l="function"==typeof(h=b.payload)?h.call(m,c,l):h))break e;c=o({},c,l);break e;case 2:ii=!0}}null!==g.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[g]:l.push(g))}if(null===(g=g.next)||g===s){if(null===(l=i.shared.pending))break;g=a.next=l.next,l.next=s,i.baseQueue=a=l,i.shared.pending=null}}null===p?d=c:p.next=f,i.baseState=d,i.baseQueue=p,as(u),e.expirationTime=u,e.memoizedState=c}}function fi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var pi=Z.ReactCurrentBatchConfig,gi=(new r.Component).refs;function mi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var hi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=$l(),o=pi.suspense;(o=si(r=Kl(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),Jl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=$l(),o=pi.suspense;(o=si(r=Kl(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),Jl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=$l(),r=pi.suspense;(r=si(n=Kl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),Jl(e,n)}};function bi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Rr(n,r)||!Rr(o,i))}function vi(e,t,n){var r=!1,o=uo,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=ho(t)?go:fo.current,i=(r=null!=(r=t.contextTypes))?mo(e,o):uo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=hi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function yi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&hi.enqueueReplaceState(t,t.state,null)}function xi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=gi,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=ho(t)?go:fo.current,o.context=mo(e,i)),di(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(mi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&hi.enqueueReplaceState(o,o.state,null),di(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var wi=Array.isArray;function ki(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===gi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Ei(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function _i(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=zs(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Ps(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=ki(e,t,n),r.return=e,r):((r=Ts(n.type,n.key,n.props,null,e.mode,r)).ref=ki(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Cs(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,i){return null===t||7!==t.tag?((t=Ns(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ps(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Ts(t.type,t.key,t.props,null,e.mode,n)).ref=ki(e,null,t),n.return=e,n;case te:return(t=Cs(t,e.mode,n)).return=e,t}if(wi(t)||me(t))return(t=Ns(t,e.mode,n,null)).return=e,t;Ei(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?d(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?u(e,t,n,r):null}if(wi(n)||me(n))return null!==o?null:d(e,t,n,r,null);Ei(e,n)}return null}function g(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?d(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return u(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(wi(r)||me(r))return d(t,e=e.get(n)||null,r,o,null);Ei(t,r)}return null}function m(o,a,l,s){for(var c=null,u=null,d=a,m=a=0,h=null;null!==d&&m<l.length;m++){d.index>m?(h=d,d=null):h=d.sibling;var b=p(o,d,l[m],s);if(null===b){null===d&&(d=h);break}e&&d&&null===b.alternate&&t(o,d),a=i(b,a,m),null===u?c=b:u.sibling=b,u=b,d=h}if(m===l.length)return n(o,d),c;if(null===d){for(;m<l.length;m++)null!==(d=f(o,l[m],s))&&(a=i(d,a,m),null===u?c=d:u.sibling=d,u=d);return c}for(d=r(o,d);m<l.length;m++)null!==(h=g(d,o,m,l[m],s))&&(e&&null!==h.alternate&&d.delete(null===h.key?m:h.key),a=i(h,a,m),null===u?c=h:u.sibling=h,u=h);return e&&d.forEach((function(e){return t(o,e)})),c}function h(o,l,s,c){var u=me(s);if("function"!=typeof u)throw Error(a(150));if(null==(s=u.call(s)))throw Error(a(151));for(var d=u=null,m=l,h=l=0,b=null,v=s.next();null!==m&&!v.done;h++,v=s.next()){m.index>h?(b=m,m=null):b=m.sibling;var y=p(o,m,v.value,c);if(null===y){null===m&&(m=b);break}e&&m&&null===y.alternate&&t(o,m),l=i(y,l,h),null===d?u=y:d.sibling=y,d=y,m=b}if(v.done)return n(o,m),u;if(null===m){for(;!v.done;h++,v=s.next())null!==(v=f(o,v.value,c))&&(l=i(v,l,h),null===d?u=v:d.sibling=v,d=v);return u}for(m=r(o,m);!v.done;h++,v=s.next())null!==(v=g(m,o,h,v.value,c))&&(e&&null!==v.alternate&&m.delete(null===v.key?h:v.key),l=i(v,l,h),null===d?u=v:d.sibling=v,d=v);return e&&m.forEach((function(e){return t(o,e)})),u}return function(e,r,i,s){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var u="object"==typeof i&&null!==i;if(u)switch(i.$$typeof){case ee:e:{for(u=i.key,c=r;null!==c;){if(c.key===u){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=ki(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Ns(i.props.children,e.mode,s,i.key)).return=e,e=r):((s=Ts(i.type,i.key,i.props,null,e.mode,s)).ref=ki(e,r,i),s.return=e,e=s)}return l(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Cs(i,e.mode,s)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Ps(i,e.mode,s)).return=e,e=r),l(e);if(wi(i))return m(e,r,i,s);if(me(i))return h(e,r,i,s);if(u&&Ei(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=_i(!0),zi=_i(!1),Ti={},Ni={current:Ti},Pi={current:Ti},Ci={current:Ti};function Di(e){if(e===Ti)throw Error(a(174));return e}function Mi(e,t){switch(co(Ci,t),co(Pi,e),co(Ni,Ti),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Oe(null,"");break;default:t=Oe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}so(Ni),co(Ni,t)}function ji(){so(Ni),so(Pi),so(Ci)}function Ii(e){Di(Ci.current);var t=Di(Ni.current),n=Oe(t,e.type);t!==n&&(co(Pi,e),co(Ni,n))}function Ai(e){Pi.current===e&&(so(Ni),so(Pi))}var Li={current:0};function Oi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Fi(e,t){return{responder:e,props:t}}var Ri=Z.ReactCurrentDispatcher,Bi=Z.ReactCurrentBatchConfig,Ui=0,Wi=null,Hi=null,Vi=null,qi=!1;function $i(){throw Error(a(321))}function Ki(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Or(e[n],t[n]))return!1;return!0}function Ji(e,t,n,r,o,i){if(Ui=i,Wi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ri.current=null===e||null===e.memoizedState?ba:va,e=n(r,o),t.expirationTime===Ui){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Vi=Hi=null,t.updateQueue=null,Ri.current=ya,e=n(r,o)}while(t.expirationTime===Ui)}if(Ri.current=ha,t=null!==Hi&&null!==Hi.next,Ui=0,Vi=Hi=Wi=null,qi=!1,t)throw Error(a(300));return e}function Gi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Vi?Wi.memoizedState=Vi=e:Vi=Vi.next=e,Vi}function Zi(){if(null===Hi){var e=Wi.alternate;e=null!==e?e.memoizedState:null}else e=Hi.next;var t=null===Vi?Wi.memoizedState:Vi.next;if(null!==t)Vi=t,Hi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Hi=e).memoizedState,baseState:Hi.baseState,baseQueue:Hi.baseQueue,queue:Hi.queue,next:null},null===Vi?Wi.memoizedState=Vi=e:Vi=Vi.next=e}return Vi}function Qi(e,t){return"function"==typeof t?t(e):t}function Xi(e){var t=Zi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Hi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var s=l=i=null,c=o;do{var u=c.expirationTime;if(u<Ui){var d={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===s?(l=s=d,i=r):s=s.next=d,u>Wi.expirationTime&&(Wi.expirationTime=u,as(u))}else null!==s&&(s=s.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),is(u,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===s?i=r:s.next=l,Or(r,t.memoizedState)||(Ca=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Yi(e){var t=Zi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Or(i,t.memoizedState)||(Ca=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ea(e){var t=Gi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Qi,lastRenderedState:e}).dispatch=ma.bind(null,Wi,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wi.updateQueue)?(t={lastEffect:null},Wi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Zi().memoizedState}function ra(e,t,n,r){var o=Gi();Wi.effectTag|=e,o.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Zi();r=void 0===r?null:r;var i=void 0;if(null!==Hi){var a=Hi.memoizedState;if(i=a.destroy,null!==r&&Ki(r,a.deps))return void ta(t,n,i,r)}Wi.effectTag|=e,o.memoizedState=ta(1|t,n,i,r)}function ia(e,t){return ra(516,4,e,t)}function aa(e,t){return oa(516,4,e,t)}function la(e,t){return oa(4,2,e,t)}function sa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ca(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,2,sa.bind(null,t,e),n)}function ua(){}function da(e,t){return Gi().memoizedState=[e,void 0===t?null:t],e}function fa(e,t){var n=Zi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pa(e,t){var n=Zi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ga(e,t,n){var r=Uo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Bi.suspense;Bi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Bi.suspense=r}}))}function ma(e,t,n){var r=$l(),o=pi.suspense;o={expirationTime:r=Kl(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Wi||null!==i&&i===Wi)qi=!0,o.expirationTime=Ui,Wi.expirationTime=Ui;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=i(a,n);if(o.eagerReducer=i,o.eagerState=l,Or(l,a))return}catch(e){}Jl(e,r)}}var ha={readContext:oi,useCallback:$i,useContext:$i,useEffect:$i,useImperativeHandle:$i,useLayoutEffect:$i,useMemo:$i,useReducer:$i,useRef:$i,useState:$i,useDebugValue:$i,useResponder:$i,useDeferredValue:$i,useTransition:$i},ba={readContext:oi,useCallback:da,useContext:oi,useEffect:ia,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,sa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Gi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Gi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ma.bind(null,Wi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Gi().memoizedState=e},useState:ea,useDebugValue:ua,useResponder:Fi,useDeferredValue:function(e,t){var n=ea(e),r=n[0],o=n[1];return ia((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[da(ga.bind(null,t,e),[t,e]),n]}},va={readContext:oi,useCallback:fa,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Xi,useRef:na,useState:function(){return Xi(Qi)},useDebugValue:ua,useResponder:Fi,useDeferredValue:function(e,t){var n=Xi(Qi),r=n[0],o=n[1];return aa((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xi(Qi),n=t[0];return t=t[1],[fa(ga.bind(null,t,e),[t,e]),n]}},ya={readContext:oi,useCallback:fa,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Yi,useRef:na,useState:function(){return Yi(Qi)},useDebugValue:ua,useResponder:Fi,useDeferredValue:function(e,t){var n=Yi(Qi),r=n[0],o=n[1];return aa((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Yi(Qi),n=t[0];return t=t[1],[fa(ga.bind(null,t,e),[t,e]),n]}},xa=null,wa=null,ka=!1;function Ea(e,t){var n=_s(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function _a(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sa(e){if(ka){var t=wa;if(t){var n=t;if(!_a(e,t)){if(!(t=wn(n.nextSibling))||!_a(e,t))return e.effectTag=-1025&e.effectTag|2,ka=!1,void(xa=e);Ea(xa,n)}xa=e,wa=wn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ka=!1,xa=e}}function za(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xa=e}function Ta(e){if(e!==xa)return!1;if(!ka)return za(e),ka=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vn(t,e.memoizedProps))for(t=wa;t;)Ea(e,t),t=wn(t.nextSibling);if(za(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){wa=wn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}wa=null}}else wa=xa?wn(e.stateNode.nextSibling):null;return!0}function Na(){wa=xa=null,ka=!1}var Pa=Z.ReactCurrentOwner,Ca=!1;function Da(e,t,n,r){t.child=null===e?zi(t,null,n,r):Si(t,e.child,n,r)}function Ma(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=Ji(e,t,n,r,i,o),null===e||Ca?(t.effectTag|=1,Da(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ja(e,t,o))}function ja(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Ss(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ts(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ia(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Rr)(o,r)&&e.ref===t.ref)?Ja(e,t,i):(t.effectTag|=1,(e=zs(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ia(e,t,n,r,o,i){return null!==e&&Rr(e.memoizedProps,r)&&e.ref===t.ref&&(Ca=!1,o<i)?(t.expirationTime=e.expirationTime,Ja(e,t,i)):La(e,t,n,r,i)}function Aa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function La(e,t,n,r,o){var i=ho(n)?go:fo.current;return i=mo(t,i),ri(t,o),n=Ji(e,t,n,r,i,o),null===e||Ca?(t.effectTag|=1,Da(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ja(e,t,o))}function Oa(e,t,n,r,o){if(ho(n)){var i=!0;xo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),vi(t,n,r),xi(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var s=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=mo(t,c=ho(n)?go:fo.current);var u=n.getDerivedStateFromProps,d="function"==typeof u||"function"==typeof a.getSnapshotBeforeUpdate;d||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==c)&&yi(t,a,r,c),ii=!1;var f=t.memoizedState;a.state=f,di(t,r,a,o),s=t.memoizedState,l!==r||f!==s||po.current||ii?("function"==typeof u&&(mi(t,n,u,r),s=t.memoizedState),(l=ii||bi(t,n,l,r,f,s,c))?(d||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=s),a.props=r,a.state=s,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,li(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:Go(t.type,l),s=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=mo(t,c=ho(n)?go:fo.current),(d="function"==typeof(u=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||s!==c)&&yi(t,a,r,c),ii=!1,s=t.memoizedState,a.state=s,di(t,r,a,o),f=t.memoizedState,l!==r||s!==f||po.current||ii?("function"==typeof u&&(mi(t,n,u,r),f=t.memoizedState),(u=ii||bi(t,n,l,r,s,f,c))?(d||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,f,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,f,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=f),a.props=r,a.state=f,a.context=c,r=u):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&s===e.memoizedState||(t.effectTag|=256),r=!1);return Fa(e,t,n,r,i,o)}function Fa(e,t,n,r,o,i){Aa(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&wo(t,n,!1),Ja(e,t,i);r=t.stateNode,Pa.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,l,i)):Da(e,t,l,i),t.memoizedState=r.state,o&&wo(t,n,!0),t.child}function Ra(e){var t=e.stateNode;t.pendingContext?vo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vo(0,t.context,!1),Mi(e,t.containerInfo)}var Ba,Ua,Wa,Ha={dehydrated:null,retryTime:0};function Va(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Li.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),co(Li,1&a),null===e){if(void 0!==i.fallback&&Sa(t),l){if(l=i.fallback,(i=Ns(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ns(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=Ha,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=zi(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=zs(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=zs(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Ha,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=Ns(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ns(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Ha,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function $a(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function Ka(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Da(e,t,r.children,n),0!=(2&(r=Li.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&qa(e,n);else if(19===e.tag)qa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Li,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Oi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),$a(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Oi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}$a(t,!0,n,null,i,t.lastEffect);break;case"together":$a(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ja(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&as(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=zs(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=zs(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ga(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Za(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(t.type)&&bo(),null;case 3:return ji(),so(po),so(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ta(t)||(t.effectTag|=4),null;case 5:Ai(t),n=Di(Ci.current);var i=t.type;if(null!==e&&null!=t.stateNode)Ua(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Di(Ni.current),Ta(t)){r=t.stateNode,i=t.type;var l=t.memoizedProps;switch(r[_n]=t,r[Sn]=l,i){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Ze.length;e++)Kt(Ze[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":Ee(r,l),Kt("invalid",r),sn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Kt("invalid",r),sn(n,"onChange");break;case"textarea":De(r,l),Kt("invalid",r),sn(n,"onChange")}for(var s in on(i,l),e=null,l)if(l.hasOwnProperty(s)){var c=l[s];"children"===s?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):_.hasOwnProperty(s)&&null!=c&&sn(n,s)}switch(i){case"input":xe(r),ze(r,l,!0);break;case"textarea":xe(r),je(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(s=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Le(i)),e===ln?"script"===i?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(i,{is:r.is}):(e=s.createElement(i),"select"===i&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,i),e[_n]=t,e[Sn]=r,Ba(e,t),t.stateNode=e,s=an(i,r),i){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ze.length;c++)Kt(Ze[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":Ee(e,r),c=ke(e,r),Kt("invalid",e),sn(n,"onChange");break;case"option":c=Ne(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Kt("invalid",e),sn(n,"onChange");break;case"textarea":De(e,r),c=Ce(e,r),Kt("invalid",e),sn(n,"onChange");break;default:c=r}on(i,c);var u=c;for(l in u)if(u.hasOwnProperty(l)){var d=u[l];"style"===l?nn(e,d):"dangerouslySetInnerHTML"===l?null!=(d=d?d.__html:void 0)&&Re(e,d):"children"===l?"string"==typeof d?("textarea"!==i||""!==d)&&Be(e,d):"number"==typeof d&&Be(e,""+d):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(_.hasOwnProperty(l)?null!=d&&sn(n,l):null!=d&&Q(e,l,d,s))}switch(i){case"input":xe(e),ze(e,r,!1);break;case"textarea":xe(e),je(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}bn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Wa(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Di(Ci.current),Di(Ni.current),Ta(t)?(n=t.stateNode,r=t.memoizedProps,n[_n]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[_n]=t,t.stateNode=n)}return null;case 13:return so(Li),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ta(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Li.current)?Tl===xl&&(Tl=wl):(Tl!==xl&&Tl!==wl||(Tl=kl),0!==Ml&&null!==_l&&(js(_l,zl),Is(_l,Ml)))),(n||r)&&(t.effectTag|=4),null);case 4:return ji(),null;case 10:return ti(t),null;case 17:return ho(t.type)&&bo(),null;case 19:if(so(Li),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(l=r.rendering)){if(i)Ga(r,!1);else if(Tl!==xl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Oi(l))){for(t.effectTag|=64,Ga(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return co(Li,1&Li.current|2),t.child}l=l.sibling}}else{if(!i)if(null!==(e=Oi(l))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ga(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Bo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ga(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Bo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Bo(),n.sibling=null,t=Li.current,co(Li,i?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Qa(e){switch(e.tag){case 1:ho(e.type)&&bo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(ji(),so(po),so(fo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return Ai(e),null;case 13:return so(Li),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return so(Li),null;case 4:return ji(),null;case 10:return ti(e),null;default:return null}}function Xa(e,t){return{value:e,source:t,stack:be(t)}}Ba=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ua=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l,s,c=t.stateNode;switch(Di(Ni.current),e=null,n){case"input":a=ke(c,a),r=ke(c,r),e=[];break;case"option":a=Ne(c,a),r=Ne(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Ce(c,a),r=Ce(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(l in on(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(s in c=a[l])c.hasOwnProperty(s)&&(n||(n={}),n[s]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(_.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var u=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&u!==c&&(null!=u||null!=c))if("style"===l)if(c){for(s in c)!c.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in u)u.hasOwnProperty(s)&&c[s]!==u[s]&&(n||(n={}),n[s]=u[s])}else n||(e||(e=[]),e.push(l,n)),n=u;else"dangerouslySetInnerHTML"===l?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(e=e||[]).push(l,u)):"children"===l?c===u||"string"!=typeof u&&"number"!=typeof u||(e=e||[]).push(l,""+u):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(_.hasOwnProperty(l)?(null!=u&&sn(i,l),e||c===u||(e=[])):(e=e||[]).push(l,u))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Wa=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Ya="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=be(n)),null!==n&&he(n.type),t=t.value,null!==e&&1===e.tag&&he(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){vs(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ol(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function il(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ol(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&bn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,t,n){switch("function"==typeof ks&&ks(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ho(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){vs(o,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){vs(e,t)}}(t,n);break;case 5:tl(t);break;case 4:ul(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function sl(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(sl(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Be(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||sl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function ul(e,t,n){for(var r,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var s=e,c=i,u=n,d=c;;)if(al(s,d,u),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===c)break e;for(;null===d.sibling;){if(null===d.return||d.return===c)break e;d=d.return}d.sibling.return=d.return,d=d.sibling}o?(s=r,c=i.stateNode,8===s.nodeType?s.parentNode.removeChild(c):s.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(al(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function dl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&_e(n,r),an(e,o),t=an(e,r),o=0;o<i.length;o+=2){var l=i[o],s=i[o+1];"style"===l?nn(n,s):"dangerouslySetInnerHTML"===l?Re(n,s):"children"===l?Be(n,s):Q(n,l,s,t)}switch(e){case"input":Se(n,r);break;case"textarea":Me(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Il=Bo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void fl(t);case 19:return void fl(t);case 17:return}throw Error(a(163))}function fl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ya),t.forEach((function(t){var r=xs.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function gl(e,t,n){(n=si(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ll||(Ll=!0,Ol=r),el(e,t)},n}function ml(e,t,n){(n=si(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return el(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fl?Fl=new Set([this]):Fl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var hl,bl=Math.ceil,vl=Z.ReactCurrentDispatcher,yl=Z.ReactCurrentOwner,xl=0,wl=3,kl=4,El=0,_l=null,Sl=null,zl=0,Tl=xl,Nl=null,Pl=1073741823,Cl=1073741823,Dl=null,Ml=0,jl=!1,Il=0,Al=null,Ll=!1,Ol=null,Fl=null,Rl=!1,Bl=null,Ul=90,Wl=null,Hl=0,Vl=null,ql=0;function $l(){return 0!=(48&El)?1073741821-(Bo()/10|0):0!==ql?ql:ql=1073741821-(Bo()/10|0)}function Kl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Uo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&El))return zl;if(null!==n)e=Jo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Jo(e,150,100);break;case 97:case 96:e=Jo(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==_l&&e===zl&&--e,e}function Jl(e,t){if(50<Hl)throw Hl=0,Vl=null,Error(a(185));if(null!==(e=Gl(e,t))){var n=Uo();1073741823===t?0!=(8&El)&&0==(48&El)?Yl(e):(Ql(e),0===El&&$o()):Ql(e),0==(4&El)||98!==n&&99!==n||(null===Wl?Wl=new Map([[e,t]]):(void 0===(n=Wl.get(e))||n>t)&&Wl.set(e,t))}}function Gl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(_l===o&&(as(t),Tl===kl&&js(o,zl)),Is(o,t)),o}function Zl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Ms(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ql(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=qo(Yl.bind(null,e));else{var t=Zl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=$l();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==jo&&_o(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?qo(Yl.bind(null,e)):Vo(r,Xl.bind(null,e),{timeout:10*(1073741821-t)-Bo()}),e.callbackNode=t}}}function Xl(e,t){if(ql=0,t)return As(e,t=$l()),Ql(e),null;var n=Zl(e);if(0!==n){if(t=e.callbackNode,0!=(48&El))throw Error(a(327));if(ms(),e===_l&&n===zl||ns(e,n),null!==Sl){var r=El;El|=16;for(var o=os();;)try{ss();break}catch(t){rs(e,t)}if(ei(),El=r,vl.current=o,1===Tl)throw t=Nl,ns(e,n),js(e,n),Ql(e),t;if(null===Sl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Tl,_l=null,r){case xl:case 1:throw Error(a(345));case 2:As(e,2<n?2:n);break;case wl:if(js(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=ds(o)),1073741823===Pl&&10<(o=Il+500-Bo())){if(jl){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,ns(e,n);break}}if(0!==(i=Zl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=yn(fs.bind(null,e),o);break}fs(e);break;case kl:if(js(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=ds(o)),jl&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,ns(e,n);break}if(0!==(o=Zl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Cl?r=10*(1073741821-Cl)-Bo():1073741823===Pl?r=0:(r=10*(1073741821-Pl)-5e3,0>(r=(o=Bo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*bl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=yn(fs.bind(null,e),r);break}fs(e);break;case 5:if(1073741823!==Pl&&null!==Dl){i=Pl;var l=Dl;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Bo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){js(e,n),e.timeoutHandle=yn(fs.bind(null,e),r);break}}fs(e);break;default:throw Error(a(329))}if(Ql(e),e.callbackNode===t)return Xl.bind(null,e)}}return null}function Yl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&El))throw Error(a(327));if(ms(),e===_l&&t===zl||ns(e,t),null!==Sl){var n=El;El|=16;for(var r=os();;)try{ls();break}catch(t){rs(e,t)}if(ei(),El=n,vl.current=r,1===Tl)throw n=Nl,ns(e,t),js(e,t),Ql(e),n;if(null!==Sl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,_l=null,fs(e),Ql(e)}return null}function es(e,t){var n=El;El|=1;try{return e(t)}finally{0===(El=n)&&$o()}}function ts(e,t){var n=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=n)&&$o()}}function ns(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,xn(n)),null!==Sl)for(n=Sl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&bo();break;case 3:ji(),so(po),so(fo);break;case 5:Ai(r);break;case 4:ji();break;case 13:case 19:so(Li);break;case 10:ti(r)}n=n.return}_l=e,Sl=zs(e.current,null),zl=t,Tl=xl,Nl=null,Cl=Pl=1073741823,Dl=null,Ml=0,jl=!1}function rs(e,t){for(;;){try{if(ei(),Ri.current=ha,qi)for(var n=Wi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Ui=0,Vi=Hi=Wi=null,qi=!1,null===Sl||null===Sl.return)return Tl=1,Nl=t,Sl=null;e:{var o=e,i=Sl.return,a=Sl,l=t;if(t=zl,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var s=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var u=0!=(1&Li.current),d=i;do{var f;if(f=13===d.tag){var p=d.memoizedState;if(null!==p)f=null!==p.dehydrated;else{var g=d.memoizedProps;f=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!u)}}if(f){var m=d.updateQueue;if(null===m){var h=new Set;h.add(s),d.updateQueue=h}else m.add(s);if(0==(2&d.mode)){if(d.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var b=si(1073741823,null);b.tag=2,ci(a,b)}a.expirationTime=1073741823;break e}l=void 0,a=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new pl,l=new Set,v.set(s,l)):void 0===(l=v.get(s))&&(l=new Set,v.set(s,l)),!l.has(a)){l.add(a);var y=ys.bind(null,o,s,a);s.then(y,y)}d.effectTag|=4096,d.expirationTime=t;break e}d=d.return}while(null!==d);l=Error((he(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+be(a))}5!==Tl&&(Tl=2),l=Xa(l,a),d=i;do{switch(d.tag){case 3:s=l,d.effectTag|=4096,d.expirationTime=t,ui(d,gl(d,s,t));break e;case 1:s=l;var x=d.type,w=d.stateNode;if(0==(64&d.effectTag)&&("function"==typeof x.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Fl||!Fl.has(w)))){d.effectTag|=4096,d.expirationTime=t,ui(d,ml(d,s,t));break e}}d=d.return}while(null!==d)}Sl=us(Sl)}catch(e){t=e;continue}break}}function os(){var e=vl.current;return vl.current=ha,null===e?ha:e}function is(e,t){e<Pl&&2<e&&(Pl=e),null!==t&&e<Cl&&2<e&&(Cl=e,Dl=t)}function as(e){e>Ml&&(Ml=e)}function ls(){for(;null!==Sl;)Sl=cs(Sl)}function ss(){for(;null!==Sl&&!Io();)Sl=cs(Sl)}function cs(e){var t=hl(e.alternate,e,zl);return e.memoizedProps=e.pendingProps,null===t&&(t=us(e)),yl.current=null,t}function us(e){Sl=e;do{var t=Sl.alternate;if(e=Sl.return,0==(2048&Sl.effectTag)){if(t=Za(t,Sl,zl),1===zl||1!==Sl.childExpirationTime){for(var n=0,r=Sl.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sl.firstEffect),null!==Sl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sl.firstEffect),e.lastEffect=Sl.lastEffect),1<Sl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sl:e.firstEffect=Sl,e.lastEffect=Sl))}else{if(null!==(t=Qa(Sl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sl.sibling))return t;Sl=e}while(null!==Sl);return Tl===xl&&(Tl=5),null}function ds(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function fs(e){var t=Uo();return Ho(99,ps.bind(null,e,t)),null}function ps(e,t){do{ms()}while(null!==Bl);if(0!=(48&El))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=ds(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===_l&&(Sl=_l=null,zl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=El;El|=32,yl.current=null,mn=$t;var l=pn();if(gn(l)){if("selectionStart"in l)var s={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(s=(s=l.ownerDocument)&&s.defaultView||window).getSelection&&s.getSelection();if(c&&0!==c.rangeCount){s=c.anchorNode;var u=c.anchorOffset,d=c.focusNode;c=c.focusOffset;try{s.nodeType,d.nodeType}catch(e){s=null;break e}var f=0,p=-1,g=-1,m=0,h=0,b=l,v=null;t:for(;;){for(var y;b!==s||0!==u&&3!==b.nodeType||(p=f+u),b!==d||0!==c&&3!==b.nodeType||(g=f+c),3===b.nodeType&&(f+=b.nodeValue.length),null!==(y=b.firstChild);)v=b,b=y;for(;;){if(b===l)break t;if(v===s&&++m===u&&(p=f),v===d&&++h===c&&(g=f),null!==(y=b.nextSibling))break;v=(b=v).parentNode}b=y}s=-1===p||-1===g?null:{start:p,end:g}}else s=null}s=s||{start:0,end:0}}else s=null;hn={activeElementDetached:null,focusedElem:l,selectionRange:s},$t=!1,Al=o;do{try{gs()}catch(e){if(null===Al)throw Error(a(330));vs(Al,e),Al=Al.nextEffect}}while(null!==Al);Al=o;do{try{for(l=e,s=t;null!==Al;){var x=Al.effectTag;if(16&x&&Be(Al.stateNode,""),128&x){var w=Al.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&x){case 2:cl(Al),Al.effectTag&=-3;break;case 6:cl(Al),Al.effectTag&=-3,dl(Al.alternate,Al);break;case 1024:Al.effectTag&=-1025;break;case 1028:Al.effectTag&=-1025,dl(Al.alternate,Al);break;case 4:dl(Al.alternate,Al);break;case 8:ul(l,u=Al,s),ll(u)}Al=Al.nextEffect}}catch(e){if(null===Al)throw Error(a(330));vs(Al,e),Al=Al.nextEffect}}while(null!==Al);if(k=hn,w=pn(),x=k.focusedElem,s=k.selectionRange,w!==x&&x&&x.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==s&&gn(x)&&(w=s.start,void 0===(k=s.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=x.textContent.length,l=Math.min(s.start,u),s=void 0===s.end?l:Math.min(s.end,u),!k.extend&&l>s&&(u=s,s=l,l=u),u=fn(x,l),d=fn(x,s),u&&d&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==d.node||k.focusOffset!==d.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),l>s?(k.addRange(w),k.extend(d.node,d.offset)):(w.setEnd(d.node,d.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}$t=!!mn,hn=mn=null,e.current=n,Al=o;do{try{for(x=e;null!==Al;){var E=Al.effectTag;if(36&E&&il(x,Al.alternate,Al),128&E){w=void 0;var _=Al.ref;if(null!==_){var S=Al.stateNode;switch(Al.tag){case 5:w=S;break;default:w=S}"function"==typeof _?_(w):_.current=w}}Al=Al.nextEffect}}catch(e){if(null===Al)throw Error(a(330));vs(Al,e),Al=Al.nextEffect}}while(null!==Al);Al=null,Ao(),El=i}else e.current=n;if(Rl)Rl=!1,Bl=e,Ul=t;else for(Al=o;null!==Al;)t=Al.nextEffect,Al.nextEffect=null,Al=t;if(0===(t=e.firstPendingTime)&&(Fl=null),1073741823===t?e===Vl?Hl++:(Hl=0,Vl=e):Hl=0,"function"==typeof ws&&ws(n.stateNode,r),Ql(e),Ll)throw Ll=!1,e=Ol,Ol=null,e;return 0!=(8&El)||$o(),null}function gs(){for(;null!==Al;){var e=Al.effectTag;0!=(256&e)&&nl(Al.alternate,Al),0==(512&e)||Rl||(Rl=!0,Vo(97,(function(){return ms(),null}))),Al=Al.nextEffect}}function ms(){if(90!==Ul){var e=97<Ul?97:Ul;return Ul=90,Ho(e,hs)}}function hs(){if(null===Bl)return!1;var e=Bl;if(Bl=null,0!=(48&El))throw Error(a(331));var t=El;for(El|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),ol(5,n)}}catch(t){if(null===e)throw Error(a(330));vs(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return El=t,$o(),!0}function bs(e,t,n){ci(e,t=gl(e,t=Xa(n,t),1073741823)),null!==(e=Gl(e,1073741823))&&Ql(e)}function vs(e,t){if(3===e.tag)bs(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){bs(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fl||!Fl.has(r))){ci(n,e=ml(n,e=Xa(t,e),1073741823)),null!==(n=Gl(n,1073741823))&&Ql(n);break}}n=n.return}}function ys(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),_l===e&&zl===n?Tl===kl||Tl===wl&&1073741823===Pl&&Bo()-Il<500?ns(e,zl):jl=!0:Ms(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ql(e)))}function xs(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Kl(t=$l(),e,null)),null!==(e=Gl(e,t))&&Ql(e)}hl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Ca=!0;else{if(r<n){switch(Ca=!1,t.tag){case 3:Ra(t),Na();break;case 5:if(Ii(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ho(t.type)&&xo(t);break;case 4:Mi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Zo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Va(e,t,n):(co(Li,1&Li.current),null!==(t=Ja(e,t,n))?t.sibling:null);co(Li,1&Li.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Ka(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Li,Li.current),!r)return null}return Ja(e,t,n)}Ca=!1}}else Ca=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=mo(t,fo.current),ri(t,n),o=Ji(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ho(r)){var i=!0;xo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&mi(t,r,l,e),o.updater=hi,t.stateNode=o,o._reactInternalFiber=t,xi(t,r,e,n),t=Fa(null,t,r,!0,i,n)}else t.tag=0,Da(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Ss(e)?1:0;if(null!=e){if((e=e.$$typeof)===se)return 11;if(e===de)return 14}return 2}(o),e=Go(o,e),i){case 0:t=La(null,t,o,e,n);break e;case 1:t=Oa(null,t,o,e,n);break e;case 11:t=Ma(null,t,o,e,n);break e;case 14:t=ja(null,t,o,Go(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,La(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oa(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(Ra(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,li(e,t),di(t,r,null,n),(r=t.memoizedState.element)===o)Na(),t=Ja(e,t,n);else{if((o=t.stateNode.hydrate)&&(wa=wn(t.stateNode.containerInfo.firstChild),xa=t,o=ka=!0),o)for(n=zi(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Da(e,t,r,n),Na();t=t.child}return t;case 5:return Ii(t),null===e&&Sa(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,vn(r,o)?l=null:null!==i&&vn(r,i)&&(t.effectTag|=16),Aa(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Da(e,t,l,n),t=t.child),t;case 6:return null===e&&Sa(t),null;case 13:return Va(e,t,n);case 4:return Mi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):Da(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ma(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return Da(e,t,t.pendingProps,n),t.child;case 8:case 12:return Da(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var s=t.type._context;if(co(Zo,s._currentValue),s._currentValue=i,null!==l)if(s=l.value,0===(i=Or(s,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,i):1073741823))){if(l.children===o.children&&!po.current){t=Ja(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var c=s.dependencies;if(null!==c){l=s.child;for(var u=c.firstContext;null!==u;){if(u.context===r&&0!=(u.observedBits&i)){1===s.tag&&((u=si(n,null)).tag=2,ci(s,u)),s.expirationTime<n&&(s.expirationTime=n),null!==(u=s.alternate)&&u.expirationTime<n&&(u.expirationTime=n),ni(s.return,n),c.expirationTime<n&&(c.expirationTime=n);break}u=u.next}}else l=10===s.tag&&s.type===t.type?null:s.child;if(null!==l)l.return=s;else for(l=s;null!==l;){if(l===t){l=null;break}if(null!==(s=l.sibling)){s.return=l.return,l=s;break}l=l.return}s=l}Da(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Da(e,t,r,n),t.child;case 14:return i=Go(o=t.type,t.pendingProps),ja(e,t,o,i=Go(o.type,i),r,n);case 15:return Ia(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ho(r)?(e=!0,xo(t)):e=!1,ri(t,n),vi(t,r,o),xi(t,r,o,n),Fa(null,t,r,!0,e,n);case 19:return Ka(e,t,n)}throw Error(a(156,t.tag))};var ws=null,ks=null;function Es(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function _s(e,t,n,r){return new Es(e,t,n,r)}function Ss(e){return!(!(e=e.prototype)||!e.isReactComponent)}function zs(e,t){var n=e.alternate;return null===n?((n=_s(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ts(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Ss(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return Ns(n.children,o,i,t);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=_s(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=_s(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case ue:return(e=_s(19,n,t,o)).elementType=ue,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case se:l=11;break e;case de:l=14;break e;case fe:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=_s(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Ns(e,t,n,r){return(e=_s(7,e,r,t)).expirationTime=n,e}function Ps(e,t,n){return(e=_s(6,e,null,t)).expirationTime=n,e}function Cs(e,t,n){return(t=_s(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ds(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Ms(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function js(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Is(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function As(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Ls(e,t,n,r){var o=t.current,i=$l(),l=pi.suspense;i=Kl(i,o,l);e:if(n){t:{if(Ye(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var s=n;do{switch(s.tag){case 3:s=s.stateNode.context;break t;case 1:if(ho(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break t}}s=s.return}while(null!==s);throw Error(a(171))}if(1===n.tag){var c=n.type;if(ho(c)){n=yo(n,c,s);break e}}n=s}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=si(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),Jl(o,i),i}function Os(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fs(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Rs(e,t){Fs(e,t),(e=e.alternate)&&Fs(e,t)}function Bs(e,t,n){var r=new Ds(e,t,n=null!=n&&!0===n.hydrate),o=_s(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,ai(o),e[zn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);zt.forEach((function(e){gt(e,t,n)})),Tt.forEach((function(e){gt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Us(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ws(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Os(a);l.call(e)}}Ls(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Bs(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var s=o;o=function(){var e=Os(a);s.call(e)}}ts((function(){Ls(t,a,e,o)}))}return Os(a)}function Hs(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vs(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Us(t))throw Error(a(200));return Hs(e,t,null,n)}Bs.prototype.render=function(e){Ls(e,this._internalRoot,null,null)},Bs.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ls(null,e,null,(function(){t[zn]=null}))},mt=function(e){if(13===e.tag){var t=Jo($l(),150,100);Jl(e,t),Rs(e,t)}},ht=function(e){13===e.tag&&(Jl(e,3),Rs(e,3))},bt=function(e){if(13===e.tag){var t=$l();Jl(e,t=Kl(t,e,null)),Rs(e,t)}},N=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Cn(r);if(!o)throw Error(a(90));we(r),Se(r,o)}}}break;case"textarea":Me(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},I=es,A=function(e,t,n,r,o){var i=El;El|=4;try{return Ho(98,e.bind(null,t,n,r,o))}finally{0===(El=i)&&$o()}},L=function(){0==(49&El)&&(function(){if(null!==Wl){var e=Wl;Wl=null,e.forEach((function(e,t){As(t,e),Ql(t)})),$o()}}(),ms())},O=function(e,t){var n=El;El|=2;try{return e(t)}finally{0===(El=n)&&$o()}};var qs,$s,Ks={Events:[Nn,Pn,Cn,z,E,On,function(e){ot(e,Ln)},M,j,Qt,lt,ms,{current:!1}]};$s=(qs={findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ws=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},ks=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},qs,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Z.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $s?$s(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ks,t.createPortal=Vs,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&El))throw Error(a(187));var n=El;El|=1;try{return Ho(99,e.bind(null,t))}finally{El=n,$o()}},t.hydrate=function(e,t,n){if(!Us(t))throw Error(a(200));return Ws(null,e,t,!0,n)},t.render=function(e,t,n){if(!Us(t))throw Error(a(200));return Ws(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Us(e))throw Error(a(40));return!!e._reactRootContainer&&(ts((function(){Ws(null,null,e,!1,(function(){e._reactRootContainer=null,e[zn]=null}))})),!0)},t.unstable_batchedUpdates=es,t.unstable_createPortal=function(e,t){return Vs(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Us(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Ws(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(373)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,u=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(u,0),e}},d=Date.now();t.unstable_now=function(){return Date.now()-d},r=function(e){null!==s?setTimeout(r,0,e):(s=e,setTimeout(u,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,p=window.Date,g=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var b=p.now();t.unstable_now=function(){return p.now()-b}}var v=!1,y=null,x=-1,w=5,k=0;a=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,_=E.port2;E.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();k=e+w;try{y(!0,e)?_.postMessage(null):(v=!1,y=null)}catch(e){throw _.postMessage(null),e}}else v=!1},r=function(e){y=e,v||(v=!0,_.postMessage(null))},o=function(e,n){x=g((function(){e(t.unstable_now())}),n)},i=function(){m(x),x=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<N(o,t)))break e;e[r]=t,e[n]=o,n=r}}function z(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,s=e[l];if(void 0!==a&&0>N(a,n))void 0!==s&&0>N(s,a)?(e[r]=s,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==s&&0>N(s,n)))break e;e[r]=s,e[l]=n,r=l}}}return t}return null}function N(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],C=[],D=1,M=null,j=3,I=!1,A=!1,L=!1;function O(e){for(var t=z(C);null!==t;){if(null===t.callback)T(C);else{if(!(t.startTime<=e))break;T(C),t.sortIndex=t.expirationTime,S(P,t)}t=z(C)}}function F(e){if(L=!1,O(e),!A)if(null!==z(P))A=!0,r(R);else{var t=z(C);null!==t&&o(F,t.startTime-e)}}function R(e,n){A=!1,L&&(L=!1,i()),I=!0;var r=j;try{for(O(n),M=z(P);null!==M&&(!(M.expirationTime>n)||e&&!a());){var l=M.callback;if(null!==l){M.callback=null,j=M.priorityLevel;var s=l(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof s?M.callback=s:M===z(P)&&T(P),O(n)}else T(P);M=z(P)}if(null!==M)var c=!0;else{var u=z(C);null!==u&&o(F,u.startTime-n),c=!1}return c}finally{M=null,j=r,I=!1}}function B(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var U=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||I||(A=!0,r(R))},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_getFirstCallbackNode=function(){return z(P)},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=U,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var s=a.delay;s="number"==typeof s&&0<s?l+s:l,a="number"==typeof a.timeout?a.timeout:B(e)}else a=B(e),s=l;return e={id:D++,callback:n,priorityLevel:e,startTime:s,expirationTime:a=s+a,sortIndex:-1},s>l?(e.sortIndex=s,S(C,e),null===z(P)&&e===z(C)&&(L?i():L=!0,o(F,s-l))):(e.sortIndex=a,S(P,e),A||I||(A=!0,r(R))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();O(e);var n=z(P);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=a(n(56)),c=function(e){function t(t){var n=e.call(this,t)||this;return n.state={image:t.image&&typeof{}==typeof t.image?t.image:void 0,moduleMenu:t.moduleMenu&&typeof{}==typeof t.moduleMenu?t.moduleMenu:void 0,textLong:t.textLong&&"string"==typeof t.textLong?t.textLong:void 0,textShort:t.textShort&&"string"==typeof t.textShort?t.textShort:void 0},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return s.default(["image","moduleMenu","textLong","textShort"],e,t)?{image:e.image&&typeof{}==typeof e.image?e.image:void 0,moduleMenu:e.moduleMenu&&typeof{}==typeof e.moduleMenu?e.moduleMenu:void 0,textLong:e.textLong&&"string"==typeof e.textLong?e.textLong:void 0,textShort:e.textShort&&"string"==typeof e.textShort?e.textShort:void 0}:null},t.prototype.render=function(){var e=this.state,t=e.moduleMenu,n=e.image,r=e.textLong,o=e.textShort;return l.createElement("div",{className:"Sidebar-holder"},l.createElement("div",{className:"title-logo flex-start"},n&&l.createElement("div",{className:"logo"},n),l.createElement("div",{className:"version flex flex-column flex-start"},l.createElement("span",{className:"name"},r),l.createElement("i",null,o))),l.createElement("div",{className:"menu"},t&&t))},t}(l.Component);t.default=c},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=a(n(45)),c=n(73),u=a(n(381)),d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.render=function(){var e=s.default();return l.createElement("div",{className:"AddonNotAvailable"},l.createElement("img",{alt:"image",src:c.addonRoot()+"/Images/logo-128.png"}),l.createElement("h1",{className:"h1-title ff-title text-center"},e.addon_not_available),l.createElement("a",{className:"dashboard-link",onClick:function(e){return u.default(e,c.addonPrefixDashboard()+"#")},href:c.addonPrefixDashboard()+"#"},e.popup_title_dashboard))},t}(l.Component);t.default=d},function(e,t,n){"use strict";var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(1)),i={download_base64:"Download als base64",loading:"Laden...",links:"Links",img_tag:"Foto vom Tag",img_requests:"Foto von Anfrage",img_from_request:"Fotos von Anfragen",img_from_tags:"Fotos von <img /> Tag von der Wesbite",addon_not_available:"Diese Webseite unterstützt keine Addons",NoDataBlockedItems:"Keine blockierten Daten",home_chat:"Mit Freunden chatten - ohne Tracking",home_messages:"Nachrichten senden - ohne Tracking",home_security:"Sicherheit im Internet - Blockierung von Trackern",home_images_1:"Fotos herunterladen im originalem Format",home_images_2:"Fotos einzeln herunterladen",home_images_3:"Fotos gebündelt herunterladen",messages_main:"Nachrichten",menu_text_messages:"Nachrichten",menu_title_messages:"Navigiere zu den Nachrichten",menu_text_notifications:"Benachrichtigungen",menu_title_notifications:"Navigiere zu den Benachrichtigungen",menu_text_favourites:"Freunde",menu_title_favourites:"Navigiere zu den Freunde",menu_text_add_favourites:"Suche",menu_title_add_favourites:"Navigiere zu der Freunden Suche",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigiere zu dem Chat",menu_text_security:"Sicherheit",menu_text_security_main:"Listen",menu_title_security:"Navigiere zu dem Bereich Sicherheit",menu_text_security_settings:"Einstellungen",menu_title_security_settings:"Navigiere zu dem Bereich Sicherheits Einstellungen",menu_text_cookies:"Cookies",menu_title_cookies:"Navigiere zu dem Bereich Cookies",menu_text_home:"Startseite",menu_title_home:"Navigiere zur Startseite",menu_text_iframes:"Iframes",menu_title_iframes:"Navigiere zu dem Bereich Iframes",menu_text_security_examples:"Beispiele",menu_title_security_examples:"Navigiere zu dem Bereich Sichereich Beispiele",menu_text_download_images:"Fotos herunterladen",menu_title_download_images:"Navigiere zu dem Bereich Fotos herunterladen",menu_text_images:"Fotos",menu_text_images_favourites:"Gespeicherte Fotos",menu_title_images_favourites:"Navigiere zu dem Bereich gespiecherte Fotos",notifications:"Benachrichtigungen",view_all_notifications:"Alle Benachrichtigungen",no_notifications:"Keine Benachrichtigungen",messages:"Nachrichten",view_all_messages:"Alle Nachrichten",no_messages:"Keine Nachrichten",account:"Benutzer",view_all_account:"Benutzer Einstellungen",no_data:"Keine Daten",no_data_available:"Keine Benutzerdaten vorhanden",accountSettings:"Einstellungen",accountLogout:"Logout",accountPrivacyTerms:"Datenschutzbestimmungen",titlelogin:"Login",titleUsername:"E-mail",titlePassword:"Password",signInButton:"Login",loginMainTitle:"Login",loginMainTitleSuffix:"Login",registrationButton:"Account erstellen",errorMessageLoginEmptyFields:"E-mail and Password sind Pfilchtfelder",errorMessageLoginInvalidCredentials:"Logindaten nicht korrekt",errorMessageRegistrationCheckbox:"Es kann nicht fortgefahren werden ohne eine Zustimmung von Speicherung von persönlichen Daten",currentLoggedInAs:"Derzeit eingeloggt als Benutzer",fortgotPassword:"Passwort vergessen ?",home:"Startseite",logoutButton:"Ausloggen",backToLogin:"Zurück zum Login",registrationMainTitleSuffix:"Registration",registrationButtonRegister:"Registrierung",titleFirstName:"Vorname",titleLastName:"Nachname",errorMessageUserAlreadyExsists:"Diese Email Adresse existiert bereits",errorMessageRegistrationEmptyFields:"All Felder sind Pflichtfelder",deleteAccount:"Konto löschen",acceptSavingDataTitle:"Ich stimme der Datenschutzerklärung zu",deleteAccountTitle:"Löschung bestätigen",deleteAccountText:"Bist du sicher dass due dein Account löschen möchtest ?",deleteAccountNo:"Auf keinen Fall !",deleteAccountYes:"Ja",deleteAccountPasswordConfirmation:"Password Bestätigung",deleteAccountErrorMessageEmptyFields:"Password ist eine Pfilchfeld",deleteAccountErrorMessageWrongPassword:"Falsches Password",globalNetworkError:"Netzwerk Fehler.",globalProcessError:"Interner Fehler.",globalUserDoesNotExsists:"Benutzerkonto existiert nicht",globalInvalidEmailsAdress:"Ungültiges E-Mail-Adressformat",globalErrormessagePrefix:"Es wurde ein Fehler gefunden, der dazu führt, dass die Anwendung nicht ordnungsgemäß funktioniert.",globalErrormessageCloseButton:"Ignorieren",globalErrormessageLearnMoreButton:"Mehr lesen",globalInvalidCountry:"Fehlerhaftes Land",globalInvalidLanguage:"Fehlerhafte Sprache",globalErrorCodeTitle:"Fehlercode",globalErrorCode_1:'Netzwerkfehler. Wenn ein Netzwerkfehler aufgetreten ist, ist eine "Ajax" -Anforderung fehlgeschlagen. Überprüfen Sie Ihre Netzwerkverbindung oder das, da der Remote-Dienst derzeit nicht verfügbar ist.',globalErrorCode_2:"App-Prozessfehler. Dies bedeutet, dass die Antwort auf Ajax-Anforderungen eine ungültige Struktur für die Anwendung bereitgestellt hat.",globalErrorCode_3:"Antwort anders als erwartet. Der Mittelwert des angeforderten Werts des aktuellen Anwendungskontexts ist ungültig.",code:"Code",listNotSynchronizedUserNotLoggedIn:"Du bist nicht eingeloggt deshalb kann diese Liste nicht synchronisiert werden",notLoggedIn:"Nicht eingeloggt Fehler",listSynchronized_one:"Element synchronisiert",listSynchronized_more:"Elemente synchronisiert",loginRequired:"Um diese Aktion durchführen zu können, müssen Sie eingeloggt sein",messagesNewMessage:"Neu Nachricht",messagesInbox:"Eingang",messagesOutbox:"Gesendet",messagesImportant:"Wichtig",messagesTrash:"Papierkorb",messagesDrafts:"Entwürfe",messageToText:"Zu",messageDetailsBoxFrom:"Von",messageDetailsBoxFromEmail:"",messageDetailsBoxTo:"Zu",messageDetailsBoxDate:"Datum",messageDetailsBoxTitle:"Betreff",messagesNewMessageEmptyField:"E-mail Adresse",messagesNewMessageNoResults:"Benutzer nicht gefunden",messagesNewMessageCurrentUserAllreadyChoosed:"Benutzer derzeit schon ausgewählt",messagesNewMessagePlaceholdersearchInput:"E-mail Empfänger",messagesNewMessageTitle:"Neu",messagesNewMessageMessagesTitle:"Betreff",messagesNewMessageMessagesText:"Text",messagesNewMessageSend:"Senden",messagesNewMessageReipientDoesNotExsists:"Einz der angegebene Empfänger existiert nicht",errorMessageNewMessagePleaseSearchForRecipient:"Bitte füge einen Benutzer über die Suchfunktion hinzu oder füge einen Benutzer zu deinene Favoriten hinzu - diese erscheinen dann automatisch als Vorschlag wenn Sie anfangen zu tippen",messages_area:"Wilkommen bei den Nachrichten",messages_area_1:"Schreibe eine Nachricht von jedem Platz auf der Welt",messages_area_2:"Autospeicherung von Nachrichten als Entwurft",messages_area_3:"Einzelne Anhänge bis zu 5MB",messages_list:"Keine Nachrichten in der Liste",userSettings:"Benutzekonto Einstellungen",userSettings_password:"Passwort",userSettings_firstname:"Vorname",userSettings_lastname:"Nachname",userSettings_language:"Sprache",saveUserDataButton:"Speichern",errorMessageUserUpdateEmptyFields:"Leeere Felder sind nicht erlaubt",errorMessageUserUpdateError:"Fehler bei der Benutzerkonto Aktualisierung",successUpdate:"Benutzerkonto wurde aktualisiert",titleDeleteCookie:"Einzelnes Cookie Element löschen",titleCopyCookieValue:"Wert von dem Cookie in den zwischen speichern",cookie_msg_1:"Domäne:",cookie_msg_2:"Name:",cookie_msg_3:"Wert:",cookie_msg_4:"Alle Cookies löschen. Es ist gut möglich das du danach aus der Seite ausgeloggst wirst.",cookiesNoData:"Keine Cookies vorhanden",passwordResetMainTitleSuffix:"Passwort reset",passwordResetButton:"Reset",followTheMailInstructions:"Es wurde eine E-mail an die angegebene Adresse versendet",favouritesNoData:'Um einen neuen Favoriten hinzuzufügen, navigieren Sie bitte zur Seite "Favoriten-Suche"',favouritesTitleCurrentFavourites:"Ihre aktuelle Freunde",favouritesTitleSearchForUsers:"Benutzersuche",favouritesSince:"Freundschafts Zeitraum",favouritesRemoveFriend:"Freundschaft beenden",favouritesRemoveFriendTooltip:"Freundschaft beenden mit",favouritesAddFriend:"Freundschaft starten",favouritesAddFriendTooltip:"Freundschaft starten mit ",favouritesRemoveFriendResponseSuccess:"Freundschaft beended für",favouritesRemoveFriendResponseError:"Fehler während der Beending der Freundschaft mit",favouritesAddFriendResponseSuccess:"Freundschaft gestarted mit Friendship started",favouritesAddFriendResponseError:"Fehler beim Start der Freundschaft mit",favouritesNoResultsSuggestions:"Keine Benutzer gefunden",favouritesEmptyField:"Das Suchfeld darf nicht leer sein",favouritesAllreadyFriends:"Die Freundschaft existiert bereits mit",chatNoDataFavourites:'Keine Favoriten gefunden. Um einen Chat zu starten, fügen Sie bitte einen Benutzer von der Seite "Favoriten Suche" hinzu.',chatNoDataLoading:"Favouriten Liste wird geladen...",chatNoFavouritesUserSelected:"Wählen Sie bitte einen Benutzer aus Ihrer Favoritenliste.",chatNoDataInsideChat:"Keine Historien Enträge gefunden für den ausgewählten Benutzer.",chatInputPlaceholder:"Nachricht...",chatToggleInputFieldType:"Ändern Sie den Eingabetyp von einzeilig in mehrzeilig und umgekehrt",chatUploadFileTitle:"Senden Sie Dateien an Ihren Freund",chatUploadFile:"Dateien senden",chatSendFilesTo:"Senden Sie ausgewählte Dateien an Ihren Freund",chatSendFilesToButton:"Dateien senden",no_history_available:"Derzeit kein Chat-Verlauf",view_all_chat:"Chat öffnen",popup_not_readed_title:"Chat - neue Nachricht",popup_no_new_messages:"Keine neuen Nachrichten",chat_file:"Datei senden",chatLoadingData:"Konversation wird geladen...",avatarErrorFileType:"Nicht erkannter Dateityp",avatarErrorFileSize:"Die Dateigröße überschreitet das Limit von 5 MB für Avatar",avatarErrorFileTypeSupport:"Es sind nur die Dateitypen jpg, png und gif zulässig",blacklistedElementsWords:"Blacklist Wörter",blacklistedElementsDomians:"Blacklist Domänen",blacklistedElementsUrlsIncludes:"Blacklist Url Adressen",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Blockierung von HTML für class",blacklistedElementsId:"Blockierung von HTML für id",blacklistedElementsHref:"Blockierung von HTML für href",blacklistedElementsIframes:"Blacklist Iframes",copiedToClipBoard:"In die Zwischenablage kopiert",action_title_copyToClipboard:"Liste in Zwischenablage kopieren",action_title_exportToFile:"Liste in JSON-Feld exportieren",action_title_deleteList:"Liste global leeren",action_title_copyToClipboard_single:"Wert in Zwischenablage kopieren",action_title_delete_single:"Eintrag löschen",forThisFunctionLogin:"Um diese Aktion auszuführen, melden Sie sich bitte an",emptyListDone:"Liste wurde geleert",restoreDefaultValue:"Stellen Sie die Liste auf den Standardwert zurück",whitelistedElementsDomains:"Whitelist Domänen",securityIsOn:"Das Sicherheits Feature dieser Erweiterung AN oder AUS.",scanTextOnWebsite:"Wenn Sie diese Option ausschalten, werden alle Wörte auf den Websiten NICHT gescannt. Schwarze Liste: Wörte/ Attribute/ Attribute Wörter - werden ignoriert.",allowOnlyHttpsProtocol:"Erlaube nur den Besuch von HTTPS Websites - also der Zugriff auf alle HTTP Webseiten wird blockiert.",allowOnlyHttpProtocol:"Erlaube nur den Besuch von HTTP Websites - also der Zugriff auf alle HTTPS Webseiten wird blockiert.",makeSearchInSourceCode:"Scannen Sie Wörter im Quellcode eines bestimmten HTML-Elements (innerHTML) oder nur im Text von HTML-Elementen (innerText).",mutationCheck:"Überprüfen der HTML-Elemente von Websites nach dem Laden der Seite (DOM Mutationen von HTML Elementen in der Regel durchgeführt von Javascript Bibliotheken).",ignoreTagStyle:'Den Kod innerhalb von den "STYLE" Tags (<style> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagScript:'Den Kod innerhalb von den "Script" Tags (<script> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagLink:'Den Kod innerhalb von den "Link" Tags (<link> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',ignoreTagMeta:'Den Kod innerhalb von den "Meta" Tags (<meta> Tag) beim Scan Prozess ignorieren anhand der Schwarzen Liste Wörter.',replacer:"Ersetze jedes einzelne Gefahrenwortzeichen durch diesen Eintrag. Die Gefahrenwörter sind Wörte aus Ihrer eigen definierten Schwarzen Liste Wörter.",maximumOfDangerWords:"Nach Erreichen dieses Wertes - anhand der schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id, dann wird die Website gesperrt. Der Minimalwert ist 1, der Maximalwert ist 300.",limitlessScan:"Ignorieren Sie die maximale Anzahl von blockierten Gefahren anhand den Schwarzen Listen: Blacklist Wörte, Blockierung von HTML für class, Blockierung von HTML für href oder Blockierung von HTML für id. Die Website wird nicht blockiert (ignorieren Sie den obigen Wert). Wenn Sie diese Funktion aktivieren, kann Protection die Leistung Ihres Browsers beeinträchtigen.",deleteCookies:"Lösche alle Cookies anhand der Schwarzen Liste Cookies auf jeder Webseite alle 5 Sekunden ?",popupMainTitle:"Security Statistik",popup_blocked_trackers:"Blockierte Trackers",popup_blocked_cookies:"Blockierte Cookies",popup_blocked_words:"Blockierte Wörter",popup_blocked_requests:"Blockierte Anfragen",popup_blocked_iframes:"Blockierte Iframes",popup_blocked_dom:"Blockiertes HTML id, href, class",popup_title_dashboard:"Dashboard",titleDeleteIframe:"Löschen Sie einen einzelnen Iframe",iframe_msg_1:"Quelle:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Keine Iframes vorhanden",popup_add_blacklistedElementsTrackers:"Fügen Sie den Blacklist-Trackern die aktuelle Domain hinzu. Alle Versuche, auf diese Domain zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsTrackers:"Entfernen Sie die aktuelle Domain aus der Blacklist Trackern.",popup_add_blacklistedElementsDomians:"Fügen Sie der Blacklist-Domain die aktuelle Domain hinzu. Alle Versuche, von dieser Domain aus auf diese Domain oder Dienste zuzugreifen, werden blockiert.",popup_remove_blacklistedElementsDomians:"Entfernen Sie die aktuelle Domain aus der Blacklist Domänen.",popup_add_blacklistedElementsCookies:"Fügen Sie den Blacklist-Cookies die aktuelle Domain hinzu. Alle Cookies werden beim Laden der Website alle 5 Sekunden entfernt.",popup_remove_blacklistedElementsCookies:"Entfernen Sie die aktuelle Domain aus der Blacklist Cookies.",popup_add_blacklistedElementsIframes:"Aktuelle Domain zur Blacklist hinzufügen iframes.",popup_remove_blacklistedElementsIframes:"Entfernen Sie die aktuelle Domain aus der Blacklist Iframes.",popup_add_whitelistedElementsDomains:"Fügen Sie der Whitelist-Domain die aktuelle Domain hinzu und lassen Sie alles zu (keine Anfrage wird blockiert, keine Blacklist-Wortprüfung, keine Cookie-Löschung und keine automatische Iframe-Löschung).",popup_remove_whitelistedElementsDomains:"Entfernen Sie die aktuelle Domain aus der Whitelist Domänen.",popup_reload_target:"Reload website",blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Sie können hier einen Cookie-Namen oder einen Domain-Namen hinzufügen, der auf jeder Website gelöscht werden soll. Standardmäßig enthält diese Liste 640 Einträge mit vordefinierten Cookie-Namen oder Domain-Namen dass die Verwendung von Cookies für Tracking-Zwecke und dort automatisch durch den Sicherheitsinhalt gelöscht werden."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". Wenn Sie danach die Webseite besuchen: https://www.youtube.com, dann wird der Cookie mit dem Name ",o.createElement("span",{className:"colored-example-element"},"GPS")," gelöscht"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Wenn Sie danach die Webseite besuchen: https://www.7search.com, dann werden ",o.createElement("span",{className:"colored-example-element"},"alle Cookies"),"  von der Seite gelöscht.")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Dies ist eine auf Domainnamen basierende Blacklist. Alle Domains aus dieser Liste werden beim Besuch ihrer Websites blockiert."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com")," wenn Sie dann die Webseite besuchen ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"github.com")," wenn Sie dann die Webseite besuchen ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," wird der Zugruff verweigert.")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Dies ist ein Domainname und Teil der URL-basierten Blacklist. Alle Domains aus dieser Liste und alle übereinstimmenden Einträge aus der Website-URL werden blockiert, wenn eine Übereinstimmung gefunden wurde."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"package"),". Wenn Sie danach die Webseite besuchen: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"test"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test"),",  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"q"),". Wenn Sie danach die Webseite besuchen: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test,  wird der Zugruff verweigert."),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". Wenn Sie danach die Webseite besuchen: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com"),",  wird der Zugruff verweigert.")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und sich der Domainname der Website in dieser Liste befindet, werden alle Iframes entfernt."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Wenn Sie danach die Webseite besuchen: https://www.gazeta.pl werden alle Iframes von der Seite https://",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," entfernt")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Wenn Sie eine Website besuchen und die Website andere implementiert hat (Dritte) Dienste oder Tracking-Dienste und der Domainname stimmen mit einem Domainnamen aus dieser Liste überein oder der gesamte URL-Pfad stimmt dann mit einem Eintrag aus dieser Liste überein Die Anfrage wird blockiert."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),"/lib/track.js abzurufen, wird diese Abfrage blockiert"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Egal welche Webseite Sie besuchen, falls eine Webseite versuche einen Service von: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),"  abzurufen, wird diese Abfrage blockiert")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Der Sicherheitsinhalt findet jedes Wort aus dieser schwarzen Liste und jedes Wort wird durch den im Abschnitt "Einstellungen" definierten "Ersetzer" ersetzt. Wenn der Sicherheitsinhalt ein Gefahrenwort aus der "Blacklist: Words" in einem HTML-Tag gefunden hat, Anschließend werden die HTML-Tag-Attribute gescannt. Wenn ein Attributname aus dieser Liste nicht mit Einträgen aus der "Blacklist: Attribute" übereinstimmt, dann Der Sicherheitsinhalt findet jedes Wort innerhalb des Attributwerts aus dieser Liste und ersetzt jedes Zeichen durch das Ersetzerzeichen definiert im Abschnitt "Einstellungen".'),o.createElement("ul",null,o.createElement("li",null,'Zum Beispiel, wenn das Wort "guns" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "guns" ersetzt werden.',o.createElement("br",null),'Beispiel Eingabe: "we have ',o.createElement("span",{className:"colored-example-element"},"guns"),' in ...".',o.createElement("br",null),'Beispielausgabe: "we have ',o.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),o.createElement("li",null,'Zum Beispiel, wenn das Wort "seven" in dieser schwarzen Liste vorhanden ist und Sie eine Website besuchen, dann wird das Wort "seven" ersetzt werden.',o.createElement("br",null),'Beispiel Eingabe: "',o.createElement("span",{className:"colored-example-element"},"seven"),' years old ...".',o.createElement("br",null),'Beispielausgabe: "',o.createElement("span",{className:"colored-example-element"},"#####"),' years old ...".')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: class."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag: \"font-bold\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut class mit dem Wert 'font-bold' befüllt ist (z.B.: ",'<span class="font-bold"> Text </span>',") dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blockieren von "A" -Tag-Elementen basierend auf ihrem Attribut: href.'),o.createElement("ul",null,o.createElement("li",null,'Beispiel Eintrag: "redirect?". Wenn du ein Webseite besuchtst und das DOM Element ',"<a>"," das Attribut href mit dem Wert 'redirect?' befüllt hat (z.B.: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',"), dann wird das Element aus der Webseite enfernt.")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blockieren von DOM-Elementen (Tags) basierend auf dem Attribut: zd."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag: \"extern-logo\". Wenn du eine Webseite besuchtst und irgendein DOM Element das Attribut id mit dem Wert 'extern-logo' befüllt ist (z.B.: ",'<img id="extern-logo"/>',"), dann wird das Element aus der Webseite enfernt.")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Machen Sie nichts für ausgewählte Domainnamen."),o.createElement("ul",null,o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"google.com")," wenn Sie dann die Webseite besuchen https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," findet keine Überprüfung jeglicher Art statt"),o.createElement("li",null,"Beispiel Eintrag in der Liste: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com")," wenn Sie dann die Webseite besuchen https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel findet keine Überprüfung jeglicher Art statt")))),example:"Beispiele",imagesPopupTitle:"Fotos wurden gefunden",imagesNoData:"Keine validen Fotos vorhanden",imagesNoDataFavourites:"Keine gespeicherten Fotos vorhanden",imagesLoadingTabs:"Aktive tabs werden geladen...",current_tabs_title:"Offene Tabs",filter:"Filtern nach Typ",filter_all:"Alle",itemsPerSite:"Anzahl der Foto je Seite",itemsPerSiteSuffix:"Fotos",page:"Seite",of:"von",images:"Fotos",current_favourites_images:"Derzeit gespeicherte Fotos",open_in_new_tab:"Im neuen Tab öffnen",download:"Herunterladen",downloadSmall:"Herunterladen der Fotos",delete_all:"Alle löschen",notLoggedInImagesFavouritesAdd:"Nur angemeldete Benutzer können Bilder zur Favoritenliste hinzufügen",notLoggedInImagesFavouritesManage:"Nur angemeldete Benutzer können die Favoritenliste verwalten",tabsNoData:"Keine validen Tabs vorhanden",imagesLoadingData:"Fotos werden geladen...",infoItemAdded:"Eintrag wurde in die Liste hinzugefügt",infoItemRemoved:"Eintrag wurde aus der Liste entfernt",infoArrayIs0:"Liste ist leer, daher kann kein Element entfernt werden",infoIncorrectValue:"Wert ist nicht valide",infoItemInList:"Eintrag bereits in der Liste vorhanden",country:"Land",countriesNotFoundText:"Sorry, dieses Land habe ich nicht gefunden",dropText:"Hier loslassen",error:"Fehler",languages:"Sprachen"};t.default=i},function(e,t,n){"use strict";var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(1)),i={download_base64:"Download as base64",loading:"Loading...",links:"Links",img_tag:"Image from tag",img_requests:"Image from request",img_from_request:"Images from requests",img_from_tags:"Images from the <img /> tag from the website",addon_not_available:"This website are not supporting extensions",NoDataBlockedItems:"No blocked data",home_chat:"Chat with friends - without tracking",home_messages:"Send messages - without tracking",home_security:"Keep yourself secure in the internet - block trackers",home_images_1:"Download images in original format",home_images_2:"Download single images",home_images_3:"Download all available images in zip file",home:"Homepage",messages_main:"Messages",menu_text_messages:"Messages",menu_title_messages:"Navigate to the messages area",menu_text_notifications:"Notifications",menu_title_notifications:"Navigate to the notifications area",menu_text_favourites:"Friends",menu_title_favourites:"Navigate to the friends area",menu_text_add_favourites:"Search",menu_title_add_favourites:"Navigate to the friends search area",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Navigate to the chat area",menu_text_security:"Security",menu_text_security_main:"Lists",menu_title_security:"Navigate to the security area",menu_text_security_settings:"Settings",menu_title_security_settings:"Navigate to the security settings area",menu_text_cookies:"Cookies",menu_title_cookies:"Navigate to the cookies area",menu_text_home:"Home",menu_title_home:"Navigate to the homepage area",menu_text_iframes:"Iframes",menu_title_iframes:"Navigate to the iframes area",menu_text_security_examples:"Examples",menu_title_security_examples:"Navigate to the security examples area",menu_text_download_images:"Download images",menu_title_download_images:"Navigate to the images download area",menu_text_images:"Images",menu_text_images_favourites:"Saved images",menu_title_images_favourites:"Navigate to the saved images area",notifications:"Notifications",view_all_notifications:"All Notifications",no_notifications:"No notifications",messages:"Messages",view_all_messages:"All Messages",no_messages:"No messages",account:"Account",view_all_account:"Account Settings",no_data:"No informations available",no_data_available:"No data available",accountSettings:"Settings",accountLogout:"Logout",accountPrivacyTerms:"Privacy terms",titlelogin:"Sign in",titleUsername:"E-mail",titlePassword:"Password",signInButton:"Sign in",loginMainTitle:"Sign in",loginMainTitleSuffix:"Login",registrationButton:"Create account",errorMessageLoginEmptyFields:"E-mail and Password are required",errorMessageLoginInvalidCredentials:"Invalid credentials",currentLoggedInAs:"Current logged in as user",fortgotPassword:"Forgot password ?",logoutButton:"Logout",backToLogin:"Back to login",registrationMainTitleSuffix:"Registration",registrationButtonRegister:"Sign up",titleFirstName:"Firstname",titleLastName:"Lastname",errorMessageUserAlreadyExsists:"This E-mail Address already registred",errorMessageRegistrationEmptyFields:"All fields are required",errorMessageRegistrationCheckbox:"Unable to continue without consent to the storage of personal data",deleteAccount:"Delete account",acceptSavingDataTitle:"I agree to the privacy policy",deleteAccountTitle:"Confirm account deletion",deleteAccountText:"Do you really want to delete your account ?",deleteAccountNo:"No way !",deleteAccountYes:"Yes",deleteAccountPasswordConfirmation:"Password confirmation",deleteAccountErrorMessageEmptyFields:"Password are required",deleteAccountErrorMessageWrongPassword:"Wrong password",globalNetworkError:"Network error.",globalProcessError:"Process error.",globalUserDoesNotExsists:"User Account does not exsists",globalInvalidEmailsAdress:"Invalid email address format",globalErrormessagePrefix:"An error occured which causes the application to not work properly.",globalErrormessageCloseButton:"Dismiss",globalErrormessageLearnMoreButton:"Learn more",globalInvalidCountry:"Invalid country",globalInvalidLanguage:"Invalid language",globalErrorCodeTitle:"Error code",globalErrorCode_1:'Network error. When a network error occured this mean an "ajax" request failed. Check your network connection or that because the remote service currently not available.',globalErrorCode_2:"App process error. It means that the ajax requests response provided an invalid structure for the application.",globalErrorCode_3:"Response other then expected. Its mean the requested value of the current applications context are invalid.",code:"Code",listNotSynchronizedUserNotLoggedIn:"You are not logged in, your list cannot be synchonized",notLoggedIn:"Not logged in error",listSynchronized_one:"item synchronized",listSynchronized_more:"items synchronized",loginRequired:"Please login to perform this action",messagesNewMessage:"New message",messagesInbox:"Inbox",messagesOutbox:"Sent",messagesImportant:"Important",messagesTrash:"Trash",messagesDrafts:"Drafts",messageToText:"To",messageDetailsBoxFrom:"From",messageDetailsBoxFromEmail:"",messageDetailsBoxTo:"To",messageDetailsBoxDate:"Date",messageDetailsBoxTitle:"Subject",messagesNewMessageEmptyField:"Please type in an email address",messagesNewMessageNoResults:"No users found",messagesNewMessageCurrentUserAllreadyChoosed:"Current user allready choosen",messagesNewMessagePlaceholdersearchInput:"Email recipients",messagesNewMessageTitle:"New",messagesNewMessageMessagesTitle:"Message title",messagesNewMessageMessagesText:"Text",messagesNewMessageSend:"Send",messagesNewMessageReipientDoesNotExsists:"One of the given recipients, does not exists",errorMessageNewMessagePleaseSearchForRecipient:"Please add a recipient from your favourites or use the search button",messages_area:"Welcome to the messages area",messages_area_1:"Write messages from every place you are",messages_area_2:"Auto Saving messages as draft",messages_area_3:"Single attachment up to 5MB",messages_list:"No messages in list",userSettings:"Account settings",userSettings_password:"Password",userSettings_firstname:"Firstname",userSettings_lastname:"Lastname",userSettings_language:"Language",saveUserDataButton:"Save",errorMessageUserUpdateEmptyFields:"Empty fields are not allowed",errorMessageUserUpdateError:"Error while updating user data",successUpdate:"Profile has been updated",titleDeleteCookie:"Delete single cookie",cookie_msg_1:"Domain:",cookie_msg_2:"Name:",cookie_msg_3:"Value:",cookie_msg_4:"Delete all cookies. It is possible that you will be logged out from the current website.",cookiesNoData:"No cookies available",passwordResetMainTitleSuffix:"Password reset",passwordResetButton:"Reset",followTheMailInstructions:"An mail has been send to the given address",favouritesNoData:'To add a new favourite please navigate to the "Favourites search" page',favouritesTitleCurrentFavourites:"Your current favourites",favouritesTitleSearchForUsers:"User search",favouritesSince:"Friendship period",favouritesRemoveFriend:"Cancel friendship",favouritesRemoveFriendTooltip:"Cancel friendship with",favouritesAddFriend:"Start friendship",favouritesAddFriendTooltip:"Start friendship with",favouritesRemoveFriendResponseSuccess:"Friendship canceled for",favouritesRemoveFriendResponseError:"Error while canceling friendship with",favouritesAddFriendResponseSuccess:"Friendship started with",favouritesAddFriendResponseError:"Error while starting friendship with",favouritesNoResultsSuggestions:"No users found",favouritesEmptyField:"Searchfield cannot be empty",favouritesAllreadyFriends:"Friendship already exists with",chatNoDataFavourites:'No favourites found. To start chatting, please add an user from the "Search" page.',chatNoDataLoading:"Loading favourites list...",chatNoFavouritesUserSelected:"Please choose an user from your favourites list and start chatting.",chatNoDataInsideChat:"No history found for selected user.",chatInputPlaceholder:"Message...",chatToggleInputFieldType:"Change input type from single line to multiline and vice versa",chatUploadFileTitle:"Send files to your friend",chatUploadFile:"Send files",chatSendFilesTo:"Send selected files to your friend",chatSendFilesToButton:"Send files",no_history_available:"Currently no chat history",view_all_chat:"Open Chat",popup_not_readed_title:"Chat - new messages",popup_no_new_messages:"No new chat messages",chat_file:"Send a file",chatLoadingData:"Loading conversation...",avatarErrorFileType:"Unrecognized file type",avatarErrorFileSize:"File size exceeds limit of 5MB for avatar",avatarErrorFileTypeSupport:"Only jpg, png and gif file types are allowed",blacklistedElementsWords:"Blacklist Words",blacklistedElementsDomians:"Blacklist Domains",blacklistedElementsUrlsIncludes:"Blacklist Urls includes",blacklistedElementsTrackers:"Blacklist Trackers",blacklistedElementsCookies:"Blacklist Cookies",blacklistedElementsClass:"Block HTML by class",blacklistedElementsId:"Block HTML by id",blacklistedElementsHref:"Block HTML by href",blacklistedElementsIframes:"Blacklist Iframes",copiedToClipBoard:"Copied to clipboard",action_title_copyToClipboard:"Copy list to clipboard",action_title_exportToFile:"Export list to JSON field",action_title_deleteList:"Empty list globally",action_title_copyToClipboard_single:"Copy value to clipboard",action_title_delete_single:"Remove entry",forThisFunctionLogin:"To perform this action, please login",emptyListDone:"List has been emptied",restoreDefaultValue:"Restore list to its default value",whitelistedElementsDomains:"Whitelist Domains",securityIsOn:"The security part of this extension is ON or OFF.",scanTextOnWebsite:"If you turn this option OFF, then all words are NOT scanned. The Blacklist: Words, Attributes, Attributes Words are ignored.",makeSearchInSourceCode:"Scan words in the source code of a given HTML element (innerHTML) or only in the text of HTML elements (innerText).",mutationCheck:"Check websites HTML elements after the page was loaded (DOM Mutations listener - grabbing all elements changed by Javascript libraries).",ignoreTagStyle:'Ignore the code inside the "Style" tags (<style> tag) while scanning process based on blacklist words.',ignoreTagScript:'Ignore the code inside the "SCRIPT" tags (<script> tag) while scanning process based on blacklist words.',ignoreTagLink:'Ignore the code inside the "Link" tags (<link> tag) while scanning process based on blacklist words.',ignoreTagMeta:'Ignore the code inside the "Meta" tags (<meta> tag) while scanning process based on blacklist words.',replacer:'Replace each single danger words character with this entry. The danger words comes from your customized "Blacklist Words".',maximumOfDangerWords:"After this value is reached - count based on blacklists: words, Block HTML by class, Block HTML by id and Block HTML by href (each blocked element causes the count to rise +1), the website will be blocked. Minimum value is 1, maximum value is 300.",limitlessScan:'Ignore the maximum count of all blocked elements. Blocked elements are counted based on this blacklists: "Blocked Content", "Blacklist Words", "X DOM Blocker class", "X DOM Blocker id" and "X DOM Blocker href". The website will not be blocked (ignore the value above). If you activate this function, the security content can slow down the performance of your browser.',deleteCookies:"Autodelete all cookies based on the blacklist Cookies on each website each 5 seconds ?",popupMainTitle:"Security statistic",popup_blocked_trackers:"Blocked trackers",popup_blocked_cookies:"Blocked cookies",popup_blocked_words:"Blocked words",popup_blocked_requests:"Blocked requests",popup_blocked_iframes:"Blocked iframes",popup_blocked_dom:"Blocked by id, href, class",popup_title_dashboard:"Dashboard",titleDeleteIframe:"Delete single iframe",iframe_msg_1:"Source:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"No iframes available",popup_add_blacklistedElementsTrackers:"Add current domain to the blacklist trackers. All tries to access this domain will be blocked.",popup_remove_blacklistedElementsTrackers:"Remove current domain from the blacklist trackers.",popup_add_blacklistedElementsDomians:"Add current domain to the blacklist domains. All tries to access this domain or services from this domain will be blocked.",popup_remove_blacklistedElementsDomians:"Remove current domain from the blacklist domains.",popup_add_blacklistedElementsCookies:"Add current domain to the blacklist cookies. All cookies will be removed on website load then each 5 seconds.",popup_remove_blacklistedElementsCookies:"Remove current domain from the blacklist cookies.",popup_add_blacklistedElementsIframes:"Add current domain to blacklist iframes.",popup_remove_blacklistedElementsIframes:"Remove current domain from the blacklist iframes.",popup_add_whitelistedElementsDomains:"Add current domain to the whitelist domains and allow everything (no request are blocked, no blacklist words check, no cookie deletion and no auto iframe deletion).",popup_remove_whitelistedElementsDomains:"Remove current domain from the whitelist domains.",popup_reload_target:"Reload website",blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"You can add here an cookie name or an domain name which should be deleted on each website. Default this list has 640 entries with predefined cookie names or domain names that using cookies for tracking purposes and there are automatically deleted by the security content."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". If you visit the website: https://www.youtube.com, then the cookie with the name ",o.createElement("span",{className:"colored-example-element"},"GPS")," are deleted"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". If you visit the website: https://www.7search.com, then ",o.createElement("span",{className:"colored-example-element"},"all cookies")," from this website are deleted")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"This is an domain name based blacklist. All domains from this list are blocked while visiting there websites."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com")," and if yout try to access the website ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"github.com")," and if yout try to access the website ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," then the website are blocked")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"This is an domain name and part of url based blacklist. All domains from this list and all matched entries from the websites url are blocked if an match was found."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"package"),". If you visit the website: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"test"),". If you visit the website: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test"),", then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"q"),". If you visit the website: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test, then the website are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". If you visit the website: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com"),", then the website are blocked")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"If you visit an website an the websites domain name are inside this list then all iframes are removed."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," - if you visit the website: https://www.gazeta.pl then all iframes on the website https://",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," are removed")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"If you visit a website, and the website has implemented other (third party) services or tracking services and the domain name match with an domain name from this list or the whole url path match with an entry from this list then the request will be blocked."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". If an website will connect to an external service and the domain name contains: https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," then the request are blocked"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". If an website will connect to an external service and the url request contains: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," then the request are blocked")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'The security content will find each word from this blacklist and each word will be replace by the "replacer" defined in the "settings" section. If the security content has found an danger word, from the "Blacklist: Words" in any HTML tag, then the HTML tags attributes are scanned. If any attribute name from this list does not matches with entrys from the "Blacklist: attributes", then the security content will find each word, inside the attributes value, from this list and replace each character with the replacer defined in the "settings section.'),o.createElement("ul",null,o.createElement("li",null,"For example, if the word ",o.createElement("span",{className:"colored-example-element"},"guns")," are in this blacklist, then if you visit a website, then this word will be replaced",o.createElement("br",null),'Example input: "we have ',o.createElement("span",{className:"colored-example-element"},"guns"),' in ..."',o.createElement("br",null),'Example output: "we have ',o.createElement("span",{className:"colored-example-element"},"####"),' in ..."'),o.createElement("li",null,"For example, if the word ",o.createElement("span",{className:"colored-example-element"},"seven")," are in this blacklist, then if you visit a website, then this will be replaced",o.createElement("br",null),'Example input: "',o.createElement("span",{className:"colored-example-element"},"seven"),' years old ..."',o.createElement("br",null),'Example output: "',o.createElement("span",{className:"colored-example-element"},"#####"),' years old ..."')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: class."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"font-bold"),'. When you visit an website and a single tag has the attributes class an the class value includes this text: "font-bold", example: ','<span class="font-bold"> Text </span>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blocking "A" tag Elements based on its attribute: href.'),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"redirect?"),". When you visit an website and a single tag ","<a>",' has the attributes href an the href`s value includes this text: "redirect?", example: ','<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',", then this tag (DOM element) will be removed from the current visited website")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blocking DOM Elements (tags) based on its attribute: id."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"extern-logo"),'. When you visit an website and a single tag has the attributes id an the id value includes this text: "extern-logo", example: ','<img id="extern-logo"/>',", then this tag (DOM element) will be removed from the current visited website")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Make nothing for selected domain names."),o.createElement("ul",null,o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"google.com")," then the website https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," are allowed and no checks are made"),o.createElement("li",null,"Example of list entry: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com")," then the website https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel are allowed and no checks are made")))),example:"Examples",imagesPopupTitle:"Images on current website",imagesNoData:"No valid images found",imagesNoDataFavourites:"No saved images found",imagesLoadingTabs:"Loading active tabs...",current_tabs_title:"Current tabs",filter:"Filter image type",filter_all:"All",itemsPerSite:"Images per site",itemsPerSiteSuffix:"images",page:"Page",of:"of",images:"images",current_favourites_images:"Currently saved images",open_in_new_tab:"Open in new tab",download:"Download",downloadSmall:"Download images",delete_all:"Delete all",notLoggedInImagesFavouritesAdd:"Only logged in users are able to add images to the favourites list",notLoggedInImagesFavouritesManage:"Only logged in users are able to manage the favourites list",tabsNoData:"No valid tabs available",imagesLoadingData:"Loading images...",infoItemAdded:"Item has been added to the current list",infoItemRemoved:"Item has been removed from list",infoArrayIs0:"List are empty, but you want to remove an value",infoIncorrectValue:"Value is incorrect",infoItemInList:"Item allready in list",country:"Country",countriesNotFoundText:"Sorry, no countries found",dropText:"Drop here",error:"Error",languages:"Languages"};t.default=i},function(e,t,n){"use strict";var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(1)),i={download_base64:"Pobierz jako base64",loading:"Ładowanie...",links:"Linki",img_tag:"Zdjęcie z tagu",img_requests:"Zdjęcie z zapytania",img_from_request:"Zdjęcia z pytań",img_from_tags:"Zdjęcia z tagu <img /> ze strony",addon_not_available:"Bieżąca domena nie zezwala na używanie wtyczek",NoDataBlockedItems:"Brak zablokowanych informacji",home_chat:"Chat z kolegami - bez śledzenia",home_messages:"Wysyłaj wiadomości - bez śledzenia",home_security:"Ochrona w internecie - blokowanie śledzących",home_images:"Pobieraj zdjęcia - bez śledzenia",home_images_1:"Pobierz obrazy w oryginalnym formacie",home_images_2:"Pobierz pojedyncze obrazy",home_images_3:"Pobierz wszystkie dostępne obrazy do pliku zip",home:"Strona główna",messages_main:"Wiadomości",menu_text_messages:"Wiadomości",menu_title_messages:"Przejdź do obszaru wiadomości",menu_text_notifications:"Powiadomienia",menu_title_notifications:"Przejdź do obszaru powiadomień",favourites_main:"Znajomości",menu_text_favourites:"Znajomi",menu_title_favourites:"Przejdź do obszaru znajomi",menu_text_add_favourites:"Wyszukaj",menu_title_add_favourites:"Przejdź do obszaru szukania znajomych",chat_main:"Chat",menu_text_chat:"Chat",menu_title_chat:"Przejdź do obszaru chatu",menu_text_security:"Ochrona",menu_text_security_main:"Listy",menu_title_security:"Przejdź do obszaru ochrony",menu_text_security_settings:"Ustawienia",menu_title_security_settings:"Przejdź do obszaru ustawień ochrony",menu_text_cookies:"Cisteczka",menu_title_cookies:"Przejdź do obszaru ciasteczek",menu_text_home:"Statystyka",menu_title_home:"Przejdź do strony głównej",menu_text_iframes:"Ramki",menu_title_iframes:"Przejdź do obszaru ramek",menu_text_security_examples:"Przykłady",menu_title_security_examples:"Przejdź do obszaru przykładów ochrony",menu_text_download_images:"Pobierz zdjęcia",menu_title_download_images:"Przejdź do obszaru poboru zdjęć",menu_text_images:"Zdjęcia",menu_text_images_favourites:"Zapisane zdjęcia",menu_title_images_favourites:"Przejdź do obszaru zapisanych zdjęć",notifications:"Powiadomienia",view_all_notifications:"Wszystkie powiadomienia",no_notifications:"Brak powiadomień",messages:"Wiadomości",view_all_messages:"Wszystkie wiadomości",no_messages:"Brak wiadomości",account:"Konto",view_all_account:"Ustawienia konta",no_data:"Brak dostępnych informacji",no_data_available:"Brak dostępnych danych",accountSettings:"Ustawienia",accountLogout:"Wyloguj",accountPrivacyTerms:"Warunki prywatności",titlelogin:"Zaloguj się",titleUsername:"E-mail",titlePassword:"Hasło",signInButton:"Zaloguj się",loginMainTitle:"Zaloguj się",loginMainTitleSuffix:"Zaloguj się",registrationButton:"Utwórz konto",errorMessageLoginEmptyFields:"Adres e-mail i hasło są wymagane",errorMessageLoginInvalidCredentials:"Niepoprawne dane logowania",currentLoggedInAs:"Aktualnie zalogowany jako użytkownik",fortgotPassword:"Zapomniałeś hasło ?",logoutButton:"Wyloguj",backToLogin:"Powrót do logowania",registrationMainTitleSuffix:"Rejestracja",registrationButtonRegister:"Zapisz się",titleFirstName:"Imię",titleLastName:"Nazwisko",errorMessageUserAlreadyExsists:"Ten adres e-mail jest już zarejestrowany",errorMessageRegistrationEmptyFields:"Wszystkie pola są wymagane",errorMessageRegistrationCheckbox:"Nie można kontynuować bez zgody na przechowywanie danych osobowych",deleteAccount:"Usuń konto",acceptSavingDataTitle:"Zgadzam się z polityką prywatności",deleteAccountTitle:"Potwierdź usunięcie konta",deleteAccountText:"Czy na pewno chcesz usunąć swoje konto?",deleteAccountNo:"Nie !",deleteAccountYes:"Tak",deleteAccountPasswordConfirmation:"Potwierdzenie hasła",deleteAccountErrorMessageEmptyFields:"Hasło jest wymagane",deleteAccountErrorMessageWrongPassword:"Złe hasło",globalNetworkError:"Błąd sieci.",globalProcessError:"Błąd procesu.",globalUserDoesNotExsists:"Konto użytkownika nie istnieje",globalInvalidEmailsAdress:"Nieprawidłowy format adresu e-mail",globalErrormessagePrefix:"Znaleziono błąd, który powoduje, że aplikacja nie działa poprawnie.",globalErrormessageCloseButton:"Ignoruj",globalErrormessageLearnMoreButton:"Czytaj więcej",globalInvalidCountry:"Niepoprawny kraj",globalInvalidLanguage:"Niepoprawny język",globalErrorCodeTitle:"Kod błędu",globalErrorCode_1:"Błąd sieci. Gdy wystąpił błąd sieci, oznacza to, że żądanie „ajax” nie powiodło się. Sprawdź połączenie sieciowe lub to, ponieważ usługa zdalna jest obecnie niedostępna.",globalErrorCode_2:"Błąd procesu aplikacji. Oznacza to, że odpowiedź na żądania ajax podała nieprawidłową strukturę aplikacji.",globalErrorCode_3:"Odpowiedź inna niż oczekiwana. Oznacza to, że żądana wartość bieżącego kontekstu aplikacji jest nieprawidłowa.",code:"Kod",listNotSynchronizedUserNotLoggedIn:"Nie jesteś zalogowany i lista nie może byc synchronizowana",notLoggedIn:"Błąd niezalogowania",listSynchronized_one:"synchronizowany wpis",listSynchronized_more:"synchronizowane wpisy",loginRequired:"Zaloguj się, aby wykonać tę akcję",messagesNewMessage:"Nowa wiadomość",messagesInbox:"Odebrane",messagesOutbox:"Wysłane",messagesImportant:"Ważne",messagesTrash:"Kosz",messagesDrafts:"Wersje robocze",messageToText:"Do",messageDetailsBoxFrom:"Od",messageDetailsBoxFromEmail:"",messageDetailsBoxTo:"Do",messageDetailsBoxDate:"Data",messageDetailsBoxTitle:"Tytuł",messagesNewMessageEmptyField:"Wpisz adres e-mail",messagesNewMessageNoResults:"Nie znaleziono użytkowników",messagesNewMessageCurrentUserAllreadyChoosed:"Aktualny użytkownik został już wybrany",messagesNewMessagePlaceholdersearchInput:"Adresaci e-mail",messagesNewMessageTitle:"Nowa wiadomość",messagesNewMessageMessagesTitle:"Tytuł",messagesNewMessageMessagesText:"Tekst",messagesNewMessageSend:"Wyslij",messagesNewMessageReipientDoesNotExsists:"Jeden z podanych odbiorców nie istnieje",errorMessageNewMessagePleaseSearchForRecipient:"Dodaj odbiorcę z ulubionych lub użyj przycisku wyszukiwania",messages_area:"Witamy w obszarze wiadomości",messages_area_1:"Pisz wiadomości z każdego miejsca, w którym jesteś",messages_area_2:"Automatyczne zapisywanie wiadomości w wersji roboczej",messages_area_3:"Pojedynczy załącznik do 5 MB",messages_list:"Brak wiadomości na liście",userSettings:"Ustawienia konta",userSettings_password:"Hasło",userSettings_firstname:"Imię",userSettings_lastname:"Nazwisko",userSettings_language:"Język",saveUserDataButton:"Zapisz",errorMessageUserUpdateEmptyFields:"Puste pola nie są dozwolone",errorMessageUserUpdateError:"Błąd podczas aktualizacji danych użytkownika",successUpdate:"Profil został zaktualizowany",titleDeleteCookie:"Skasuj pojedyncze ciasteczko",titleCopyCookieValue:"Kopiuj wartość do schowka",cookie_msg_1:"Domena:",cookie_msg_2:"Nazwa:",cookie_msg_3:"Wartość:",cookie_msg_4:"Kasuj wszystkie ciasteczka. Jest możliwe że zostaniesz wylogowany z bieżącej strony.",cookiesNoData:"Brak ciasteczek",passwordResetMainTitleSuffix:"Reset hasła",passwordResetButton:"Reset",followTheMailInstructions:"Został wysłany email na podany adres",favouritesNoData:'Aby dodać nowego ulubionego, przejdź do strony "Szukaj znajomego"',favouritesTitleCurrentFavourites:"Twoi obecni faworyci",favouritesTitleSearchForUsers:"Wyszukiwanie użytkownika",favouritesSince:"Czas przyjaźń",favouritesRemoveFriend:"Anuluj przyjaźń",favouritesRemoveFriendTooltip:"Anuluj przyjaźń z",favouritesAddFriend:"Rozpocznij przyjaźń",favouritesAddFriendTooltip:"Rozpocznij przyjaźń z",favouritesRemoveFriendResponseSuccess:"Przyjaźń anulowana dla",favouritesRemoveFriendResponseError:"Błąd podczas anulowania przyjaźnij z",favouritesAddFriendResponseSuccess:"Przyjaźnij rozpoczęta z",favouritesAddFriendResponseError:"Błąd podczas rozpoczęcia przyjaźnij z",favouritesNoResultsSuggestions:"Nikogo nie znaleziono",favouritesEmptyField:"Pole wyszukowania nie może być puste",favouritesAllreadyFriends:"Przyjaźnij już istnieje z użytkownikiem",chatNoDataFavourites:"Brak ulubionych. Aby rozpocząć czat, dodaj użytkownika ze strony „Wyszukiwanie ulubionych”.",chatNoDataLoading:"Ładowanie listy znajomych...",chatNoFavouritesUserSelected:"Aby rozpocząć czat, wybierz użytkownika z listy ulubionych.",chatNoDataInsideChat:"Brak historii czatu dla wybranego użytkownika.",chatInputPlaceholder:"Wiadomość...",chatToggleInputFieldType:"Zmień typ wejścia z pojedynczego wiersza na multilinię i odwrotnie",chatUploadFileTitle:"Wyślij pliki do swojego przyjaciela",chatUploadFile:"Wyślij pliki",chatSendFilesTo:"Wyślij wybrane pliki do znajomego",chatSendFilesToButton:"Wyślij pliki",no_history_available:"Obecnie brak historii czatów",view_all_chat:"Otwórz czat",popup_not_readed_title:"Chat - wiadomości",popup_no_new_messages:"Brak nowych wiadomości",chat_file:"Wyślij pliki",chatLoadingData:"Ładowanie konwersacji...",avatarErrorFileType:"Nierozpoznany typ pliku",avatarErrorFileSize:"Rozmiar pliku przekracza limit 5 MB dla programu Avatar",avatarErrorFileTypeSupport:"Dozwolone są tylko typy plików jpg, png i gif",blacklistedElementsWords:"Czarna lista Słowa",blacklistedElementsDomians:"Czarna lista Domeny",blacklistedElementsUrlsIncludes:"Czarna lista Adresy url",blacklistedElementsTrackers:"Czarna lista Trackery",blacklistedElementsCookies:"Czarna lista Ciasteczka",blacklistedElementsClass:"Blokuj HTML dla class",blacklistedElementsId:"Blokuj HTML dla id",blacklistedElementsHref:"Blokuj HTML dla href",blacklistedElementsIframes:"Czarna lista Ramki",copiedToClipBoard:"Skopiowano do schowka",action_title_copyToClipboard:"Skopiuj listę do schowka",action_title_exportToFile:"Eksportuj listę do pliku o formacie JSON",action_title_deleteList:"Wyczyść listę globalnie",action_title_copyToClipboard_single:"Skopiuj wartość do schowka",action_title_delete_single:"Usuń wpis",forThisFunctionLogin:"Zaloguj się, aby wykonać tę akcję",emptyListDone:"Lista została wyczyszczona",restoreDefaultValue:"Zresetuj listę do wartości domyślnych",whitelistedElementsDomains:"Biała lista Domeny",securityIsOn:"Ta ochrona tej wtyczki jest włączona lub wyłączona.",scanTextOnWebsite:"Jeśli wyłączysz tę opcję, wtedy wszystkie słowa na stronie internetowej NIE są skanowane. Czarna lista: Słowa, są ignorowane.",allowOnlyHttpsProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTPS - czyli strony z protokołem HTTP zostaną zablokowane.",allowOnlyHttpProtocol:"Zezwalaj na odwiedzanie tylko stron internetowych HTTP - czyli strony z protokołem HTTPS zostaną zablokowane.",makeSearchInSourceCode:"Skanuj słowa w kodzie źródłowym danego elementu HTML (innerHTML) lub tylko w tekscie elementach HTML (innerText).",mutationCheck:"Sprawdzanie elementów HTML strony internetowej ma nastąpić również po załadowaniu strony (DOM mutacje na elementach HTML zazwyczaj poprzez biblioteki Javascript).",ignoreTagStyle:'Ignoruj kod zawarty w tagach "STYLE" (<style> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagScript:'Ignoruj kod zawarty w tagach "SCRIPT" (<script> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagLink:'Ignoruj kod zawarty w tagach "Link" (<link> tag) podczas skanowania na podstawie czarnej listy "Słowa".',ignoreTagMeta:'Ignoruj kod zawarty w tagach "Meta" (<meta> tag) podczas skanowania na podstawie czarnej listy "Słowa".',replacer:"Zastąp każdy znak niebezpiecznego słowa (niebezpieczne słowa pochodzą z czarnej listy Słowa) tym wpisem.",maximumOfDangerWords:"Po osiągnięciu tej wartości - poprzez sumę zablokowanych elementów na stronie na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id (każdy zablokowany element zwiększa wartości licznika o +1) wtedy strona internetowa zostanie zablokowana. Minimalna wartość to 1, maksymalna to 300.",limitlessScan:"Zignoruj maksymalną liczbę zablokowanych niebezpiecznych elementów na podstawie czarnych list: Czarna lista Słowa, Blokuj HTML dla class, Blokuj HTML dla href oraz Blokuj HTML dla id. Strona nie zostanie zablokowana (zignoruj powyższą wartość). Jeśli aktywujesz tę funkcję, Protection może spowolnić działanie przeglądarki.",deleteCookies:"Kasuj automatycznie wszystkie ciasteczka na podstawie czarnej listy Ciasteczka na wszytkich stronach co 5 sekund ?",popupMainTitle:"Statystyka ochrony",popup_blocked_trackers:"Zablokowani trackerzy",popup_blocked_cookies:"Zablokowane ciasteczka",popup_blocked_words:"Zablokowane słowa",popup_blocked_requests:"Zablokowane zapytania",popup_blocked_iframes:"Zablokowane ramki",popup_blocked_dom:"Zablokowany HTML id, href, class",popup_title_dashboard:"Zarządzanie",titleDeleteIframe:"Usuń pojedynczy element iframe",iframe_msg_1:"Źródło:",iframe_msg_2:"Id:",iframe_msg_3:"className:",iframesNoData:"Brak ramek",popup_add_blacklistedElementsTrackers:"Dodaj bieżącą domenę do trackerów czarnej listy. Wszystkie próby uzyskania dostępu do tej domeny są zablokowane.",popup_remove_blacklistedElementsTrackers:"Usuń bieżącą domenę z czarnej listy - Trackerów.",popup_add_blacklistedElementsDomians:"Dodaj bieżące domeny do domeny czarnej listy domen. Wszystkie próby uzyskania dostępu do tej domeny lub usług z tej domeny są blokowane.",popup_remove_blacklistedElementsDomians:"Usuń bieżącą domenę z czarnej listy - Domen.",popup_add_blacklistedElementsCookies:"Dodaj bieżącą domenę do czarnej listy plików cookie. Wszystkie pliki cookie są usuwane co 5 sekund podczas ładowania strony.",popup_remove_blacklistedElementsCookies:"Usuń bieżącą domenę z czarnej listy - Ciasteczka",popup_add_blacklistedElementsIframes:"Dodaj bieżącą domenę do czarnej listy - Ramḱi.",popup_remove_blacklistedElementsIframes:"Usuń bieżącą domenę z czarnej listy - Ramki.",popup_add_whitelistedElementsDomains:"Dodaj bieżącą domenę do domeny białej listy i zezwól na wszystko (żadne żądanie nie jest blokowane, brak sprawdzania słów na czarnej liście, brak usuwania plików cookie i automatyczne usuwanie iframe).",popup_remove_whitelistedElementsDomains:"Remove current domain from the whitelist domains.",popup_reload_target:"Załaduj ponownie stronę",blacklistedElementsCookies_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Tutaj powinno się wpisać nazwę ciasteczka aby na każdej stronie internetowej każde ciasteczko o podanej nazwie zostało skasowane lub nazwa domeny na której każde ciasteczka mają zostać skasowane. Standardowo lista ma ponad 350 wpisów niebezpiecznych nazew domen lub usług śledzących, którą są automatycznie kasowane."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"GPS"),". Jeśli odwiedzisz stronę internetową: https://www.youtube.com, wtedy ciasteczko o nazwie ",o.createElement("span",{className:"colored-example-element"},"GPS")," zostanie skasowane"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"www.7search.com"),". Jeśli odwiedzisz stronę internetową: https://www.7search.com, wtedy ",o.createElement("span",{className:"colored-example-element"},"wszystkie ciasteczka")," zostaną skasowane")))),blacklistedElementsDomians_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"To jest czarna lista oparta jest na nazwie domeny. Wszystkie domeny z tej listy są blokowane podczas odwiedzania tej witryny."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"ytimg.com"),".Jeśli odwiedzisz stronę internetową  ",o.createElement("span",{className:"colored-example-element"},"https://ytimg.com")," strona internetowa zostanie zablokowana"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"github.com"),". Jeśli odwiedzisz stronę internetową ",o.createElement("span",{className:"colored-example-element"},"https://github.com")," strona internetowa zostanie zablokowana")))),blacklistedElementsUrlsIncludes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna listy oparta na adresach URL lub część adresu url. Wszystkie nazwy domen z tej listy oraz wszystkie części z adresu URL sa brane pod uwagę podczas odwiedzania storny internetwej. Jezeli adres strony internetowej zawiera jakikolwiek znak lub ciąg znaków z tej listy wtedy dostęp do strony internetowej zostanie zablokowany."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"package"),". Jeśli odwiedzisz stronę internetową: https://www.npmjs.com/",o.createElement("span",{className:"colored-example-element"},"package"),"/gulp-babel wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"test"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?q=",o.createElement("span",{className:"colored-example-element"},"test")," wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"q"),". Jeśli odwiedzisz stronę internetową: https://www.google.com/search?",o.createElement("span",{className:"colored-example-element"},"q"),"=test wtedy dostęp do strony internetowej zostanie zablokowany"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"hub.com"),". Jeśli odwiedzisz stronę internetową: https://www.git",o.createElement("span",{className:"colored-example-element"},"hub.com")," wtedy dostęp do strony internetowej zostanie zablokowany")))),blacklistedElementsIframes_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Czarna lista nazw domen na których (stronach internetowych) maja zostać usunięte ramki (iframe)."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"gazeta.pl"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"gazeta.pl")," wtedy wszystkie ramki zostaną usunięte")))),blacklistedElementsTrackers_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Jeśli odwiedzisz witrynę internetową, a witryna wdrożyła śledzenie usługi i nazwa domeny jest zgodna z jedną z nazw domen z tej listy lub cała ścieżka adresu url jest zgodna z jednym z wpisów z tej listy to żądanie zostanie zablokowane."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://",o.createElement("span",{className:"colored-example-element"},"cdn.mouseflow.com")," to zapytania zostanie zablokowane"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif"),". Jeśli witryna połączy się z usługą zewnętrzną i adres zapytania zawiera nazwę domeny: https://static.xx.fbcdn.net/",o.createElement("span",{className:"colored-example-element"},"rsrc.php/v3/y4/r/-PAXP-deijE.gif")," to zapytania zostanie zablokowane")))),blacklistedElementsWords_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Konteks ochrony tej aplikacji znajdzie każde słowo z tej czarnej listy, a każde słowo zostanie zastąpione przez „zamiennik” zdefiniowany w sekcji „Ustawienia ochrony ."),o.createElement("ul",null,o.createElement("li",null,'Na przykład, jeśli słowo "pistolet" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo „pistolet” zostanie zastąpione.',o.createElement("br",null),'Przykład przed: "mam ',o.createElement("span",{className:"colored-example-element"},"pistolet"),' w szafie.".',o.createElement("br",null),'Przykład po: "mam ',o.createElement("span",{className:"colored-example-element"},"########"),' w szafie."'),o.createElement("li",null,'Na przykład, jeśli słowo "zakupy" znajduje się na tej czarnej liście, to jeśli odwiedzisz stronę internetową, słowo zakupy zostanie zastąpione.',o.createElement("br",null),'Przykład przed: "moje ',o.createElement("span",{className:"colored-example-element"},"zakupy"),' są w samochodzie.".',o.createElement("br",null),'Przykład po: "moje ',o.createElement("span",{className:"colored-example-element"},"######"),' są w samochodzie."')))),blacklistedElementsClass_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: class."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis na tej liście: \"font-bold\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut class o wartości 'font-bold' (np: ",'<span class="font-bold"> Text </span>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsHref_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},'Blokowanie tagów "A" drzewa DOM na podstawie jego identifikatora: href.'),o.createElement("ul",null,o.createElement("li",null,'Przykładowy wpis na tej liście: "redirect?". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy drzewa DOM ',"<a>"," zawierające atrybut href o wartości 'redirect?' (np: ",'<a href="https://xv345bhFD.com/redirect?client=http://example.com">link</a>',") zostaną usunięte ze strony internetowej.")))),blacklistedElementsId_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Blokowanie tagów drzewa DOM na podstawie jego identifikatora: id."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis na tej liście: \"extern-logo\". Jeśli odwiedzisz jakąkolwiek stronę internetową wtedy wsyzstkie elementy zawierające atrybut id o wartości 'extern-logo' (np: ",'<img id="extern-logo"/>',") zostaną usunięte ze strony internetowej.")))),whitelistedElementsDomains_html:o.createElement("span",{className:"box-content"},o.createElement("div",{className:"box-content--div"},o.createElement("p",{className:"element-p"},"Nie rób nic dla wybranych nazw domen."),o.createElement("ul",null,o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"google.com"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"google.com")," nie są wykonywane żadne procesy ani nie jesteś chroniony"),o.createElement("li",null,"Przykładowy wpis w tej liście: ",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),". Jeśli odwiedzisz stronę internetową: https://www.",o.createElement("span",{className:"colored-example-element"},"npmjs.com"),"/package/gulp-babel, nie są wykonywane żadne procesy ani nie jesteś chroniony")))),example:"Przykłady",imagesPopupTitle:"Znaleziono zdjęcia",imagesNoData:"Brak poprawnych zdjęć",imagesNoDataFavourites:"Brak zapisanych zdjęć",imagesLoadingTabs:"Ładowanie aktywnych okienek...",current_tabs_title:"Aktualne okna",filter:"Filtruj według typu",filter_all:"Wszystkie",itemsPerSite:"Liczba zdjęć na stronę",itemsPerSiteSuffix:"zdjęć",page:"Strona",of:"z",images:"zdjęć",current_favourites_images:"Tymczasem zapisane zdjęcia",open_in_new_tab:"Otwórz w nowym okientku",download:"Pobierz",downloadSmall:"Pobierz zdjęcia",delete_all:"Usuń wszysko",notLoggedInImagesFavouritesAdd:"Tylko zalogowani użytkownicy mogą dodawać zdjęcia do listy ulubionych",notLoggedInImagesFavouritesManage:"Tylko zalogowani użytkownicy mogą zarządzać listą ulubionych",tabsNoData:"Brak poprawnych okienek",imagesLoadingData:"Ładowanie zdjęć...",infoItemAdded:"Wpis został dodany do listy",infoItemRemoved:"Wpis został usunięty z listy",infoArrayIs0:"Lista jest pusta, więc nie można usunąć żadnego elementu",infoIncorrectValue:"Wartość jest nieprawidłowa",infoItemInList:"Wpis już istnieje na liście",country:"Kraj",countriesNotFoundText:"Przepraszam, nie znalazłem takiego kraju",dropText:"Upuść tutaj",error:"Błąd",languages:"Języki"};t.default=i},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(380));t.default=function(){var e=localStorage.getItem("applanguage")?localStorage.getItem("applanguage"):"en";return o.default.includes(e)||(e="en"),e.toLowerCase()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=["de","en","pl"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){return e.preventDefault,browser.runtime.sendMessage({action:"open-new-tab",url:t}).then((function(){window.close()})).catch((function(){window.close()}))}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=a(n(56)),c=function(e){function t(t){var n=e.call(this,t)||this;return n.getClassNamesContent=n.getClassNamesContent.bind(n),n.getClassNamesSidebar=n.getClassNamesSidebar.bind(n),n.sideBar=n.sideBar.bind(n),n.resizeView=n.resizeView.bind(n),n.state={moduleSidebar:t.moduleSidebar&&typeof{}==typeof t.moduleSidebar?t.moduleSidebar:void 0,headerData:t.headerData&&typeof{}==typeof t.headerData?t.headerData:void 0,contentData:t.contentData&&typeof{}==typeof t.contentData?t.contentData:void 0,persistUserSelection:"boolean"==typeof t.persistUserSelection?t.persistUserSelection:void 0,clearPersistUserSelection:"boolean"==typeof t.clearPersistUserSelection?t.clearPersistUserSelection:void 0,sidebarMinifiedAt:"number"==typeof t.sidebarMinifiedAt?t.sidebarMinifiedAt:720,sidebarMaxifiedAt:"number"==typeof t.sidebarMaxifiedAt?t.sidebarMaxifiedAt:1024,displayMinifyMaxifyIcon:"boolean"==typeof t.displayMinifyMaxifyIcon?t.displayMinifyMaxifyIcon:void 0,minifiedSecondSideBar:!0},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return s.default(["moduleSidebar","headerData","contentData","persistUserSelection","sidebarMinifiedAt","sidebarMaxifiedAt","displayMinifyMaxifyIcon"],e,t)?{moduleSidebar:e.moduleSidebar&&typeof{}==typeof e.moduleSidebar?e.moduleSidebar:void 0,headerData:e.headerData&&typeof{}==typeof e.headerData?e.headerData:void 0,contentData:e.contentData&&typeof{}==typeof e.contentData?e.contentData:void 0,persistUserSelection:"boolean"==typeof e.persistUserSelection?e.persistUserSelection:void 0,clearPersistUserSelection:"boolean"==typeof e.clearPersistUserSelection?e.clearPersistUserSelection:void 0,sidebarMinifiedAt:"number"==typeof e.sidebarMinifiedAt?e.sidebarMinifiedAt:720,sidebarMaxifiedAt:"number"==typeof e.sidebarMaxifiedAt?e.sidebarMaxifiedAt:1024,displayMinifyMaxifyIcon:"boolean"==typeof e.displayMinifyMaxifyIcon?e.displayMinifyMaxifyIcon:void 0}:null},t.prototype.componentDidMount=function(){var e=this.state.clearPersistUserSelection;(e||void 0===e)&&localStorage.removeItem("persistUserSelection"),window.addEventListener("resize",this.resizeView),this.resizeView()},t.prototype.componentWillUnmount=function(){window.removeEventListener("resize",this.resizeView)},t.prototype.resizeView=function(){var e=this.state,t=e.persistUserSelection,n=e.sidebarMinifiedAt,r=e.sidebarMaxifiedAt;if(t&&null!==localStorage.getItem("persistUserSelection"))try{var o=JSON.parse(localStorage.getItem("persistUserSelection")),i=o.sidebarMin,a=o.contentMin,l=o.isMinified,s=o.minifiedSecondSideBar;return this.setState({sidebarMin:i,contentMin:a,isMinified:l,minifiedSecondSideBar:s})}catch(e){}var c=document.documentElement.getBoundingClientRect().width;return c>=r?this.setState({sidebarMin:!1,contentMin:!1,isMinified:!1,minifiedSecondSideBar:!0}):c<=n?this.setState({sidebarMin:!0,contentMin:!0,isMinified:!0}):c<r?this.setState({sidebarMin:!0,contentMin:!0,isMinified:!1,minifiedSecondSideBar:!0}):null},t.prototype.getClassNamesSidebar=function(){var e=this.state,t=e.sidebarMin;return e.contentMin||t?"SideBar SideBar-min":"SideBar"},t.prototype.getClassNamesContent=function(){var e=this.state,t=e.contentMin,n=e.sidebarMin;return this.state.isMinified?this.state.minifiedSecondSideBar?"Content minified":"Content minified opened":t||n?"Content Content-min":"Content"},t.prototype.sideBar=function(){var e=this;this.state.isMinified?this.setState({minifiedSecondSideBar:!this.state.minifiedSecondSideBar},(function(){var t=e.state,n=t.sidebarMin,r=t.contentMin,o=t.isMinified,i=t.minifiedSecondSideBar;t.persistUserSelection&&localStorage.setItem("persistUserSelection",JSON.stringify({sidebarMin:n,contentMin:r,isMinified:o,minifiedSecondSideBar:i}))})):this.setState({sidebarMin:!this.state.sidebarMin,contentMin:!this.state.contentMin},(function(){var t=e.state,n=t.sidebarMin,r=t.contentMin,o=t.isMinified,i=t.minifiedSecondSideBar;t.persistUserSelection&&localStorage.setItem("persistUserSelection",JSON.stringify({sidebarMin:n,contentMin:r,isMinified:o,minifiedSecondSideBar:i}))}))},t.prototype.render=function(){var e=this,t=this.state,n=t.moduleSidebar,r=t.headerData,o=t.contentData,i=t.displayMinifyMaxifyIcon,a=this.getClassNamesSidebar(),s=this.getClassNamesContent();return l.createElement("div",{className:"Main block"},l.createElement("div",{ref:function(t){return e.nodeSideBar=t},className:""+(this.state.isMinified?this.state.minifiedSecondSideBar?"SideBar SidebarMinified":"SideBar SidebarMinified opened":a)},this.state.isMinified&&l.createElement("i",{className:"fas fa-angle-left close-side-bar action-icon",onClick:function(t){return e.sideBar()}}),n&&n),l.createElement("div",{className:s},l.createElement("div",{className:"head"},i&&l.createElement("i",{onClick:function(t){return e.sideBar()},className:"fas fa-bars minify-menu"}),r&&r),o&&o))},t}(l.Component);t.default=c},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(1)),c=n(158),u=l(n(46)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.state={data:t.data&&typeof[]==typeof t.data?t.data:[],reactRouter:void 0===t.reactRouter||"boolean"!=typeof t.reactRouter||t.reactRouter,dropDownIcon:void 0!==t.dropDownIcon&&typeof[]==typeof t.dropDownIcon?t.dropDownIcon:"",childrenPaddingX:void 0===t.childrenPaddingX||"number"!=typeof t.childrenPaddingX||isNaN(parseInt(t.childrenPaddingX))?20:t.childrenPaddingX},n}return o(t,e),t.prototype.closeChildRecursively=function(e){},t.prototype.toggle=function(e){var t=this,n=this.state.data,r=e.uuid,o=e.dropDownUuid,i=e.ulUuid,a=document.getElementById(o),l=document.getElementById(i),s=0,c=function(e){return e.class="toggle",e.toggled=!1,e.children&&typeof[]==typeof e.children&&e.children.length&&e.children.map((function(e){e=c(e)})),e};if(e.children&&typeof[]==typeof e.children&&e.children.length){var u=function(t){if(t.uuid&&t.uuid==r)if(t.toggled=!t.toggled,t.toggled)e.class="toggled";else if(a&&l){a.classList.remove("persist-toggled"),a.classList.remove("toggled"),a.classList.add("toggle-back");var n=l.querySelectorAll("ul");if(l.classList.add("toggle-back"),n&&n.length)for(var o=0;o<=n.length-1;o++){n[o].classList.add("toggle-back");var i=n[o].querySelectorAll(".drop-down");if(i&&i.length)for(var d=0;d<=i.length-1;d++)i[d].classList.remove("persist-toggled"),i[d].classList.remove("toggled"),i[d].classList.add("toggle-back")}s=350,setTimeout((function(){e.class="toggle",e=c(e)}),s)}else e.class="toggle",e=c(e);else"toggled"==t.class&&(t.class="persist-toggled");return t.children&&typeof[]==typeof t.children&&t.children.length&&t.children.map((function(e){e=u(e)})),t};n.map((function(e){e=u(e)})),setTimeout((function(){t.setState({data:n})}),s)}},t.prototype.generateData=function(){var e=this.state,t=e.data,n=e.childrenPaddingX,r=0,o=function(e){return e.children&&typeof[]==typeof e.children&&e.children.length&&(r+=1,null==e.toggled&&(e.toggled=!1),null==e.class&&(e.class="toggle"),e.children.map((function(e){(e=o(e)).px=r*n}))),e};return t.map((function(e){r=1,e=o(e)})),t},t.prototype.menu=function(){var e=this,t=this.state,n=t.reactRouter,r=t.dropDownIcon,o=t.childrenPaddingX,a=this.generateData(),l=function(t){var a=t.child,d=a.href,f=a.attributes;null!=d&&null!=d&&"string"==typeof d&&""!=d||(d="#"),null!=f&&null!=f&&typeof{}==typeof f||(f={});try{Object.keys(f)}catch(e){f={}}null==a.uuid&&(a.uuid=""+u.default()),null==a.dropDownUuid&&(a.dropDownUuid=""+u.default()),null==a.ulUuid&&(a.ulUuid=""+u.default());var p=s.createElement("div",{className:"data"},a.icon&&s.createElement("span",{className:"icon"},a.icon),a.text&&s.createElement("span",{className:"text"},a.text)),g={paddingLeft:a.px+"px"};return s.createElement("li",{key:u.default(),className:a.children&&typeof[]==typeof a.children&&a.children.length?"dynamic":"static"},s.createElement("div",{className:a.class?"menu-entry "+a.class:"menu-entry"},!a.children&&n&&s.createElement(c.Link,i({to:d},f,{className:"single-entry single-entry-link",style:g}),p),!a.children&&!n&&s.createElement("a",i({href:d},f,{className:"single-entry single-entry-link",style:g}),p),a.children&&typeof[]==typeof a.children&&a.children.length&&s.createElement("div",{onClick:function(t){return e.toggle(a)},className:"single-entry single-entry-drop-down",style:{paddingLeft:a.px-o+"px"}},a.icon&&s.createElement("span",{className:"icon"},a.icon),a.text&&s.createElement("span",{className:"text"},a.text),""===r&&s.createElement("span",{id:a.dropDownUuid,className:"drop-down "+a.class}),""!==r&&r),a.children&&typeof[]==typeof a.children&&a.children.length&&s.createElement("ul",{id:a.ulUuid},a.children.map((function(e){if(a.toggled)return s.createElement(l,{child:e,key:u.default()})})))))};return s.createElement("ul",{className:"main-menu",key:u.default()},0!==a.length&&a.map((function(e){return s.createElement(l,{child:e,key:u.default()})})))},t.prototype.render=function(){return this.menu()},t}(s.Component);t.default=d},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(45)),d=s(n(102)),f=n(73),p=function(e){function t(t){var n=e.call(this,t)||this;return n.getData=n.getData.bind(n),n.openImagesDownloader=n.openImagesDownloader.bind(n),n.state={minifiedSecondSideBar:!0,isMinified:!0,sidebarMin:!0,contentMin:!0,minifiedSaver:!0,language:"en",activeTab:{},contentData:n.props.contentData?n.props.contentData:"",loginRequired:n.props.loginRequired,redirectAfterLogin:n.props.redirectAfterLogin?n.props.redirectAfterLogin:"",images:0,tabid:""},n.translations=u.default(),n}return o(t,e),t.prototype.componentDidMount=function(){this.setIntervals()},t.prototype.componentWillUnmount=function(){clearInterval(this.getDataInterval)},t.prototype.setIntervals=function(){var e=this;clearInterval(this.getDataInterval),this.getData(),this.getDataInterval=setInterval((function(){e.getData()}),3e3)},t.prototype.getData=function(){var e=this,t=localStorage.getItem("data")?localStorage.getItem("data"):null;t&&browser.runtime.sendMessage({action:"get-active-tab"}).then((function(n){return i(e,void 0,void 0,(function(){var e,r,o,i,l,s,c,u,d,f;return a(this,(function(a){switch(a.label){case 0:return n&&void 0!==n.id&&null!==n.id&&-1!==n.id&&-1!==n.url.indexOf("http")?(e=JSON.parse(t),void 0===(r=e.media).images||void 0===r.images[""+n.id]?[3,2]:[4,this.getAllImagesContentScript(n.id)]):[3,2];case 1:for(o=a.sent(),i=o.images,l=o.protocol,s=o.hostname,c=[],f=0;f<=i.length-1;f++)u=i[f].src,c.includes(u)||(-1===u.indexOf("http://")&&-1===u.indexOf("https://")&&-1===u.indexOf("data:image")&&-1===u.indexOf("moz-extension://")&&("/"!==u.charAt(0)&&(u="/"+u),u=l+"//"+s+u),"//"==u.substr(0,2)&&(u=l+"//"+u.substr(2,u.length)),c.push(u));for(d=r.images[""+n.id],f=0;f<=d.length-1;f++)c.includes(d[f])||c.push(d[f]);this.setState({images:c.length,tabid:n.id}),a.label=2;case 2:return[2]}}))}))})).catch((function(e){}))},t.prototype.getAllImagesContentScript=function(e){return i(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,browser.runtime.sendMessage({action:"get-all-images-by-tab-id",tabId:e}).then((function(e){return e})).catch((function(e){return[]}))];case 1:return[2,t.sent()]}}))}))},t.prototype.openImagesDownloader=function(e){this.state.tabid;browser.tabs.create({url:e}).then((function(){window.close()})).catch((function(){window.close()}))},t.prototype.render=function(){var e=this,t=this.state,n=t.tabid,r=t.images;return c.createElement("div",{className:"ContentBody ContentStaticHeight Home"},c.createElement("img",{className:"Images-image",src:f.addonRoot()+"/Images/kelvin-zyteng-4ypfR5V5nR4-unsplash.jpg"}),0!==r&&c.createElement("span",null,c.createElement("h1",{className:"ff-title text-center"},this.translations.imagesPopupTitle),c.createElement("div",{className:"images-count text-center"},r),c.createElement("a",{className:"link",href:f.addonPrefixDashboard()+"#/download-images?tabid="+n,onClick:function(t){return e.openImagesDownloader(f.addonPrefixDashboard()+"#/download-images?tabid="+n)}},this.translations.menu_text_download_images)),0==r&&c.createElement("span",null,c.createElement(d.default,null),c.createElement("a",{className:"link",href:f.addonPrefixDashboard()+"#/",onClick:function(t){return e.openImagesDownloader(f.addonPrefixDashboard()+"#/")}},this.translations.popup_title_dashboard)))},t}(c.Component);t.default=p},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(45)),d=s(n(102)),f=l(n(143)),p=s(n(144)),g=s(n(46)),m=s(n(153)),h=s(n(154)),b=s(n(155)),v=function(e){function t(t){var n=e.call(this,t)||this;return n.getData=n.getData.bind(n),n.callback=n.callback.bind(n),n.callback=n.callback.bind(n),n.prev=n.prev.bind(n),n.next=n.next.bind(n),n.getPagerJsx=n.getPagerJsx.bind(n),n.saveImage=n.saveImage.bind(n),n.setType=n.setType.bind(n),n.setItemsPerSite=n.setItemsPerSite.bind(n),n.state={minifiedSecondSideBar:!0,isMinified:!0,sidebarMin:!0,contentMin:!0,minifiedSaver:!0,language:"en",activeTab:{},contentData:n.props.contentData?n.props.contentData:"",loginRequired:n.props.loginRequired,redirectAfterLogin:n.props.redirectAfterLogin?n.props.redirectAfterLogin:"",images:0,tabid:"",items:[],itemsWithType:[],hostname:"",protocol:"",href:"",itemsToRenderJsx:[],filteredTypes:"all",availableTypes:[],loadingTabsDone:!1,currentImagesAndType:[],itemsPerSite:10,currentPage:0,itmes:[],displayFullscreenlist:!1,displayFullscreenlistFilter:!1},n.translations=u.default(),n}return o(t,e),t.prototype.componentDidMount=function(){this.getData()},t.prototype.getImagesType=function(e){return void 0===e&&(e=""),i(this,void 0,void 0,(function(){var t;return a(this,(function(n){switch(n.label){case 0:return t="",e?[4,p.default.get(e).then((function(e){return e.headers["content-type"]})).catch((function(e){}))]:[3,2];case 1:t=n.sent(),n.label=2;case 2:return[2,t]}}))}))},t.prototype.getData=function(e){var t=this;void 0===e&&(e=!0);var n=this.state,r=n.itemsPerSite,o=n.currentPage,l=n.items,s=n.itemsWithType,c=n.filteredTypes,u=localStorage.getItem("data")?localStorage.getItem("data"):null;u&&browser.runtime.sendMessage({action:"get-active-tab"}).then((function(n){return i(t,void 0,void 0,(function(){var t,d,f,p,g,m,h,b,v,y,x,w,k,E,_=this;return a(this,(function(S){switch(S.label){case 0:return n&&void 0!==n.id&&null!==n.id&&-1!==n.id&&-1!==n.url.indexOf("http")?(t=JSON.parse(u),void 0===(d=t.media).images||void 0===d.images[""+n.id]?[3,7]:[4,this.getAllImagesContentScript(n.id)]):[3,7];case 1:if(f=S.sent(),p=f.images,g=f.protocol,m=f.hostname,!e)return[3,6];for(c="all",r=10,o=0,l=[],s=[],this.setState({animationLoading:!0,itemsPerSite:r,currentPage:o,filteredTypes:c},(function(){return i(_,void 0,void 0,(function(){return a(this,(function(e){return[2]}))}))})),h=[],b=[],v=[{text:"All",value:"all"}],x=0;x<=p.length-1;x++)y=p[x].src,l.includes(y)||(-1===y.indexOf("http://")&&-1===y.indexOf("https://")&&-1===y.indexOf("data:image")&&-1===y.indexOf("moz-extension://")&&("/"!==y.charAt(0)&&(y="/"+y),y=g+"//"+m+y),"//"==y.substr(0,2)&&(y=g+"//"+y.substr(2,y.length)),l.push(y));x=0,S.label=2;case 2:return x<=l.length-1?[4,this.getImagesType(l[x])]:[3,5];case 3:w=S.sent(),s.push({link:l[x],type:w}),S.label=4;case 4:return x++,[3,2];case 5:for(x=0;x<=s.length-1;x++)w=s[x].type,h.includes(w)||""===w||void 0===w||(h.push(w),v.push({text:w,value:w})),void 0!==w&&""!==w&&("all"==c?b.push({source:s[x].link,type:w}):w===c&&b.push({source:l[x].link,type:w}));return this.setState({activeTabId:n.id,tabid:n.id,items:b,itemsWithType:s,hostname:m,protocol:g,availableTypes:v,filteredTypes:c,itemsPerSite:r},(function(){_.callback()})),[3,7];case 6:k=[],E=[],this.setState({animationLoading:!0,itemsPerSite:r,currentPage:o,filteredTypes:c},(function(){for(var e=0;e<=s.length-1;e++){var t=s[e].type;void 0===t||""===t||E.includes(s[e].link)||("all"==c||t===c)&&(E.push(s[e].link),k.push({source:s[e].link,type:t}))}_.setState({activeTabId:n.id,items:k,filteredTypes:c},(function(){_.callback()}))})),S.label=7;case 7:return[2]}}))}))})).catch((function(e){}))},t.prototype.callback=function(){var e=this,t=this.state,n=t.currentPage,r=t.itemsPerSite,o=t.items,i=(n=parseInt(n))*(r=parseInt(r)),a=i+r;this.setState({itemsToRender:o.slice(i,a)},(function(){e.generateImagesJsx()}))},t.prototype.generateImagesJsx=function(){for(var e=this.state,t=e.itemsToRender,n=e.protocol,r=e.hostname,o=[],i=0;i<=t.length-1;i++){var a=t[i].source;if(a&&"string"==typeof a){var l=a;-1===a.indexOf("http://")&&-1===a.indexOf("https://")&&-1===a.indexOf("data:image")&&-1===a.indexOf("moz-extension://")&&("/"!==a.charAt(0)&&(a="/"+a),l=n+"//"+r+a),"//"==a.substr(0,2)&&(l=n+"//"+a.substr(2,a.length)),o.push({source:l,type:t[i].type})}}this.setState({itemsToRenderJsx:o,animationLoading:!1})},t.prototype.getAllImagesContentScript=function(e){return i(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,browser.runtime.sendMessage({action:"get-all-images-by-tab-id",tabId:e}).then((function(e){return e})).catch((function(e){return[]}))];case 1:return[2,t.sent()]}}))}))},t.prototype.prev=function(){var e=this,t=this.state.currentPage;0!==t&&this.setState({currentPage:t-1},(function(){e.callback()}))},t.prototype.next=function(){var e=this,t=this.state,n=t.itemsPerSite,r=t.currentPage,o=r;n*++o<t.items.length&&this.setState({currentPage:r+1},(function(){e.callback()}))},t.prototype.displayFullscreenlist=function(e){var t;this.setState(((t={})[e]=!this.state[e],t))},t.prototype.getPagerJsx=function(){var e=this,t=this.state,n=t.itemsPerSite,r=t.currentPage,o=t.items,i=(t.itemsToRenderJsx,t.filteredTypes),a=o.length,l=r;return l++,c.createElement("div",{className:"paging"},c.createElement("span",{className:"filters"},c.createElement(h.default,{callback:function(t){return e.displayFullscreenlist("displayFullscreenlistFilter")},iconDown:"🔻",iconAttributes:void 0,title:this.translations.filter+": ",selectedType:i}),c.createElement("br",null),c.createElement(h.default,{callback:function(t){return e.displayFullscreenlist("displayFullscreenlist")},iconDown:"🔻",iconAttributes:void 0,title:this.translations.itemsPerSite+": ",selectedType:JSON.stringify(n)})),c.createElement("span",{className:"buttons"},c.createElement("i",{onClick:function(t){return e.prev()},className:0!==r?"fas fa-angle-left prev-button":"fas fa-angle-left prev-button deactivated"}),c.createElement("i",{onClick:function(t){return e.next()},className:n*l<a?"fas fa-angle-right next-button":"fas fa-angle-right next-button deactivated"})))},t.prototype.getMaxPages=function(){var e=this.state,t=e.items,n=e.itemsPerSite,r=t.length/n;return t.length<=n?parseInt(r):((r=Math.round(r))*n<t.length&&(r+=1),r)},t.prototype.setType=function(e,t){var n=this;if(!t)return this.setState({displayFullscreenlist:!1,displayFullscreenlistFilter:!1});this.setState({animationLoading:!0,filteredTypes:t.value,currentPage:0,displayFullscreenlist:!1,displayFullscreenlistFilter:!1},(function(){n.getData(!1)}))},t.prototype.setItemsPerSite=function(e,t){var n=this;if(!t)return this.setState({displayFullscreenlist:!1,displayFullscreenlistFilter:!1});var r=parseInt(t.value);"number"!=typeof r&&(r=20),this.setState({animationLoading:!0,itemsPerSite:r,currentPage:0,displayFullscreenlist:!1,displayFullscreenlistFilter:!1},(function(){n.getData(!1)}))},t.prototype.getFileTypeFromHref=function(e){for(var t=["svg","png","jpg","jpeg","ico","gif","tif","eps","pdf","psd","indd","bmp","webp"],n=0;n<=t.length-1;n++){var r=t[n],o=e.substr(e.length-4),i=e.substr(e.length-3);if(r===o||r===i)return r}return-1!==e.indexOf("data:image/jpg")||-1!==e.indexOf("data:image/jpeg")?"jpeg":-1!==e.indexOf("data:image/png")?"png":"jpeg"},t.prototype.getFileTypeFromContentTypeResponse=function(e){if(-1!==e.indexOf("jpg")||-1!==e.indexOf("jpeg"))return"jpeg";if(-1!==e.indexOf("png"))return"png";if(-1!==e.indexOf("svg"))return"svg";if(-1!==e.indexOf("gif"))return"gif";if(-1!==e.indexOf("webp"))return"webp";if(-1!==e.indexOf("icon"))return"ico";var t=e.split("/");return void 0!==t[1]?t[1]:"jpeg"},t.prototype.generateFileName=function(e){var t=e.split("/"),n=t[t.length-1];return 235<n.length&&(n=n.substring(0,235)),n},t.prototype.saveImage=function(e){var t=this,n=[];this.setState({animationLoading:!0},(function(){p.default.get(e).then((function(r){p.default.get(e,{responseType:"blob"}).then((function(o){var i=r.headers,a=o.data,l=i["content-type"];try{var s=t.getFileTypeFromHref(e),c=void 0!==l?l:"image/."+s,u=t.getFileTypeFromContentTypeResponse(c),d=g.default()+"."+u,p=new Blob([a],{type:c});f.saveAs(p,d),t.setState({animationLoading:!1})}catch(e){n.push({type:"error",msg:"File generation error: "+e}),t.setState({messages:n,animationLoading:!1})}})).catch((function(e){n.push({type:"error",msg:"Request error: "+e}),t.setState({messages:n,animationLoading:!1})}))})).catch((function(e){n.push({type:"error",msg:"Request error: "+e}),t.setState({messages:n,animationLoading:!1})}))}))},t.prototype.render=function(){var e=this,t=this.state,n=t.animationLoading,r=t.displayFullscreenlist,o=t.availableTypes,i=t.items,a=t.itemsToRenderJsx,l=t.displayFullscreenlistFilter;return n?c.createElement(m.default,null):0==a.length?c.createElement("div",{className:"DownloadImages"},c.createElement(d.default,null)):c.createElement("div",{className:"DownloadImages"},this.getPagerJsx(),void 0!==i&&0!==i.length&&0!==this.getMaxPages()&&c.createElement("h1",{className:"ff-title h1-sites text-center"},this.translations.page+" "+(this.state.currentPage+1)+" "+this.translations.of+" "+this.getMaxPages()),0!==i.length&&c.createElement("span",null,c.createElement("h1",{className:"ff-title h1-sites text-center"},i.length+" "+this.translations.images),c.createElement("h2",{className:"title-light"},this.translations.img_from_tags)),0===this.state.itemsToRenderJsx.length&&c.createElement(d.default,null),0!==a.length&&a.map((function(t){var n=t.source,r=t.type;return c.createElement("div",{key:g.default(),className:"image-box",title:n},c.createElement("img",{alt:"image",className:"images-to-save",src:n}),c.createElement("div",{className:"text"},n),c.createElement("div",{className:"type"},r),c.createElement("div",{className:"options"},c.createElement("i",{className:"far fa-arrow-alt-circle-down download",onClick:function(t){return e.saveImage(n)},title:e.translations.download}),c.createElement("a",{target:"_blank",href:n,className:"fas fa-external-link-square-alt external-link",title:e.translations.open_in_new_tab})))})),c.createElement(b.default,{data:o,closeIcon:"✖",callback:this.setType,display:l,inputActive:!0,inputPlaceholder:"Filter....",noDataText:" 🗯 "}),c.createElement(b.default,{data:[{text:"1 "+this.translations.itemsPerSiteSuffix,value:1},{text:"2 "+this.translations.itemsPerSiteSuffix,value:2},{text:"3 "+this.translations.itemsPerSiteSuffix,value:3},{text:"4 "+this.translations.itemsPerSiteSuffix,value:4},{text:"5 "+this.translations.itemsPerSiteSuffix,value:5},{text:"10 "+this.translations.itemsPerSiteSuffix,value:10},{text:"20 "+this.translations.itemsPerSiteSuffix,value:20},{text:"30 "+this.translations.itemsPerSiteSuffix,value:30},{text:"40 "+this.translations.itemsPerSiteSuffix,value:40},{text:"50 "+this.translations.itemsPerSiteSuffix,value:50},{text:"60 "+this.translations.itemsPerSiteSuffix,value:60},{text:"70 "+this.translations.itemsPerSiteSuffix,value:70},{text:"80 "+this.translations.itemsPerSiteSuffix,value:80},{text:"90 "+this.translations.itemsPerSiteSuffix,value:90},{text:"100 "+this.translations.itemsPerSiteSuffix,value:100}],closeIcon:"✖",callback:this.setItemsPerSite,display:r,inputActive:!0,inputPlaceholder:"10, 20, 30....",noDataText:" 🗯 "}))},t}(c.Component);t.default=v},function(e,t,n){"use strict";var r=n(15),o=n(145),i=n(387),a=n(151);function l(e){var t=new i(e),n=o(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var s=l(n(148));s.Axios=i,s.create=function(e){return l(a(s.defaults,e))},s.Cancel=n(152),s.CancelToken=n(401),s.isCancel=n(147),s.all=function(e){return Promise.all(e)},s.spread=n(402),e.exports=s,e.exports.default=s},function(e,t,n){"use strict";var r=n(15),o=n(146),i=n(388),a=n(389),l=n(151);function s(e){this.defaults=e,this.interceptors={request:new i,response:new i}}s.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=l(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},s.prototype.getUri=function(e){return e=l(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){s.prototype[e]=function(t,n){return this.request(r.merge(n||{},{method:e,url:t}))}})),r.forEach(["post","put","patch"],(function(e){s.prototype[e]=function(t,n,o){return this.request(r.merge(o||{},{method:e,url:t,data:n}))}})),e.exports=s},function(e,t,n){"use strict";var r=n(15);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},function(e,t,n){"use strict";var r=n(15),o=n(390),i=n(147),a=n(148);function l(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return l(e),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return l(e),t.data=o(t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(l(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var r=n(15);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var s,c=[],u=!1,d=-1;function f(){u&&s&&(u=!1,s.length?c=s.concat(c):d=-1,c.length&&p())}function p(){if(!u){var e=l(f);u=!0;for(var t=c.length;t;){for(s=c,c=[];++d<t;)s&&s[d].run();d=-1,t=c.length}s=null,u=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new g(e,t)),1!==c.length||u||l(p)},g.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";var r=n(15);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},function(e,t,n){"use strict";var r=n(150);e.exports=function(e,t,n){var o=n.config.validateStatus;!o||o(n.status)?e(n):t(r("Request failed with status code "+n.status,n.config,null,n.request,n))}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(396),o=n(397);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(15),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,a={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}})),a):a}},function(e,t,n){"use strict";var r=n(15);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r=n(15);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,a){var l=[];l.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(i)&&l.push("domain="+i),!0===a&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(152);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=l(n(1)),u=s(n(45)),d=s(n(102)),f=l(n(143)),p=s(n(144)),g=s(n(46)),m=s(n(153)),h=s(n(154)),b=s(n(155)),v=function(e){function t(t){var n=e.call(this,t)||this;return n.getData=n.getData.bind(n),n.callback=n.callback.bind(n),n.callback=n.callback.bind(n),n.prev=n.prev.bind(n),n.next=n.next.bind(n),n.getPagerJsx=n.getPagerJsx.bind(n),n.saveImage=n.saveImage.bind(n),n.setType=n.setType.bind(n),n.setItemsPerSite=n.setItemsPerSite.bind(n),n.state={minifiedSecondSideBar:!0,isMinified:!0,sidebarMin:!0,contentMin:!0,minifiedSaver:!0,language:"en",activeTab:{},contentData:n.props.contentData?n.props.contentData:"",loginRequired:n.props.loginRequired,redirectAfterLogin:n.props.redirectAfterLogin?n.props.redirectAfterLogin:"",images:0,tabid:"",items:[],itemsWithType:[],hostname:"",protocol:"",href:"",itemsToRenderJsx:[],filteredTypes:"all",availableTypes:[],loadingTabsDone:!1,currentImagesAndType:[],itemsPerSite:10,currentPage:0,itmes:[],displayFullscreenlist:!1,displayFullscreenlistFilter:!1},n.translations=u.default(),n}return o(t,e),t.prototype.componentDidMount=function(){this.getData()},t.prototype.getImagesType=function(e){return void 0===e&&(e=""),i(this,void 0,void 0,(function(){var t;return a(this,(function(n){switch(n.label){case 0:return t="",e?[4,p.default.get(e).then((function(e){return e.headers["content-type"]})).catch((function(e){}))]:[3,2];case 1:t=n.sent(),n.label=2;case 2:return[2,t]}}))}))},t.prototype.getData=function(e){var t=this;void 0===e&&(e=!0);var n=this.state,r=n.itemsPerSite,o=n.currentPage,l=n.items,s=n.itemsWithType,c=n.filteredTypes,u=localStorage.getItem("data")?localStorage.getItem("data"):null;u&&browser.runtime.sendMessage({action:"get-active-tab"}).then((function(n){return i(t,void 0,void 0,(function(){var t,d,f,p,g,m,h,b,v,y,x,w,k,E=this;return a(this,(function(_){switch(_.label){case 0:return n&&void 0!==n.id&&null!==n.id&&-1!==n.id&&-1!==n.url.indexOf("http")?(t=JSON.parse(u),void 0===(d=t.media).images||void 0===d.images[""+n.id]?[3,7]:[4,this.getAllImagesContentScript(n.id)]):[3,7];case 1:if(f=_.sent(),f.images,p=f.protocol,g=f.hostname,!e)return[3,6];c="all",r=10,o=0,l=[],s=[],this.setState({animationLoading:!0,itemsPerSite:r,currentPage:o,filteredTypes:c},(function(){return i(E,void 0,void 0,(function(){return a(this,(function(e){return[2]}))}))})),m=[],h=[],b=[{text:"All",value:"all"}],v=d.images[""+n.id],y=0,_.label=2;case 2:return y<=v.length-1?[4,this.getImagesType(v[y])]:[3,5];case 3:x=_.sent(),s.push({link:v[y],type:x}),l.includes(v[y])||l.push(v[y]),_.label=4;case 4:return y++,[3,2];case 5:for(y=0;y<=s.length-1;y++)x=s[y].type,m.includes(x)||""===x||void 0===x||(m.push(x),b.push({text:x,value:x})),void 0!==x&&""!==x&&("all"==c?h.push({source:s[y].link,type:x}):x===c&&h.push({source:l[y].link,type:x}));return this.setState({activeTabId:n.id,tabid:n.id,items:h,itemsWithType:s,hostname:g,protocol:p,availableTypes:b,filteredTypes:c,itemsPerSite:r},(function(){E.callback()})),[3,7];case 6:w=[],k=[],this.setState({animationLoading:!0,itemsPerSite:r,currentPage:o,filteredTypes:c},(function(){for(var e=0;e<=s.length-1;e++){var t=s[e].type;void 0===t||""===t||k.includes(s[e].link)||("all"==c||t===c)&&(k.push(s[e].link),w.push({source:s[e].link,type:t}))}E.setState({activeTabId:n.id,items:w,filteredTypes:c},(function(){E.callback()}))})),_.label=7;case 7:return[2]}}))}))})).catch((function(e){}))},t.prototype.callback=function(){var e=this,t=this.state,n=t.currentPage,r=t.itemsPerSite,o=t.items,i=(n=parseInt(n))*(r=parseInt(r)),a=i+r;this.setState({itemsToRender:o.slice(i,a)},(function(){e.generateImagesJsx()}))},t.prototype.generateImagesJsx=function(){for(var e=this.state,t=e.itemsToRender,n=e.protocol,r=e.hostname,o=[],i=0;i<=t.length-1;i++){var a=t[i].source;if(a&&"string"==typeof a){var l=a;-1===a.indexOf("http://")&&-1===a.indexOf("https://")&&-1===a.indexOf("data:image")&&-1===a.indexOf("moz-extension://")&&("/"!==a.charAt(0)&&(a="/"+a),l=n+"//"+r+a),"//"==a.substr(0,2)&&(l=n+"//"+a.substr(2,a.length)),o.push({source:l,type:t[i].type})}}this.setState({itemsToRenderJsx:o,animationLoading:!1})},t.prototype.getAllImagesContentScript=function(e){return i(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,browser.runtime.sendMessage({action:"get-all-images-by-tab-id",tabId:e}).then((function(e){return e})).catch((function(e){return[]}))];case 1:return[2,t.sent()]}}))}))},t.prototype.prev=function(){var e=this,t=this.state.currentPage;0!==t&&this.setState({currentPage:t-1},(function(){e.callback()}))},t.prototype.next=function(){var e=this,t=this.state,n=t.itemsPerSite,r=t.currentPage,o=r;n*++o<t.items.length&&this.setState({currentPage:r+1},(function(){e.callback()}))},t.prototype.displayFullscreenlist=function(e){var t;this.setState(((t={})[e]=!this.state[e],t))},t.prototype.getPagerJsx=function(){var e=this,t=this.state,n=t.itemsPerSite,r=t.currentPage,o=t.items,i=t.filteredTypes,a=o.length,l=r;return l++,c.createElement("div",{className:"paging"},c.createElement("span",{className:"filters"},c.createElement(h.default,{callback:function(t){return e.displayFullscreenlist("displayFullscreenlistFilter")},iconDown:"🔻",iconAttributes:void 0,title:this.translations.filter+": ",selectedType:i}),c.createElement("br",null),c.createElement(h.default,{callback:function(t){return e.displayFullscreenlist("displayFullscreenlist")},iconDown:"🔻",iconAttributes:void 0,title:this.translations.itemsPerSite+": ",selectedType:JSON.stringify(n)})),c.createElement("span",{className:"buttons"},c.createElement("i",{onClick:function(t){return e.prev()},className:0!==r?"fas fa-angle-left prev-button":"fas fa-angle-left prev-button deactivated"}),c.createElement("i",{onClick:function(t){return e.next()},className:n*l<a?"fas fa-angle-right next-button":"fas fa-angle-right next-button deactivated"})))},t.prototype.getMaxPages=function(){var e=this.state,t=e.items,n=e.itemsPerSite,r=t.length/n;return t.length<=n?parseInt(r):((r=Math.round(r))*n<t.length&&(r+=1),r)},t.prototype.setType=function(e,t){var n=this;if(!t)return this.setState({displayFullscreenlist:!1,displayFullscreenlistFilter:!1});this.setState({animationLoading:!0,filteredTypes:t.value,currentPage:0,displayFullscreenlist:!1,displayFullscreenlistFilter:!1},(function(){n.getData(!1)}))},t.prototype.setItemsPerSite=function(e,t){var n=this;if(!t)return this.setState({displayFullscreenlist:!1,displayFullscreenlistFilter:!1});var r=parseInt(t.value);"number"!=typeof r&&(r=20),this.setState({animationLoading:!0,itemsPerSite:r,currentPage:0,displayFullscreenlist:!1,displayFullscreenlistFilter:!1},(function(){n.getData(!1)}))},t.prototype.getFileTypeFromHref=function(e){for(var t=["svg","png","jpg","jpeg","ico","gif","tif","eps","pdf","psd","indd","bmp","webp"],n=0;n<=t.length-1;n++){var r=t[n],o=e.substr(e.length-4),i=e.substr(e.length-3);if(r===o||r===i)return r}return-1!==e.indexOf("data:image/jpg")||-1!==e.indexOf("data:image/jpeg")?"jpeg":-1!==e.indexOf("data:image/png")?"png":"jpeg"},t.prototype.getFileTypeFromContentTypeResponse=function(e){if(-1!==e.indexOf("jpg")||-1!==e.indexOf("jpeg"))return"jpeg";if(-1!==e.indexOf("png"))return"png";if(-1!==e.indexOf("svg"))return"svg";if(-1!==e.indexOf("gif"))return"gif";if(-1!==e.indexOf("webp"))return"webp";if(-1!==e.indexOf("icon"))return"ico";var t=e.split("/");return void 0!==t[1]?t[1]:"jpeg"},t.prototype.generateFileName=function(e){var t=e.split("/"),n=t[t.length-1];return 235<n.length&&(n=n.substring(0,235)),n},t.prototype.saveImage=function(e){var t=this,n=[];this.setState({animationLoading:!0},(function(){p.default.get(e).then((function(r){p.default.get(e,{responseType:"blob"}).then((function(o){var i=r.headers,a=o.data,l=i["content-type"];try{var s=t.getFileTypeFromHref(e),c=void 0!==l?l:"image/."+s,u=t.getFileTypeFromContentTypeResponse(c),d=g.default()+"."+u,p=new Blob([a],{type:c});f.saveAs(p,d),t.setState({animationLoading:!1})}catch(e){n.push({type:"error",msg:"File generation error: "+e}),t.setState({messages:n,animationLoading:!1})}})).catch((function(e){n.push({type:"error",msg:"Request error: "+e}),t.setState({messages:n,animationLoading:!1})}))})).catch((function(e){n.push({type:"error",msg:"Request error: "+e}),t.setState({messages:n,animationLoading:!1})}))}))},t.prototype.render=function(){var e=this,t=this.state,n=t.animationLoading,r=t.displayFullscreenlist,o=t.availableTypes,i=t.items,a=t.itemsToRenderJsx,l=t.displayFullscreenlistFilter;return n?c.createElement(m.default,null):0==a.length?c.createElement("div",{className:"DownloadImages"},c.createElement(d.default,null)):c.createElement("div",{className:"DownloadImages"},this.getPagerJsx(),void 0!==i&&0!==i.length&&0!==this.getMaxPages()&&c.createElement("h1",{className:"ff-title h1-sites text-center"},this.translations.page+" "+(this.state.currentPage+1)+" "+this.translations.of+" "+this.getMaxPages()),0!==i.length&&c.createElement("span",null,c.createElement("h1",{className:"ff-title h1-sites text-center"},i.length+" "+this.translations.images),c.createElement("h2",{className:"title-light"},this.translations.img_from_request)),0===this.state.itemsToRenderJsx.length&&c.createElement(d.default,null),0!==a.length&&a.map((function(t){var n=t.source,r=t.type;return c.createElement("div",{key:g.default(),className:"image-box",title:n},c.createElement("img",{alt:"image",className:"images-to-save",src:n}),c.createElement("div",{className:"text"},n),c.createElement("div",{className:"type"},r),c.createElement("div",{className:"options"},c.createElement("i",{className:"far fa-arrow-alt-circle-down download",onClick:function(t){return e.saveImage(n)},title:e.translations.download}),c.createElement("a",{target:"_blank",href:n,className:"fas fa-external-link-square-alt external-link",title:e.translations.open_in_new_tab})))})),c.createElement(b.default,{data:o,closeIcon:"✖",callback:this.setType,display:l,inputActive:!0,inputPlaceholder:"Filter....",noDataText:" 🗯 "}),c.createElement(b.default,{data:[{text:"1 "+this.translations.itemsPerSiteSuffix,value:1},{text:"2 "+this.translations.itemsPerSiteSuffix,value:2},{text:"3 "+this.translations.itemsPerSiteSuffix,value:3},{text:"4 "+this.translations.itemsPerSiteSuffix,value:4},{text:"5 "+this.translations.itemsPerSiteSuffix,value:5},{text:"10 "+this.translations.itemsPerSiteSuffix,value:10},{text:"20 "+this.translations.itemsPerSiteSuffix,value:20},{text:"30 "+this.translations.itemsPerSiteSuffix,value:30},{text:"40 "+this.translations.itemsPerSiteSuffix,value:40},{text:"50 "+this.translations.itemsPerSiteSuffix,value:50},{text:"60 "+this.translations.itemsPerSiteSuffix,value:60},{text:"70 "+this.translations.itemsPerSiteSuffix,value:70},{text:"80 "+this.translations.itemsPerSiteSuffix,value:80},{text:"90 "+this.translations.itemsPerSiteSuffix,value:90},{text:"100 "+this.translations.itemsPerSiteSuffix,value:100}],closeIcon:"✖",callback:this.setItemsPerSite,display:r,inputActive:!0,inputPlaceholder:"10, 20, 30....",noDataText:" 🗯 "}))},t}(c.Component);t.default=v},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var l=i(n(1)),s=a(n(45)),c=function(e){function t(t){var n=e.call(this,t)||this;return n.fadePopupBoxOut=n.fadePopupBoxOut.bind(n),n.handleMouseDown=n.handleMouseDown.bind(n),n.togglePopupBox=n.togglePopupBox.bind(n),n.getUserDataJsx=n.getUserDataJsx.bind(n),n.setValue_language=n.setValue_language.bind(n),n.checkLocation=n.checkLocation.bind(n),n.translations=s.default(),n.state={displayBox:!1,displayBoxClassNames:"popup-box",currentData:{firstname:"",lastname:""},titleBox:n.translations.languages},n}return o(t,e),t.prototype.componentDidMount=function(){this.oldHref=window.location.href,document.addEventListener("mousedown",this.handleMouseDown)},t.prototype.componentWillUnmount=function(){clearInterval(this.odHrefInterval)},t.prototype.handleMouseDown=function(e){this.nodeData&&!this.nodeData.contains(e.target)&&this.fadePopupBoxOut(),this.checkLocation()},t.prototype.checkLocation=function(){var e=this;clearInterval(this.odHrefInterval);this.odHrefInterval=setInterval((function(){e.oldHref!==window.location.href&&(e.oldHref=window.location.href,clearInterval(e.odHrefInterval),e.setState({displayBox:!1,displayBoxClassNames:"popup-box"}))}),50)},t.prototype.changeAppsLanguage=function(e){localStorage.setItem("applanguage",e),browser.runtime.sendMessage({action:"set-app-language",language:e}).then((function(){window.location.reload()}))},t.prototype.setValue_language=function(e){void 0===e&&(e="en"),this.changeAppsLanguage(e)},t.prototype.togglePopupBox=function(){if(!this.state.displayBox)return this.setState({displayBox:!this.state.displayBox});this.fadePopupBoxOut()},t.prototype.fadePopupBoxOut=function(){var e=this,t=this.state.displayBoxClassNames;this.setState({displayBoxClassNames:t+" fade-out"},(function(){setTimeout((function(){e.setState({displayBox:!1,displayBoxClassNames:"popup-box"})}),200)}))},t.prototype.getUserDataJsx=function(){var e=this;return l.createElement("span",null,l.createElement("ul",{className:"data-ul"},l.createElement("li",{className:"language",onClick:function(t){return e.setValue_language("de")}},"Deutsch"),l.createElement("li",{className:"language",onClick:function(t){return e.setValue_language("en")}},"English"),l.createElement("li",{className:"language",onClick:function(t){return e.setValue_language("pl")}},"Polski")))},t.prototype.render=function(){var e=this;return l.createElement("span",{ref:function(t){return e.nodeData=t},className:"relative popup-box-main"},l.createElement("i",{onClick:function(t){return e.togglePopupBox()},className:"fas fa-flag-checkered popup-box-icon"}),this.state.displayBox&&l.createElement("div",{className:this.state.displayBoxClassNames},l.createElement("h1",null,l.createElement("i",{className:"fas fa-flag-checkered little-gray"}),this.state.titleBox),l.createElement("div",{className:"popup-box-list flex flex-column"},this.getUserDataJsx())))},t}(l.Component);t.default=c},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(1)),c=l(n(46)),u=l(n(56));n(406);var d=function(e){function t(t){var n=e.call(this,t)||this;return n.checkLocation=n.checkLocation.bind(n),n.state={messagesApp:[],messageKey:t.messageKey&&"string"==typeof t.messageKey?t.messageKey:"",codeMapping:t.codeMapping&&typeof{}==typeof t.codeMapping?t.codeMapping:{},timer:t.timer&&"number"==typeof t.timer?t.timer:2500},n.removeMessage=n.removeMessage.bind(n),n.setIntervaller=n.setIntervaller.bind(n),n.href=window.location.href,n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return u.default(["codeMapping","timer","messageKey"],e,t)?{messageKey:e.messageKey&&"string"==typeof e.messageKey?e.messageKey:"",codeMapping:e.codeMapping&&typeof{}==typeof e.codeMapping?e.codeMapping:{},timer:e.timer&&"number"==typeof e.timer?e.timer:2500}:null},t.prototype.componentDidMount=function(){this.setOnClickEventListenerToTheDom(),""!==this.state.messageKey&&this.setIntervaller()},t.prototype.componentWillUnmount=function(){document.removeEventListener("click",this.checkLocation),clearInterval(this.globalMessagesIntervaller)},t.prototype.setOnClickEventListenerToTheDom=function(){document.removeEventListener("click",this.checkLocation),document.addEventListener("click",this.checkLocation)},t.prototype.checkLocation=function(){var e=this,t=5;clearInterval(n);var n=setInterval((function(){return e.href!==window.location.href&&t>0?(e.href=window.location.href,e.clearStore(),clearInterval(n)):t?void t--:clearInterval(n)}),100)},t.prototype.readStore=function(){var e=this.state.messageKey;return null!==sessionStorage.getItem(e)?JSON.parse(sessionStorage.getItem(e)):[]},t.prototype.clearStore=function(){var e=this.state.messageKey;sessionStorage.removeItem(e),this.setState({messagesApp:[]})},t.prototype.setIntervaller=function(){var e=this,t=this.state.timer;clearInterval(this.globalMessagesIntervaller),this.globalMessagesIntervaller=setInterval((function(){var t=e.readStore();0!==t.length&&(e.clearStore(),e.setState({messagesApp:t}))}),t)},t.prototype.removeMessage=function(e){this.setState({messagesApp:this.state.messagesApp.filter((function(t,n){return n!==e}))})},t.prototype.render=function(){var e=this,t=this.state,n=t.codeMapping,r=t.messagesApp,o=Object.getOwnPropertyNames(n);return s.createElement("div",{key:c.default(),className:"GlobalErrors flex flex-column"},r.map((function(t,r){var a=t.errorCode,l=t.errorMessage;if(a=JSON.stringify(a),o.includes(a)&&void 0!==n[a]){var u=n[a],d=u.title,f=u.displayErrorCode,p=u.text,g=u.close,m=u.link,h={},b={},v={};return p&&typeof{}==typeof p&&p.attributes&&typeof{}==typeof p.attributes&&(h=p.attributes),m&&typeof{}==typeof m&&m.attributes&&typeof{}==typeof m.attributes&&(b=m.attributes),g&&typeof{}==typeof g&&g.attributes&&typeof{}==typeof g.attributes&&(v=g.attributes),s.createElement("div",{className:"single-error",key:c.default()},d&&"string"==typeof d&&s.createElement("h1",null,d+" "+(f?a:"")),d&&typeof{}==typeof d&&s.createElement("h1",null,d," "+(f?a:"")),s.createElement("div",i({className:"text"},h),(p.prefix?p.prefix+" ":"")+" "+(l?l+" ":"")+" "+(p.suffix?""+p.suffix:"")),s.createElement("div",{className:"options flex"},s.createElement("div",i({onClick:function(t){return e.removeMessage(r)},className:"single-option"},v),g.text?g.text+" ":""),m&&typeof{}==typeof m&&m.text&&"string"==typeof m.text&&s.createElement("div",{className:"single-option"},s.createElement("a",i({rel:"noopener noreferrer",href:""+(m.href?m.href:"")},b),m.text))))}return null})))},t}(s.Component);t.default=d},function(e,t,n){var r=n(156),o=n(407);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(157)(!1)).push([e.i,".bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.GlobalErrors{position:fixed;bottom:20px;left:20px;background-color:transpartent;z-index:10;color:#fff}.GlobalErrors .single-error{background-color:#fff;border:1px solid #dadce0;border-radius:5px;margin:10px 0;position:relative;max-width:350px}.GlobalErrors .single-error h1{line-height:30px;color:#202124;font-size:0.91rem;box-sizing:border-box;padding:0 20px}.GlobalErrors .single-error .text{line-height:22px;color:rgba(69,69,69,0.8);font-size:0.87rem;text-align:justify;box-sizing:border-box;padding:0 20px}.GlobalErrors .single-error .options{width:100%;margin-top:15px;border-top:1px solid #dadce0;box-sizing:border-box;padding:5px 0}.GlobalErrors .single-error .options .single-option{width:50%;text-align:center;height:50px;line-height:50px;transition-duration:350ms}.GlobalErrors .single-error .options .single-option,.GlobalErrors .single-error .options a{color:rgba(39,39,39,0.7);font-size:0.91rem;text-decoration:none}.GlobalErrors .single-error .options .single-option:hover,.GlobalErrors .single-error .options a:hover{cursor:pointer;color:#131313}\n",""]),e.exports=t},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this&&this.__assign||function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(1)),c=l(n(56)),u=l(n(46)),d=function(e){function t(t){var n=e.call(this,t)||this;return n.fadePopupBoxOut=n.fadePopupBoxOut.bind(n),n.handleMouseDown=n.handleMouseDown.bind(n),n.togglePopupBox=n.togglePopupBox.bind(n),n.getUserDataJsx=n.getUserDataJsx.bind(n),n.state={titleBox:t.titleBox&&"string"==typeof t.titleBox?t.titleBox:"",icon:t.icon&&typeof{}==typeof t.icon?t.icon:void 0,data:t.data&&typeof[]==typeof t.data?t.data:[],masterLink:t.masterLink&&"string"==typeof t.masterLink?t.masterLink:"",masterText:t.masterText&&"string"==typeof t.masterText?t.masterText:"",masterIcon:t.masterIcon&&typeof{}==typeof t.masterIcon?t.masterIcon:void 0,masterAttributes:t.masterAttributes&&typeof{}==typeof t.masterAttributes?t.masterAttributes:void 0,displayBox:!1,displayBoxClassNames:"popup-box"},n}return o(t,e),t.getDerivedStateFromProps=function(e,t){return c.default(["titleBox","icon","data","masterIcon","masterText","masterLink","masterAttributes"],e,t)?{titleBox:e.titleBox&&"string"==typeof e.titleBox?e.titleBox:"",icon:e.icon&&typeof{}==typeof e.icon?e.icon:void 0,data:e.data&&typeof[]==typeof e.data?e.data:[],masterLink:e.masterLink&&"string"==typeof e.masterLink?e.masterLink:"",masterText:e.masterText&&"string"==typeof e.masterText?e.masterText:"",masterIcon:e.masterIcon&&typeof{}==typeof e.masterIcon?e.masterIcon:void 0,masterAttributes:e.masterAttributes&&typeof{}==typeof e.masterAttributes?e.masterAttributes:void 0}:null},t.prototype.componentDidMount=function(){this.oldHref=window.location.href,document.addEventListener("mousedown",this.handleMouseDown)},t.prototype.componentWillUnmount=function(){clearInterval(this.odHrefInterval)},t.prototype.handleMouseDown=function(e){this.nodeData&&!this.nodeData.contains(e.target)&&this.fadePopupBoxOut(),this.checkLocation()},t.prototype.checkLocation=function(){var e=this;clearInterval(this.odHrefInterval);this.odHrefInterval=setInterval((function(){e.oldHref!==window.location.href&&(e.oldHref=window.location.href,clearInterval(e.odHrefInterval),e.setState({displayBox:!1,displayBoxClassNames:"popup-box"}))}),50)},t.prototype.togglePopupBox=function(){if(!this.state.displayBox)return this.setState({displayBox:!this.state.displayBox});this.fadePopupBoxOut()},t.prototype.fadePopupBoxOut=function(){var e=this,t=this.state.displayBoxClassNames;this.setState({displayBoxClassNames:t+" fade-out"},(function(){setTimeout((function(){e.setState({displayBox:!1,displayBoxClassNames:"popup-box"})}),200)}))},t.prototype.getUserDataJsx=function(){var e=this,t=this.state,n=t.data,r=t.masterLink,o=t.masterText,a=t.masterIcon,l=t.masterAttributes;return n&&0!=n.length?s.createElement("span",null,s.createElement("ul",{className:"data-ul"},n.map((function(t){var n=t.icon,r=t.href,o=t.attributes,a=t.text,l=o&&typeof{}==typeof o?o:{};return s.createElement("li",{key:u.default(),className:"single-data-li-account"},s.createElement("a",i({className:"popup-box-button"},l,{href:r,onClick:function(t){return e.fadePopupBoxOut()}}),n&&n,a))}))),r&&o&&a&&s.createElement("a",i({className:"popup-box-all",href:r,onClick:function(t){return e.togglePopupBox()}},l),o,a)):null},t.prototype.openLinkInNewTab=function(e,t){void 0===t&&(t=!1),browser.runtime.sendMessage({action:"open-link-in-new-tab",url:e}),this.fadePopupBoxOut(),t&&window.close()},t.prototype.render=function(){var e=this,t=this.state,n=t.displayBoxClassNames,r=(t.icon,t.titleBox);return s.createElement("span",{ref:function(t){return e.nodeData=t},className:"relative popup-box-main"},s.createElement("i",{onClick:function(t){return e.togglePopupBox()},className:"fas fa-external-link-alt popup-box-icon"}),this.state.displayBox&&s.createElement("div",{className:n},s.createElement("h1",null,s.createElement("i",{className:"fas fa-external-link-alt little-gray"}),r),s.createElement("div",{className:"popup-box-list flex flex-column"},this.getUserDataJsx())))},t}(s.Component);t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.version="2.7.1";t.appName="Image Downloader";t.appNameShort="Image Downloader"},function(e,t,n){var r=n(156),o=n(411);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){(t=n(157)(!1)).push([e.i,".bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}body{overflow-x:hidden}#app{overflow-x:hidden;overflow-y:auto}#app #app-holder{height:500px}#app .website--home{width:100%;height:100%;display:flex;flex-direction:flex-start;overflow-x:hidden}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.main-menu{padding-top:30px;list-style-type:none;overflow:hidden;overflow-anchor:none;position:relative;height:calc(100vh - 120px);list-style:none;margin:0;overflow:auto;overflow-x:hidden;padding:0;position:relative;padding-bottom:50px;padding-top:10px}@keyframes rotateToggledLeft{0%{transform:rotateZ(43deg)}100%{transform:rotateZ(-43deg)}}@keyframes rotateToggledRight{0%{transform:rotateZ(-43deg)}100%{transform:rotateZ(43deg)}}@keyframes rotateToggleLeft{0%{transform:rotateZ(-43deg)}100%{transform:rotateZ(43deg)}}@keyframes rotateToggleRight{0%{transform:rotateZ(43deg)}100%{transform:rotateZ(-43deg)}}.main-menu ul{list-style:none;margin:0;padding:0}.main-menu .single-entry{position:relative;margin-top:5px;list-style-type:none;color:#72777a;letter-spacing:0.2px;transition-duration:350ms;font-weight:500;position:relative;white-space:nowrap;color:#72777a;text-decoration:none;height:40px;line-height:40px;box-sizing:border-box;padding:0px 15px;display:inline-block;width:100%}.main-menu .single-entry .text{font-size:0.87rem;margin-left:20px}.main-menu .single-entry .icon{font-size:0.93rem;margin:10px 2px}.main-menu .single-entry .drop-down{position:absolute;top:10px;right:15px;transition-duration:350ms}.main-menu .single-entry .drop-down:before,.main-menu .single-entry .drop-down:after{content:'';position:absolute;top:5px;width:1px;height:10px;overflow:hidden;transition-duration:350ms;background-color:#272727}.main-menu .single-entry .drop-down:before{right:0}.main-menu .single-entry .drop-down:after{right:6px}@keyframes showLiItems{0%{height:0px;overflow:hidden}100%{height:40px;overflow:unset}}@keyframes hideLiItems{0%{height:40px;overflow:unset}100%{height:0px;overflow:hidden}}.main-menu .toggled ul li{height:0px;overflow:hidden;animation:showLiItems 350ms forwards ease-in;transition-duration:350ms}.main-menu .toggle-back .static{animation:hideLiItems 350ms forwards ease-in}.main-menu ul .static{height:40px;overflow:unset}.main-menu ul .dynamic{height:auto;overflow:unset}.main-menu .single-entry:hover{cursor:pointer;background-color:rgba(222,222,222,0.6)}.main-menu .drop-down.toggle:before{transform:rotateZ(43deg)}.main-menu .drop-down.toggle:after{transform:rotateZ(-43deg)}.main-menu .drop-down.persist-toggled:before{transform:rotateZ(-43deg) !important}.main-menu .drop-down.persist-toggled:after{transform:rotateZ(43deg) !important}.main-menu .drop-down.toggled:before{animation:rotateToggledLeft 350ms forwards linear}.main-menu .drop-down.toggled:after{animation:rotateToggledRight 350ms forwards linear}.main-menu .drop-down.toggle-back:before{animation:rotateToggleLeft 350ms forwards linear}.main-menu .drop-down.toggle-back:after{animation:rotateToggleRight 350ms forwards linear}.SideBar{position:fixed;left:0;top:0;width:250px;height:100vh;border-right:1px solid #dadce0;overflow:hidden;transition-duration:350ms;background-color:#fff;z-index:1}.SideBar .title-logo{width:100%;height:60px;border-bottom:1px solid #dadce0;display:flex;box-sizing:border-box;padding:10px 8px;transition-duration:350ms}.SideBar .title-logo .logo{margin-top:5px}.SideBar .title-logo .logo img{width:32px;height:32px}.SideBar .title-logo .version{color:rgba(69,69,69,0.7)}.SideBar .title-logo .version .name{color:#454545}.SideBar .title-logo .version .name,.SideBar .title-logo .version i{line-height:30px;box-sizing:border-box;padding-left:20px;font-size:0.87rem}.SideBar .title-logo .version i{font-size:0.753rem;line-height:3px}.SideBar.SideBar-min{width:50px;transition-duration:200ms}.SideBar.SideBar-min .drop-down{opacity:0}.SideBar.SideBar-min:hover{width:250px;z-index:2}.SideBar.SideBar-min:hover .drop-down{opacity:1}.SidebarMinified{width:250px;left:-300px;transition-duration:350ms}.SidebarMinified.opened{width:250px;left:0px;background-color:#fff;z-index:2}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}@keyframes displayBoxEasyIn{0%{transform:scale(0);opacity:0;width:0}100%{width:260px;transform:scale(1);opacity:1}}@keyframes displayBoxEasyInMinified{0%{transform:scale(0);opacity:0;width:0}100%{width:210px;transform:scale(1);opacity:1}}@keyframes displayBoxEasyOut{0%{width:260px;transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0;width:0}}@keyframes displayBoxEasyOutMinified{0%{width:210px;transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0;width:0}}@keyframes scale0{0%{transform:scale(1)}100%{transform:scale(0)}}@keyframes opacity{0%{opacity:0}100%{opacity:1}}@keyframes opacity_back{0%{opacity:1}100%{opacity:0}}@keyframes opacityScaleTopLeft{0%{width:0vw;height:0vh;top:50vh;right:50vw;opacity:0;transform:scaleZ(0)}100%{width:100vw;height:100vh;top:0;right:0;opacity:1;transform:scaleZ(1)}}@keyframes opacityScaleTopLeft_back{0%{width:100vw;height:100vh;top:0;right:0;opacity:1;transform:scaleZ(1)}100%{top:50vh;right:50vw;width:0vw;height:0vh;opacity:0;transform:scaleZ(0)}}@keyframes showMessagesMenuContent{0%{left:100vw}100%{left:0vw}}@keyframes hideMessagesMenuContent{0%{left:0vw}100%{left:100vw}}@keyframes toggleChatMenuIn{0%{top:100px}100%{top:-70px}}@keyframes toggleChatMenuOut{0%{top:-70px}100%{top:100px}}@keyframes animateLoadingChatDiv{0%{left:-40%}100%{left:140%}}@keyframes scaleIt{0%{transform:scale(1)}20%{transform:scale(0.8)}40%{transform:scale(1)}60%{transform:scale(1.1)}100%{transform:scale(1)}}@keyframes scaleItCopyToClipboard{0%{transform:scale(1)}33%{transform:scale(0.7)}66%{transform:scale(1.2)}100%{transform:scale(1)}}.Content{position:absolute;top:0;min-height:100vh;left:250px;z-index:1;width:calc(100% - 250px);overflow-x:hidden}.Content .head{width:100%;height:60px;border-bottom:1px solid #dadce0;box-sizing:border-box;padding:10px 20px}.Content .head .minify-menu{float:left;box-sizing:border-box;padding:12px 13px;border-radius:50%;transition-duration:350ms}.Content .head .minify-menu:hover{background-color:rgba(199,199,199,0.2);cursor:pointer;color:#454545}.Content .head .popup-box-main{position:relative;float:right}.Content .head .popup-box-icon{box-sizing:border-box;padding:12px 13px;border-radius:50%;transition-duration:350ms;position:relative;font-size:1.12rem;margin-right:10px}.Content .head .popup-box-icon .not-readed{position:absolute;top:-1px;right:2px;background-color:#ff3c7e;border-radius:50%;color:#fff;font-size:10px;line-height:1;padding:4px 6.5px;opacity:1;transition-duration:350ms}.Content .head .popup-box-icon .not-readed.opacity-0{animation:scale0 350ms forwards ease-in}.Content .head .popup-box-icon:hover{background-color:rgba(199,199,199,0.2);cursor:pointer;color:#454545}.Content .head .popup-box{animation:displayBoxEasyInMinified 250ms forwards ease-in;position:absolute;top:calc(60px - 10px);right:10px;width:0px;max-height:400px;border-radius:0.25rem;border:1px solid rgba(0,0,0,0.15);opacity:0;transition-duration:350ms;overflow:hidden;transform-origin:top right;background-color:#fff;z-index:2}@media screen and (min-width: 500px){.Content .head .popup-box{animation:displayBoxEasyIn 250ms forwards ease-in}}.Content .head .popup-box h1{font-weight:bold;color:#313435;font-size:0.987rem;box-sizing:border-box;padding:5px 20px 10px 20px;border-bottom:1px solid rgba(0,0,0,0.0625)}.Content .head .popup-box h1 i{color:#212529;font-size:0.987rem;margin-right:20px}.Content .head .popup-box .popup-box-list ul,.Content .head .popup-box .popup-box-list .no-data-ul,.Content .head .popup-box .popup-box-list .data-ul{list-style-type:none;list-style:none;overflow:hidden;overflow-anchor:none;position:relative;margin:0px;padding:0px;margin-top:-10px}.Content .head .popup-box .popup-box-list ul a,.Content .head .popup-box .popup-box-list .no-data-ul a,.Content .head .popup-box .popup-box-list .data-ul a{display:block;width:100%;height:100%}.Content .head .popup-box .popup-box-list ul li,.Content .head .popup-box .popup-box-list .no-data-ul li,.Content .head .popup-box .popup-box-list .data-ul li{margin:0px;padding:0px;position:relative;list-style-type:none;font-size:14px;color:#72777a;letter-spacing:0.2px;border-bottom:1px solid rgba(0,0,0,0.0625);z-index:1;transition-duration:350ms;height:70px;line-height:70px;box-sizing:border-box;padding:15px 20px}.Content .head .popup-box .popup-box-list ul .not-readed:before,.Content .head .popup-box .popup-box-list .no-data-ul .not-readed:before,.Content .head .popup-box .popup-box-list .data-ul .not-readed:before{content:'';position:absolute;left:0;top:0;width:3px;height:100%;z-index:-1;background-color:rgba(0,105,148,0.7)}.Content .head .popup-box .popup-box-list ul .single-data-div,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-div,.Content .head .popup-box .popup-box-list .data-ul .single-data-div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:20px}.Content .head .popup-box .popup-box-list ul .logout:hover,.Content .head .popup-box .popup-box-list .no-data-ul .logout:hover,.Content .head .popup-box .popup-box-list .data-ul .logout:hover{cursor:pointer}.Content .head .popup-box .popup-box-list ul .single-data-li-account,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account{height:50px;line-height:50px;box-sizing:border-box;padding:10px 20px;line-height:30px}.Content .head .popup-box .popup-box-list ul .single-data-li-account .popup-box-button,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account .popup-box-button,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account .popup-box-button{color:#72777a !important;font-size:0.87rem;box-sizing:border-box;text-decoration:none}.Content .head .popup-box .popup-box-list ul .single-data-li-account .popup-box-button i,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account .popup-box-button i,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account .popup-box-button i{color:#212529 !important;font-size:0.87rem;margin-right:20px}.Content .head .popup-box .popup-box-list ul .single-data-li-account:hover,.Content .head .popup-box .popup-box-list ul .single-data:hover,.Content .head .popup-box .popup-box-list .no-data-ul .single-data-li-account:hover,.Content .head .popup-box .popup-box-list .no-data-ul .single-data:hover,.Content .head .popup-box .popup-box-list .data-ul .single-data-li-account:hover,.Content .head .popup-box .popup-box-list .data-ul .single-data:hover{background-color:rgba(244,244,244,0.5) !important}.Content .head .popup-box .popup-box-list .no-data-ul li,.Content .head .popup-box .popup-box-list .data-ul li{height:50px;line-height:50px;padding:1px 20px 0px 20px}.Content .head .popup-box .popup-box-list .data-ul li:hover{cursor:pointer;background-color:#f44559 !important;color:#fff}.Content .head .popup-box .privacy-terms{text-decoration:none;margin:inherit;padding:inherit;color:inherit;font-size:inherit}.Content .head .popup-box .popup-box-all{display:block;height:50px;line-height:30px;color:#7c8695;font-size:0.923rem;box-sizing:border-box;padding:10px 20px;text-align:center;transition-duration:350ms;text-decoration:none}.Content .head .popup-box .popup-box-all i{font-size:0.87rem;margin-left:20px}.Content .head .popup-box .popup-box-all:hover{cursor:pointer;background-color:#f44559;color:#fff}.Content .head .popup-box.fade-out{animation:displayBoxEasyOutMinified 250ms forwards ease-in}@media screen and (min-width: 500px){.Content .head .popup-box.fade-out{animation:displayBoxEasyOut 250ms forwards ease-in}}.Content-min{left:50px;width:calc(100% - 50px)}.Content.minified{left:0;width:100vw}.close-side-bar{display:block;position:absolute;top:20px;right:15px;font-size:10px;border-radius:50%;border:1px solid #313435;width:16px;height:16px;line-height:13px;text-align:left;box-sizing:border-box;padding-left:4px}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.Login,.LoginRequired{max-width:350px;width:100%;height:100%;min-height:800px;margin:80px auto;border-radius:5px;border:1px solid #dadce0;box-shadow:0px 0px 6px transparent;transition-duration:350ms;box-sizing:border-box;padding:10px}@media screen and (min-width: 500px){.Login,.LoginRequired{max-width:600px}}.Login .button,.LoginRequired .button{box-sizing:border-box;border-radius:5px;background-color:#1873CC;letter-spacing:0.02rem;color:#fff;font-size:0.87rem;text-align:center;border:none;height:40px;line-height:30px;display:block;margin:10px 20px 20px 20px;box-shadow:0px 0px 3px transparent;transition-duration:350ms;float:right;padding:5px 20px;font-weight:bold;text-decoration:none}.Login .button-link,.LoginRequired .button-link{float:left;text-decoration:none;background-color:#36ACA3}.Login .button:hover,.LoginRequired .button:hover{cursor:pointer;box-shadow:0px 0px 3px #1873CC}.Login .button-link:hover,.LoginRequired .button-link:hover{box-shadow:0px 0px 3px #36ACA3}.Login .logo,.LoginRequired .logo{width:128px;display:block;margin:20px auto 0 auto}.Login .logo img,.LoginRequired .logo img{width:100%;height:100%}.Login .error-message,.LoginRequired .error-message{box-sizing:border-box;padding:0px 20px;min-height:30px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;color:#f44559;animation:opacity 350ms linear ease-in}.Login .error-message i,.LoginRequired .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Login .current-user,.LoginRequired .current-user{padding:20px;font-size:0.87rem}.Login .current-user i,.LoginRequired .current-user i{margin:0 10px}.Login .button-logout,.LoginRequired .button-logout{float:none;display:block;margin:0 auto}.Login .forgot-password,.LoginRequired .forgot-password{width:100%;box-sizing:border-box;padding:10px;margin:0 13px}.Login .forgot-password a,.LoginRequired .forgot-password a{line-height:30px;color:rgba(39,39,39,0.77);text-decoration:none}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.Login,.User{min-width:600px;width:100%;height:100%;min-height:800px;margin:80px auto;border-radius:5px;border:1px solid #dadce0;box-shadow:0px 0px 6px transparent;transition-duration:350ms;box-sizing:border-box;padding:10px}.Login .FullScreenList .holder-ul,.User .FullScreenList .holder-ul{min-width:500px}.Login .FullScreenList input,.User .FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;border:none}.Login .FullScreenList .no-data,.User .FullScreenList .no-data{height:50px;line-height:50px;color:rgba(0,0,0,0.77);text-align:center}.Login .FullScreenList ul li,.User .FullScreenList ul li{min-width:360px;max-width:500px;border-bottom:1px solid #dadce0}.Login .FullScreenList ul li:hover,.User .FullScreenList ul li:hover{cursor:pointer;background-color:rgba(199,199,199,0.2)}.Login .single-box,.User .single-box{position:relative;box-sizing:border-box;padding:10px}.Login .single-box input,.User .single-box input{margin:5px 10px;width:calc(100% - 20px);height:50px;line-height:50px;color:rgba(0,0,0,0.77);padding:0;border:1px solid rgba(69,69,69,0.2);border-radius:5px;transition-duration:350ms;box-sizing:border-box;padding:12px 14px;z-index:1;position:relative;background-color:transparent}.Login .single-box .title,.User .single-box .title{position:absolute;top:31px;left:30px;color:rgba(0,0,0,0.47);letter-spacing:0.02rem;display:block;width:auto;background-color:#fff;box-sizing:border-box;padding:0 5px;transition-duration:350ms;transform:scale(1.1);width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.Login .single-box.focus .title,.User .single-box.focus .title{top:5px;left:25px;transform:scale(0.9);color:#1873CC;z-index:2}.Login .single-box.focus input,.User .single-box.focus input{border:1px solid #1873CC}.Login .button,.User .button{box-sizing:border-box;border-radius:5px;background-color:#1873CC;letter-spacing:0.02rem;color:#fff;font-size:0.87rem;text-align:center;border:none;height:40px;line-height:30px;display:block;margin:10px 20px 20px 20px;box-shadow:0px 0px 3px transparent;transition-duration:350ms;float:right;padding:5px 20px;font-weight:bold}.Login .button-link,.User .button-link{float:left;text-decoration:none;background-color:#36ACA3}.Login .button-delete,.User .button-delete{background-color:#f44559}.Login .button:hover,.User .button:hover{cursor:pointer;box-shadow:0px 0px 3px #1873CC}.Login .button-link:hover,.User .button-link:hover{box-shadow:0px 0px 3px #36ACA3}.Login .button-delete:hover,.User .button-delete:hover{box-shadow:0px 0px 3px #f44559}.Login .logo,.User .logo{width:128px;display:block;margin:20px auto 0 auto}.Login .logo img,.User .logo img{width:100%;height:100%}.Login .error-message,.User .error-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(244,69,89,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 20px;border-radius:5px}.Login .error-message i,.User .error-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Login .successMessages-message,.User .successMessages-message{box-sizing:border-box;padding:0px 10px;height:auto;overflow:auto;line-height:30px;font-size:0.87rem;background-color:rgba(71,180,118,0.1);color:rgba(0,0,0,0.77);animation:opacity 350ms linear ease-in;margin:10px 20px;border-radius:5px}.Login .successMessages-message i,.User .successMessages-message i{font-size:inherit;color:inherit;margin:0 10px 0 5px}.Login .current-user,.User .current-user{padding:20px;font-size:0.87rem}.Login .current-user i,.User .current-user i{margin:0 10px}.Login .select-wrapper,.User .select-wrapper{box-sizing:border-box;padding:0px;width:calc(100% - 20px);margin:13px;position:relative;z-index:1;margin:10px 20px}.Login .select-wrapper .text,.User .select-wrapper .text{position:absolute;top:-7px;left:13px;color:rgba(0,0,0,0.47);letter-spacing:0.02rem;transform:scale(1.1);box-sizing:border-box;padding:0 5px;transition-duration:350ms;width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.Login .down,.User .down{font-size:20px;position:absolute;right:20px;top:10px;color:#202124;pointer-events:none;z-index:2}.Login select,.Login .select,.User select,.User .select{-moz-appearance:none;-webkit-appearance:none;appearance:none;border:none;width:100%;height:40px;padding-left:10px;color:rgba(0,0,0,0.47);font-family:'Open Sans', sans-serif;border-radius:3px;outline:none;cursor:pointer;background-color:#fff;border:1px solid #dadce0;font-size:1.1rem}.Login .select-account,.User .select-account{width:calc(100% - 60px)}.Login .select-account .down,.User .select-account .down{right:13px;top:13px}.Login .select,.User .select{line-height:40px;font-size:1rem !important;color:rgba(0,0,0,0.77) !important}.Login select:focus::-ms-value,.User select:focus::-ms-value{background-color:transparent}.Login select option,.User select option{color:rgba(0,0,0,0.47);letter-spacing:0.02rem;transform:scale(1.1)}.Login select::-ms-expand,.User select::-ms-expand{display:none}.Login select{width:calc(100% - 20px)}.Login .down{right:30px}.privacy-terms-checkbox{width:100%;box-sizing:border-box;padding:15px 10px;text-align:left;font-size:0.87rem;background-color:rgba(255,255,255,0.95);color:#72777a;text-overflow:ellipsis;overflow:hidden;margin:0 10px;height:50px;line-height:27px}.privacy-terms-checkbox .switch{width:40px;display:block;position:relative;padding-left:0px;cursor:pointer;font-size:22px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-left:3px}.privacy-terms-checkbox .switch input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.privacy-terms-checkbox .switch-slider{position:absolute;top:0;left:0;height:25px;width:25px;border-radius:5px;transition-duration:350ms}.privacy-terms-checkbox .switch-slider-not-checked:before{content:'';position:absolute;top:0;left:0;width:25px;height:25px;line-height:25px;text-align:center;border-radius:5px;background-color:transparent;color:#fff;font-size:19px;font-weight:bold;transition-duration:350ms;border:1px solid #dadce0}.privacy-terms-checkbox .switch:hover input ~ .switch-slider{background-color:transparent}.privacy-terms-checkbox .switch input:checked ~ .switch-slider{background-color:rgba(71,180,118,0.7)}.privacy-terms-checkbox .switch-slider:after{content:'';position:absolute;display:none}.privacy-terms-checkbox .switch input:checked ~ .switch-slider:after{display:block}.privacy-terms-checkbox .switch .switch-slider:after{left:9px;top:5px;width:5px;height:10px;border:solid white;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.privacy-terms-checkbox .link{width:calc(100% - 40px)}.privacy-terms-checkbox .link a{text-decoration:none;color:#1873CC;font-size:1rem}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.DeleteAccount{position:fixed;background-color:rgba(0,0,0,0.6);animation:opacityScaleTopLeft 350ms forwards ease-in-out;z-index:2;transform:scaleZ(0);overflow:hidden}.DeleteAccount .box{margin:10vh auto;width:80vw;min-width:320px;max-width:800px;border-radius:5px;max-height:500px;background-color:#fff;animation:opacity 600ms forwards ease-in-out}.DeleteAccount .box .head{position:relative;width:100%;min-height:55px;height:auto;overflow:auto;background-color:#f44559;border-top-left-radius:4px;border-top-right-radius:4px}.DeleteAccount .box .head .close{position:absolute;top:10px;right:15px;font-size:2rem;color:#fff}.DeleteAccount .box .head .close:hover{cursor:pointer}.DeleteAccount .box .head p{box-sizing:border-box;padding:5px;font-size:1.2rem;color:#fff;margin:0px;min-height:30px;height:auto;line-height:30px}.DeleteAccount .box .content p{box-sizing:border-box;padding:20px;font-size:1.2rem;color:#202124;margin:0px;text-align:center;min-height:30px;height:auto;line-height:30px}.DeleteAccount.animationBack{animation:opacityScaleTopLeft_back 500ms forwards ease-in-out}.DeleteAccount.animationBack .box{animation:opacity_back 200ms forwards ease-in-out}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.single-box{position:relative;box-sizing:border-box;padding:10px;transition-duration:350ms}.single-box input,.single-box textarea{margin:5px 10px;width:calc(100% - 20px);max-width:calc(100% - 20px);height:50px;line-height:50px;color:rgba(0,0,0,0.77);padding:0;border:1px solid rgba(69,69,69,0.2);border-radius:5px;transition-duration:350ms;box-sizing:border-box;padding:12px 14px;z-index:1;position:relative;background-color:transparent}.single-box textarea{height:auto;line-height:25px;min-height:calc(35vh - 60px)}.single-box .title{position:absolute;top:29px;left:30px;color:rgba(0,0,0,0.47);letter-spacing:0.02rem;display:block;width:auto;background-color:#fff;box-sizing:border-box;padding:0 5px;transition-duration:350ms;transform:scale(1.1);width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.single-box.focus .title{top:5px;left:25px;transform:scale(0.9);color:#1873CC;z-index:2}.single-box.focus input,.single-box.focus textarea{border:1px solid #1873CC}.single-box-suggestions{position:relative;box-sizing:border-box;padding:10px;margin:10px 20px;top:0px;transition-duration:350ms;border:1px solid rgba(69,69,69,0.1);border-radius:5px;min-height:50px;height:auto;overflow:auto}.single-box-suggestions input{border:none;min-height:30px;height:auto;overflow-y:auto;z-index:2;display:inline-block;min-width:300px;clear:both;line-height:27px;font-size:14px;color:rgba(69,69,69,0.7);box-sizing:border-box;padding-left:2px}.single-box-suggestions .search-icon{width:70px;height:100%;position:absolute;right:0;top:0px;display:flex;justify-content:space-around;flex-direction:column;text-align:center;background-color:#1873CC;color:#fff;box-shadow:0px 0px 3px transparent;margin:auto}.single-box-suggestions .search-icon:hover{cursor:pointer;box-shadow:0px 0px 3px #1873CC}.single-box-suggestions .choosed{margin-right:20px;max-width:calc(100% - 70px)}.single-box-suggestions .choosed .item{float:left;box-sizing:border-box;padding:2px 35px 2px 5px;margin:3px 5px;border-radius:25px;border:1px solid #f8a51b;position:relative;font-size:14px;color:rgba(69,69,69,0.7)}.single-box-suggestions .choosed .item .remove{width:12px;height:12px;display:inline-block;line-height:10px;text-align:center;font-size:18px;position:absolute;top:3px;right:9px;padding:1px;color:rgba(69,69,69,0.9);border-radius:50%;overflow:hidden}.single-box-suggestions .choosed .item .remove:hover{background-color:rgba(30,144,255,0.1);cursor:pointer}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.NoData{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.NoData img{max-height:165px;display:block;margin:75px auto 30px auto}.NoDataMessages{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.NoDataMessages ul{display:block;text-align:left;list-style:none;margin:10px auto;padding:0;max-width:calc(100% - 20px)}.NoDataMessages ul li{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.NoDataMessages ul i{margin-right:20px}.NoDataMessages img{max-height:165px;display:block;margin:75px auto 30px auto}.NoDataFavourites,.NoChatDataHistory{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.NoDataFavourites img,.NoChatDataHistory img{max-height:165px;display:block;margin:35px auto 30px auto}.NoDataCookies,.NoDataIframes,.NoDataImages,.NoDataLoadingImages,.NoDataTabs{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.NoDataCookies .h1-title,.NoDataIframes .h1-title,.NoDataImages .h1-title,.NoDataLoadingImages .h1-title,.NoDataTabs .h1-title{max-width:90%;margin:50px 5%;text-align:center}.NoDataCookies img,.NoDataIframes img,.NoDataImages img,.NoDataLoadingImages img,.NoDataTabs img{max-width:80vw;max-height:calc(70vh - 50px);display:block;margin:50px auto;border-radius:5px}.NoDataChat{width:100%;height:100%;margin:auto;text-align:center;line-height:50px}.NoDataChat .h1-title{max-width:90%;margin:0px 5%;text-align:center;font-size:1.4rem;color:rgba(69,69,69,0.8)}.NoDataChat img{max-width:80vw;max-height:40vh;display:block;margin:10px auto;border-radius:5px}.paging{background-color:#f9fafb;display:block;min-height:50px;box-sizing:border-box;padding:20px;border-bottom:1px solid #dadce0;height:auto;overflow:auto}.paging .buttons{float:right;margin-right:5px}.paging .prev-button,.paging .next-button{display:inline-block;width:35px;height:35px;line-height:35px;text-align:center;font-size:0.75rem;margin:0 10px;border-radius:3px;background-color:#f44559;color:#fff}.paging .prev-button:hover,.paging .next-button:hover{cursor:pointer}.paging .prev-button.deactivated,.paging .next-button.deactivated{color:rgba(69,69,69,0.1)}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.GlobalErrors{position:fixed;bottom:20px;left:20px;background-color:transpartent;z-index:10;color:#fff}.GlobalErrors .single-error{background-color:#fff;border:1px solid #dadce0;border-radius:5px;margin:10px 0;position:relative;max-width:350px}.GlobalErrors .single-error h1{line-height:30px;color:#202124;font-size:0.91rem;box-sizing:border-box;padding:0 20px}.GlobalErrors .single-error .text{line-height:22px;color:rgba(69,69,69,0.8);font-size:0.87rem;text-align:justify;box-sizing:border-box;padding:0 20px}.GlobalErrors .single-error .options{width:100%;margin-top:15px;border-top:1px solid #dadce0;box-sizing:border-box;padding:5px 0}.GlobalErrors .single-error .options .single-option{width:50%;text-align:center;height:50px;line-height:50px;transition-duration:350ms}.GlobalErrors .single-error .options .single-option,.GlobalErrors .single-error .options a{color:rgba(39,39,39,0.7);font-size:0.91rem;text-decoration:none}.GlobalErrors .single-error .options .single-option:hover,.GlobalErrors .single-error .options a:hover{cursor:pointer;color:#131313}.FullScreenList{position:fixed;top:50vh;left:50vw;width:0;height:0;overflow:hidden;background-color:rgba(0,0,0,0.3);z-index:9999999999;animation:scaleIt 300ms forwards ease-in;display:flex}@keyframes scaleIt{0%{top:50vh;left:50vw;width:0;height:0;transform:scale(0)}100%{top:0;left:0;width:100vw;height:100vh;transform:scale(1)}}.FullScreenList .holder-ul{max-height:calc(100vh - 60px);margin:30px auto;box-sizing:border-box;background-color:#fff;border-radius:5px;overflow:hidden}.FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;min-height:40px;line-height:40px;border-bottom:2px solid #a9a9a9 !important}.FullScreenList .ul{height:calc(100% - 50px);list-style:none;overflow-x:hidden;overflow-y:auto;margin:0;padding:0}.FullScreenList .li{list-style:none;min-height:40px;line-height:40px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;word-wrap:none;box-sizing:border-box;padding:0 30px;width:100%}.FullScreenList .icon-close{position:absolute;top:-50px;right:30px;font-size:3rem}.FullScreenList .icon-close:hover{cursor:pointer;color:#f44559}.FullScreenList .color-white{color:#fff}.FullScreenList.back{animation:scaleItBack 300ms forwards ease-in}@keyframes scaleItBack{0%{top:0;left:0;width:100vw;height:100vh;transform:scale(1)}100%{top:50vh;left:50vw;width:0;height:0;transform:scale(0)}}.FullScreenList .span-close{position:absolute;top:3px;right:20px;color:#fff;font-size:3rem}.FullScreenList .span-close:hover{cursor:pointer;color:#f44559}.FullScreenList .holder-ul{min-width:250px}.FullScreenList input{width:100%;box-sizing:border-box;padding:5px 10px;border:none}.FullScreenList .no-data{max-width:90%;margin:0 5%;height:50px;line-height:50px;color:rgba(0,0,0,0.77);text-align:center}.FullScreenList ul li{min-width:360px;max-width:500px;border-bottom:1px solid #dadce0}.FullScreenList ul li:hover{cursor:pointer;background-color:rgba(199,199,199,0.2)}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.ErrorMessagesLearnMore .box{background-color:#fff;border-bottom:1px solid #dadce0;margin:0 1px;position:relative;width:100%;line-height:30px;color:#202124;font-size:1.07rem;text-align:justify;box-sizing:border-box;padding:20px}.ErrorMessagesLearnMore .box h1{color:rgba(0,0,0,0.77)}.ErrorMessagesLearnMore .box p{line-height:30px;color:rgba(39,39,39,0.77)}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.PrivacyTerms{box-sizing:border-box;padding:20px 40px}.PrivacyTerms .text h1{color:rgba(0,0,0,0.77)}.PrivacyTerms .text p{line-height:30px;color:rgba(39,39,39,0.77)}.PrivacyTerms .text ul{padding:0;margin:20px}.PrivacyTerms .text ul li{box-sizing:border-box;padding:5px 10px;margin:5px;line-height:30px;color:rgba(39,39,39,0.77)}.loading-animation{position:fixed;top:0;left:0;width:100%;height:4px;z-index:1;background-color:#fff}.loading-animation:after{content:'';width:40%;height:4px;background:linear-gradient(to right, #fff 0%, #f44559 30%, #f44559 70%, #fff 100%);display:block;position:absolute;top:0;animation:animateLoadingChatDiv 1500ms linear infinite}.select-wrapper{box-sizing:border-box;padding:0px;position:relative;z-index:1}.select-wrapper .select-wrapper-span{position:relative;z-index:1}.select-wrapper .icon-down{position:absolute;top:0;right:-25px;letter-spacing:0.02rem;box-sizing:border-box;padding:0 5px;transition-duration:350ms;width:auto;z-index:1;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;margin:0;color:#272727}.select-wrapper.inline{display:inline-block}.select-wrapper.inline{display:block}.select-wrapper.w-100{width:100%}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.DownloadImages .NoDataImages h1{text-align:center}.DownloadImages .left{border-right:none !important;width:220px}.DownloadImages .right{border-left:1px solid #dadce0}.DownloadImages h2{margin:20px 0;font-size:0.87rem}.DownloadImages .tabs-url{margin:0 20px 20px 20px;font-size:0.87rem;line-height:30px;height:30px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.DownloadImages .tabs{max-width:1400px;margin:0 auto}.DownloadImages .tabs .single-tab{width:calc(100% - 40px);height:300px;box-sizing:border-box;padding:0 20px 40px 20px;margin:20px;display:inline-block;border-radius:5px;box-shadow:0px 0px 6px #dadce0;overflow:hidden;position:relative;transition-duration:350ms}.DownloadImages .tabs .single-tab .iframe-disabler{position:relative;top:0;left:15%;width:70%;height:150px;background-color:transparent;border-radius:7px;z-index:3}.DownloadImages .tabs .single-tab .iframe-disabler img{display:block;width:175px;margin:0 auto}@media screen and (min-width: 720px){.DownloadImages .tabs .single-tab{width:calc(50% - 40px);height:300px}}@media screen and (min-width: 1400px){.DownloadImages .tabs .single-tab{width:calc(33% - 40px);height:300px}}.DownloadImages .tabs .single-tab:hover{cursor:pointer;box-shadow:0px 0px 6px #f44559}.DownloadImages .tabs-active .paging{display:flex;flex-direction:column;background-color:#f9fafb;min-height:60px;box-sizing:border-box;padding:4.5px 10px;border-bottom:1px solid #dadce0}@media screen and (min-width: 1220px){.DownloadImages .tabs-active .paging{display:block}}.DownloadImages .tabs-active .paging .filters,.DownloadImages .tabs-active .paging .actions,.DownloadImages .tabs-active .paging .buttons{display:block}.DownloadImages .tabs-active .paging .buttons{width:120px;float:none;margin:0 auto 20px auto}.DownloadImages .tabs-active .paging .prev-button,.DownloadImages .tabs-active .paging .next-button{display:inline-block;width:35px;height:35px;line-height:35px;text-align:center;font-size:0.75rem;margin:0 10px;border-radius:3px;background-color:#f44559;color:#fff}.DownloadImages .tabs-active .paging .prev-button:hover,.DownloadImages .tabs-active .paging .next-button:hover{cursor:pointer}.DownloadImages .tabs-active .paging .prev-button.deactivated,.DownloadImages .tabs-active .paging .next-button.deactivated{color:rgba(69,69,69,0.2)}.DownloadImages .tabs-active .paging .actions{float:left;margin:0 0 10px 10px !important;display:block}.DownloadImages .tabs-active .paging .actions .button-action{display:inline-block;width:20px;height:35px;line-height:40px;text-align:center;font-size:0.75rem;border-radius:3px;background-color:transparent;font-size:1.47rem;color:#72777a;text-decoration:none}.DownloadImages .tabs-active .paging .actions span{font-size:0.87rem;color:#72777a;display:inline-block;margin-left:0px !important}.DownloadImages .tabs-active .paging .actions .archive-icon{color:goldenrod}.DownloadImages .tabs-active .paging .actions .archive-icon-all{color:#f44559}.DownloadImages .tabs-active .paging .actions .button-action:hover{cursor:pointer}.DownloadImages .tabs-active .paging .filters{display:flex;flex-direction:column;font-size:0.87rem;color:#72777a;padding:0 5px;min-height:30px;height:auto;overflow:auto}.DownloadImages .tabs-active .paging .filters span{display:inline-block;margin:0 10px}.DownloadImages .tabs-active .paging .filters .select-wrapper{float:left;display:block;margin:13px 0}.DownloadImages .tabs-active .paging .filters .select-wrapper .icon-down{margin:0 !important;color:#454545}.DownloadImages .tabs-active .paging .filters .select-wrapper:hover{cursor:pointer}.DownloadImages .tabs-active .paging .filters .selected{color:#272727;font-weight:bold}.DownloadImages .tabs-active .left{width:270px;height:calc(100vh - 60px);overflow:hidden;border-right:1px solid #dadce0}.DownloadImages .tabs-active .left ul{margin:0;padding:0;overflow-y:auto}.DownloadImages .tabs-active .left ul li{list-style:none;height:60px;line-height:60px;box-sizing:border-box;padding:0 20px;border-bottom:1px solid #dadce0;text-align:left;position:relative;overflow:hidden;text-overflow:ellipsis;font-size:1.1rem;color:rgba(69,69,69,0.7)}.DownloadImages .tabs-active .left ul li h2{overflow:hidden;text-overflow:ellipsis;margin:0;padding:0}.DownloadImages .tabs-active .left ul li:hover{cursor:pointer;background-color:rgba(69,69,69,0.1)}.DownloadImages .tabs-active .right{width:calc(100% - 270px);min-height:calc(100vh - 250px);overflow-x:hidden;overflow-y:auto;box-sizing:border-box}.DownloadImages .tabs-active .right .h1-sites{color:#72777a;font-size:21px}.DownloadImages .tabs-active .right .images{max-width:1620px;margin:0 auto}.DownloadImages .tabs-active .right .image-box{width:calc(100% - 40px);height:340px;margin:20px;display:inline-block;border-radius:5px;border:1px solid #dadce0;overflow:hidden;position:relative;text-align:center;transition-duration:350ms}.DownloadImages .tabs-active .right .image-box .star-add,.DownloadImages .tabs-active .right .image-box .star-remove{position:absolute;top:5px;right:5px;color:#ffeb3b;font-size:1.17rem}.DownloadImages .tabs-active .right .image-box .star-add:hover,.DownloadImages .tabs-active .right .image-box .star-remove:hover{cursor:pointer}.DownloadImages .tabs-active .right .image-box .star-remove:hover{color:#f44559}.DownloadImages .tabs-active .right .image-box .star-add:hover{color:#f44559}.DownloadImages .tabs-active .right .image-box img{display:block;max-width:100%;margin:30px auto;border-radius:5px;max-height:120px}.DownloadImages .tabs-active .right .image-box .text{box-sizing:border-box;padding:10px;line-height:15px;height:70px;overflow-y:auto;overflow-x:hidden;position:absolute;bottom:90px;left:0;width:100%;font-size:0.77rem}.DownloadImages .tabs-active .right .image-box .type{position:absolute;bottom:50px;left:0;height:40px;width:100%;background-color:#f44559;color:#fff;text-align:center;line-height:40px;font-size:0.87rem;word-wrap:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.DownloadImages .tabs-active .right .image-box .options{position:absolute;bottom:0;left:0;height:50px;width:100%;background-color:#1873CC}.DownloadImages .tabs-active .right .image-box .options i,.DownloadImages .tabs-active .right .image-box .options a{display:inline-block;width:30px;height:30px;line-height:30px;text-align:center;color:#fff;text-decoration:none;font-size:1.2rem;margin:10px}.DownloadImages .tabs-active .right .image-box .options i:hover,.DownloadImages .tabs-active .right .image-box .options a:hover{cursor:pointer}@media screen and (min-width: 720px){.DownloadImages .tabs-active .right .image-box{width:calc(50% - 50px)}}@media screen and (min-width: 1400px){.DownloadImages .tabs-active .right .image-box{width:calc(33% - 40px)}}@media screen and (min-width: 1600px){.DownloadImages .tabs-active .right .image-box{width:calc(19% - 35px)}}.loading-animation{position:fixed;top:0;left:0;width:100%;height:4px;z-index:1;background-color:#fff}.loading-animation:after{content:'';width:40%;height:4px;background:linear-gradient(to right, #fff 0%, #f44559 30%, #f44559 70%, #fff 100%);display:block;position:absolute;top:0;animation:animateLoadingChatDiv 1500ms linear infinite}html,body,#app{min-width:320px}body{overflow-x:hidden}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.AddonNotAvailable{position:fixed;top:60px;left:calc(200px + 1px);width:calc(100% - 200px);text-align:center;line-height:50px;background-color:#fff;height:100vh}.AddonNotAvailable img{max-height:165px;display:block;margin:40px auto}.AddonNotAvailable h1{padding:30px 0;color:#72777a}.AddonNotAvailable .dashboard-link{width:230px;margin:30px auto;display:block;box-sizing:border-box;padding:0 20px;text-align:center;font-size:0.87rem;text-decoration:none;border-radius:5px;border:1px solid #dadce0;background-color:#f44559;color:#fff;box-shadow:0px 0px 13px transparent;transition-duration:350ms;height:40px;line-height:40px}.AddonNotAvailable .dashboard-link:hover{box-shadow:0px 0px 13px #f44559}.bc-a{background-color:rgba(244,69,89,0.1)}.bc-b{background-color:rgba(244,69,89,0.1)}.bc-c{background-color:rgba(244,69,89,0.1)}.bc-d{background-color:rgba(81,45,168,0.1)}.bc-e{background-color:rgba(244,69,89,0.1)}.bc-f{background-color:rgba(244,69,89,0.1)}.bc-g{background-color:rgba(244,69,89,0.1)}.bc-h{background-color:rgba(244,69,89,0.1)}.bc-i{background-color:rgba(244,69,89,0.1)}.bc-j{background-color:rgba(244,69,89,0.1)}.bc-k{background-color:rgba(244,69,89,0.1)}.bc-l{background-color:rgba(244,69,89,0.1)}.bc-m{background-color:rgba(244,69,89,0.1)}.bc-n{background-color:rgba(244,69,89,0.1)}.bc-o{background-color:rgba(244,69,89,0.1)}.bc-p{background-color:rgba(244,69,89,0.1)}.bc-q{background-color:rgba(244,69,89,0.1)}.bc-r{background-color:rgba(244,69,89,0.1)}.bc-s{background-color:rgba(244,69,89,0.1)}.bc-t{background-color:rgba(244,69,89,0.1)}.bc-u{background-color:rgba(244,69,89,0.1)}.bc-v{background-color:rgba(244,69,89,0.1)}.bc-w{background-color:rgba(71,180,118,0.1)}.bc-x{background-color:rgba(244,69,89,0.1)}.bc-y{background-color:rgba(244,69,89,0.1)}.bc-z{background-color:rgba(244,69,89,0.1)}.w-100{width:100% !important;clear:both}.block{display:block}.flex{display:flex}.flex-row{flex-direction:row}.flex-column{flex-direction:column}.flex-start{justify-content:flex-start}.flex-space-around{justify-content:space-around}.flex-space-between{justify-content:space-between}.relative{position:relative}.font-input{font-weight:400;font-size:1rem;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.ff-title{font-family:Roboto,-apple-system,system-ui,BlinkMacSystemFont,Segoe UI,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif}.h1-title{color:#202124;font-size:24px;font-weight:400;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.text-center{text-align:center}.ff-roboto{font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.buttons-group{box-sizing:border-box;padding:10px;max-width:90%;margin:20px 5%}.buttons-group-delete-account{box-sizing:border-box;padding:10px;max-width:90%;margin:0 5%}.yellow{color:#ffeb3b}.red{color:#f44559}.green{color:#36ACA3}.lime{color:#C3FAE8}.dodgerblue{color:#1873CC}.little-gray{color:rgba(69,69,69,0.7)}.action-icon{color:#313435;opacity:0.8}.action-icon:hover{cursor:pointer}.py-2{padding:20px 0}.my-2{margin:20px 0}.my-0{margin:0px 0 !important}.no-padding{padding:0px !important}.mr-2{margin-right:20px}h1,.h1{color:rgba(0,0,0,0.77)}.text-center{text-align:center}.icon-chat{color:rgba(71,180,118,0.7)}.icon-security{color:rgba(248,165,27,0.7)}.icon-images{color:#f44559}.icon-messages{color:#7a7a7a}.icon-notifications{color:rgba(244,69,89,0.7)}.icon-iframes{color:rgba(71,180,118,0.7)}.icon-cookies{color:#DEB887}.single-entry,.popup-box-icon{color:#4f4f4f !important}.Home{overflow:hidden !important;min-height:calc(100vh - 60px);position:relative;z-index:1;background-color:rgba(105,130,239,0.3)}.Home .Images-image{position:absolute;top:0;left:0;width:100%;height:100%;z-index:-1}.Home h1{font-size:33px !important;margin:50px 0;color:#fff !important}.Home .images-count{line-height:150px;font-size:43px !important;color:rgba(244,69,89,0.7);font-weight:bold}html,body{border-radius:5px}html,body,#app,.Content{overflow:hidden;min-width:320px}.title-light{font-size:0.823rem;color:#7a7a7a;max-width:90%;margin:0 5%;text-align:center}#app .DownloadImages .filters{display:flex;flex-direction:column;font-size:0.87rem;color:#72777a;padding:0 5px;min-height:30px;height:auto;overflow:auto}#app .DownloadImages .filters span{display:inline-block;margin:0 10px}#app .DownloadImages .filters .select-wrapper{float:left;display:block;margin:13px 0}#app .DownloadImages .filters .select-wrapper .icon-down{margin:0 !important;color:#454545}#app .DownloadImages .filters .select-wrapper:hover{cursor:pointer}#app .DownloadImages .filters .selected{color:#272727;font-weight:bold}#app .DownloadImages .image-box{width:calc(100% - 40px);height:418px;margin:20px;display:inline-block;border-radius:5px;border:1px solid #dadce0;overflow:hidden;position:relative;text-align:center;transition-duration:350ms}#app .DownloadImages .image-box .star-add,#app .DownloadImages .image-box .star-remove{position:absolute;top:5px;right:5px;color:#ffeb3b;font-size:1.17rem}#app .DownloadImages .image-box .star-add:hover,#app .DownloadImages .image-box .star-remove:hover{cursor:pointer}#app .DownloadImages .image-box .star-remove:hover{color:#f44559}#app .DownloadImages .image-box .star-add:hover{color:#36ACA3}#app .DownloadImages .image-box img{display:block;max-width:100%;margin:30px auto;border-radius:5px;max-height:200px}#app .DownloadImages .image-box .text{box-sizing:border-box;padding:10px;line-height:30px;height:100px;overflow-y:auto;overflow-x:hidden;position:absolute;bottom:90px;left:0;width:100%}#app .DownloadImages .image-box .type{position:absolute;bottom:50px;left:0;height:40px;width:100%;background-color:#f44559;color:#fff;text-align:center;line-height:40px}#app .DownloadImages .image-box .options{position:absolute;bottom:0;left:0;height:50px;width:100%;background-color:#1873CC}#app .DownloadImages .image-box .options i,#app .DownloadImages .image-box .options a{display:inline-block;width:30px;height:30px;line-height:30px;text-align:center;color:#fff;text-decoration:none;font-size:1.2rem;margin:10px}#app .DownloadImages .image-box .options i:hover,#app .DownloadImages .image-box .options a:hover{cursor:pointer}@media screen and (min-width: 720px){#app .DownloadImages .image-box{width:calc(50% - 50px)}}@media screen and (min-width: 1400px){#app .DownloadImages .image-box{width:calc(33% - 40px)}}@media screen and (min-width: 1600px){#app .DownloadImages .image-box{width:calc(24% - 35px)}}#app .Content,#app .Content.minified,#app .Main{width:100%}#app .Main .ContentBody h1{text-align:center;color:#202124;font-size:19px;font-weight:400;line-height:30px}#app .Main .ContentBody .link{width:230px;margin:30px auto;display:block;box-sizing:border-box;padding:10px 20px;text-align:center;color:#212529;font-size:0.87rem;text-decoration:none;border-radius:5px;border:1px solid #dadce0;background-color:#f44559;color:#fff;box-shadow:0px 0px 8px transparent;transition-duration:350ms}#app .Main .ContentBody .link:hover{box-shadow:0px 0px 8px #f44559}#app .Content{height:100vh;overflow-x:hidden;overflow-y:auto}#app .ContentStaticHeight{overflow-y:auto;max-height:calc(100% - 50px);height:auto;padding-bottom:20px}#app .SideBar{width:200px}#app .SideBar.SideBar-min{width:50px}#app .SideBar.SideBar-min:hover{width:200px}#app .Content{width:calc(100% - 200px);left:200px}#app .Content.Content-min{width:calc(100% - 50px);left:50px}#app .Content.minified{left:0}\n",""]),e.exports=t}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,